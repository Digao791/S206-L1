13:02:41.153 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:02:42.152 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:02:42.405 [main] DEBUG com.intuit.karate - request:
1 > GET https://gorest.co.in
1 > Host: gorest.co.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:02:44.083 [main] DEBUG com.intuit.karate - response time in milliseconds: 1668
1 < 200
1 < Date: Fri, 01 Dec 2023 16:02:44 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Cache-Control: max-age=0, private, must-revalidate
1 < feature-policy: camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'
1 < link: </assets/application-c07a59afdf8631a30ac88e98f48da8012fcecb39db5c5ce05a985950b2773bac.css>; rel=preload; as=style; nopush
1 < referrer-policy: strict-origin-when-cross-origin
1 < x-content-type-options: nosniff
1 < x-download-options: noopen
1 < x-frame-options: SAMEORIGIN
1 < x-permitted-cross-domain-policies: none
1 < x-request-id: aee2fb7d-a4e5-4c32-9b81-0d98e4133da3
1 < x-runtime: 0.056052
1 < x-xss-protection: 0
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=h6wsO3XcLCptLDpD9Elys1iZ8U9FOhBu%2FtCPUxXpNeNzJGwg2jdaTyvOaEjkMhLo9L15SSVH82c9x2z7iZZDMeqMTHlTFGxj9d3%2F0gRmU4JXxk1ny8e%2BcPvTki9RYIg%3D"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 82ec8e5ae9bca604-GRU
1 < alt-svc: h3=":443"; ma=86400
1 < Set-Cookie: _gorest_session=awB0IVQXr1N4TPWgYRzuCw8fcJS2agN%2FmlXCucM%2BjNCLrsejPpm5Um5Akq3V6oVuRcKwhBjC2SO2tU2DK7w0dcTPtUTM7SkT54PsUt4cchSWKFWXxUjkPAYqDcezCVo4agTODXWNv5%2Bs1X%2FDYFPQlyiiAO8s4AAOVyPfKowvqkMSjhpXisNTd7CX1fPtAkeYR5AwaulY3HdMXGLZUBh58dRsvWsrT0XZfqQZ5wjVdYswUtk9PzPsyV6CpftBvjNC9BjE%2Fude%2F2iHWlonn5MWRgQByr9f7Uo%3D--cseS3vXaOSr%2BdWfT--u7ACBETqdkd9lg1alneyuA%3D%3D; Domain=gorest.co.in
<!DOCTYPE html><html><head><meta charset="utf-8" /><meta content="width=device-width, initial-scale=1, shrink-to-fit=no" name="viewport" /><link href="/favicon.ico" rel="icon" type="image/x-icon" /><title>GraphQL and REST API for Testing and Prototyping | GO REST</title>
<meta name="description" content="24/7 online fake GraphQL and REST API service for quick testing and prototyping of web and android applications. Supports authentication, custom rate limiting, response format negotiation">
<meta name="keywords" content="graphql, rest api, fake data, api testing, graphql testing, json response, xml response, oauth, rate limiting"><meta name="csrf-param" content="authenticity_token" />
<meta name="csrf-token" content="PzLhIh3hPgbt8VuOmRT3EONI4vR-Tv_bF7i9eIoiTjSi8YK_EsySAcjfNhevcaEvo-5U4nprlS6odKOYWWhQ7A" /><link rel="stylesheet" href="/assets/application-c07a59afdf8631a30ac88e98f48da8012fcecb39db5c5ce05a985950b2773bac.css" media="all" data-turbolinks-track="reload" /><script src="/packs/js/application-194ed409298f13f197d2.js" data-turbolinks-track="reload" defer="defer"></script><script async="true" crossorigin="anonymous" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4930099895671899"></script><script async="true" src="https://www.googletagmanager.com/gtag/js?id=G-7KR6VNWHWS"></script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-7KR6VNWHWS');</script></head><body><nav class="navbar navbar-expand-lg navbar-dark bg-dark sticky-top"><div class="container"><a class="navbar-brand" href="/"><i class="fas fa-exchange-alt"></i> Go REST</a><button aria-controls="AppNavBar" aria-expanded="false" aria-label="Toggle navigation" class="navbar-toggler" data-bs-target="#AppNavBar" data-bs-toggle="collapse" type="button"><span class="navbar-toggler-icon"></span></button><div class="collapse navbar-collapse" id="AppNavBar"><ul class="navbar-nav ms-auto"><li class="nav-item"><a class="nav-link" href="/chandamama-stories"><i class="fas fa-cloud-moon"></i> Chandamama Stories</a></li><li class="nav-item"><a class="nav-link" href="/qa"><i class="fas fa-life-ring"></i> Help</a></li><li class="nav-item"><a class="nav-link" href="/rest-console"><i class="fab fa-linux"></i> Rest Console</a></li><li class="nav-item dropdown"><a aria-expanded="false" class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" id="ToolsDropDown" role="button"><i class="fas fa-tools"></i> Tools</a><ul aria-labelledby="ToolsDropDown" class="dropdown-menu"><li class><a class="dropdown-item" href="/tools/base64-encode-decode">Base64 Encode/Decode</a></li><li class><a class="dropdown-item" href="/tools/url-encode-decode">Url Encode/Decode</a></li><li class><a class="dropdown-item" href="/tools/gcode-translator">G-Code Translator</a></li></ul></li><li class="nav-item"><a class="nav-link" href="/consumer/login">Login</a></li></ul></div></div></nav><div class="container pt-3"><h1 class="text-center">GraphQL and REST API for Testing and Prototyping</h1><h4 class="text-center text-muted">fake data | real responses | 24/7 online</h4><div class="row mt-5"><div class="col-md-6"><h3>Resources</h3><table class="table table-responsive-sm table-sm"><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/users">https://gorest.co.in/public/v2/users</a></samp></td><td class="text-end">2930</td></tr><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/posts">https://gorest.co.in/public/v2/posts</a></samp></td><td class="text-end">2998</td></tr><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/comments">https://gorest.co.in/public/v2/comments</a></samp></td><td class="text-end">3032</td></tr><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/todos">https://gorest.co.in/public/v2/todos</a></samp></td><td class="text-end">1533</td></tr></table></div><div class="col-md-6"><h3>Trying it Out</h3><table class="table table-responsive-sm table-sm"><tr><td><samp>POST /public/v2/users</samp></td><td class="text-end">Create a new user</td></tr><tr><td><samp>GET /public/v2/users/1700815</samp></td><td class="text-end">Get user details</td></tr><tr><td><samp>PUT|PATCH /public/v2/users/1700815</samp></td><td class="text-end">Update user details</td></tr><tr><td><samp>DELETE /public/v2/users/1700815</samp></td><td class="text-end">Delete user</td></tr></table></div></div><h3 class="mt-3">Nested Resources</h3><div class="row"><div class="col-md-6"><table class="table table-responsive-sm table-sm"><tr><td><samp>GET <a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/users/1700815/posts">/public/v2/users/1700815/posts</a></samp></td><td class="text-end">Retrieves user posts</td></tr><tr><td><samp>GET <a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/posts/1700815/comments">/public/v2/posts/1700815/comments</a></samp></td><td class="text-end">Retrieves post comments</td></tr><tr><td><samp>GET <a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/users/1700815/todos">/public/v2/users/1700815/todos</a></samp></td><td class="text-end">Retrieves user todos</td></tr></table></div><div class="col-md-6"><table class="table table-responsive-sm table-sm"><tr><td><samp>POST /public/v2/users/1700815/posts</samp></td><td class="text-end">Creates a user post</td></tr><tr><td><samp>POST /public/v2/posts/1700815/comments</samp></td><td class="text-end">Creates a post comment</td></tr><tr><td><samp>POST /public/v2/users/1700815/todos</samp></td><td class="text-end">Creates a user todo</td></tr></table></div></div><ul><li class="text-warning">Do not post your personal data like name, email, phone, photo etc...</li><li class="text-info">For paged results parameter "page" and "per_page" should be passed in url ex: GET <code>/public/v2/users?page=1&per_page=20</code> (max 100 results per page)</li><li class="text-info">Request methods PUT, POST, PATCH, DELETE needs access token, which needs to be passed with &quot;Authorization&quot; header as Bearer token.</li><li class="text-info">API Versions <code>/public-api/*</code>, <code>/public/v1/*</code> and <code>/public/v2/*</code></li><li><a href="/consumer/login">Get your access token</a></li></ul><h3 class="mt-5">GraphQL Endpoint</h3><ul><li>GraphQL API is available at <code>https://gorest.co.in/public/v2/graphql</code></li><li><a target="_blank" href="/graphql/schema.json">View GraphQL json schema</a></li><li><a target="_blank" href="graphql/schema.graphql">View GrapQL schema</a></li></ul><h3 class="mt-5">Features</h3><ul><li>Fully secured quick prototyping.</li><li>Response format negotiation. (supporting JSON and XML add &quot;.json&quot; or &quot;.xml&quot; to api end point)</li><li>Support for the OPTIONS and HEAD verbs.</li><li>Full search support on all fields. Ex: https://gorest.co.in/public/v2/users?name=kumar</li><li>Data created/modified by a user is only visible to that perticular user, all data will be deleted and recreated on daily basis.</li><li><a href="/my-account/logs">Request and response logging.</a></li></ul><div class="row"><div class="col-md-6"><h3 class="mt-3">Rate Limiting Headers</h3><ul><li><a href="/my-account/access-tokens">Customize the rate limit per access token.</a></li><li><code>X-RateLimit-Limit</code> number of allowed requests/minute.</li><li><code>X-RateLimit-Remaining</code> remaining requests within the current period.</li><li><code>X-RateLimit-Reset</code> seconds to wait before having maximum number of allowed requests again.</li></ul></div><div class="col-md-6"><h3 class="mt-3">Pagination Headers</h3><ul><li><code>X-Pagination-Total</code> total number of results.</li><li><code>X-Pagination-Pages</code> total number of pages.</li><li><code>X-Pagination-Page</code> current page number.</li><li><code>X-Pagination-Limit</code> results per page.</li></ul></div></div><h3 class="mt-3">API Version 2</h3><ul><li>Path: <code>/public/v2/*</code></li><li>Response format Object or Array of Objects <code>{}</code> or <code>[{}]</code></li><li>HTTP Status code contains the actual response code, response headers contains the pagination information, response body contains the results.</li></ul><h3 class="mt-3">API Version 1</h3><ul><li>Path: <code>/public/v1/*</code></li><li>Response format <code>{ meta:, data: }</code></li><li>HTTP status code contains the actual response code, <code>meta</code> contains the pagination information and <code>data</code> contains the actual results</li></ul><h3 class="mt-3">API Version 0</h3><ul><li>Path: <code>/public-api/*</code></li><li>Response format <code>{ code :, meta:, data: }</code></li><li>HTTP status code is always 200, <code>code</code> contains the actual response code, <code>meta</code> contains the pagination information, <code>data</code> contains the actual results</li></ul><h3 class="mt-5">Authentication</h3><p>Unlike Web applications, RESTful APIs are usually stateless, which means sessions or cookies should not be used. Therefore, each request should come with some sort of authentication credentials. A common practice is to send a secret access token with each request to authenticate the user. Since an access token can be used to uniquely identify and authenticate a user, API requests should always be sent via HTTPS to prevent man-in-the-middle (MitM) attacks. </p><p>There are different ways to send an access token:</p><ul><li><a href="https://en.wikipedia.org/wiki/Basic_access_authentication" rel="noreferrer" target="_blank">HTTP Basic Auth</a>: the access token is sent as the username.</li><li>Query parameter: the access token is sent as a query parameter in the API URL. <br/>e.g. <samp>https://gorest.co.in/public/v2/users?access-token=xxx</samp></li><li><a href="http://oauth.net/2/" rel="noreferrer" target="_blank">OAuth 2</a>: the access token is obtained by the consumer from an authorization server and sent to the API server via <a href="http://tools.ietf.org/html/rfc6750" rel="noreferrer" target="_blank">HTTP Bearer Tokens </a>, according to the OAuth2 protocol.</li><li class="text-info">This API supports only &quot;HTTP Bearer Tokens&quot; and &quot;Query parameter Auth&quot;</li></ul><h3 class="mt-5 mb-3">cUrl Examples for REST API</h3><div class="mb-3"><h6 class="text-info">List users</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XGET "https://gorest.co.in/public/v2/users"</samp></div><div class="mb-3"><h6 class="text-info">Create user</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/users" -d '{"name":"Tenali Ramakrishna", "gender":"male", "email":"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="295d4c47484540075b484448425b405a41474869181c4a4c074a4644">[email&#160;protected]</a>", "status":"active"}' </samp></div><div class="mb-3"><h6 class="text-info">Update user</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPATCH "https://gorest.co.in/public/v2/users/1700815" -d '{"name":"Allasani Peddana", "email":"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="19787575786a78777037697c7d7d78777859282c7a7c377a7674">[email&#160;protected]</a>", "status":"active"}' </samp></div><div class="mb-3"><h6 class="text-info">Delete user</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XDELETE "https://gorest.co.in/public/v2/users/1700815"</samp></div><h3 class="mt-5 mb-3">cUrl Examples for GraphQL</h3><div class="mb-3"><h6 class="text-info">List users</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"query{users {pageInfo {endCursor startCursor hasNextPage hasPreviousPage} totalCount nodes {id name email gender status}}}"}'</samp></div><div class="mb-3"><h6 class="text-info">Get User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"query{user(id: 1700815) { id name email gender status }}"}'</samp></div><div class="mb-3"><h6 class="text-info">Create User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"mutation{createUser(input: {name: \"Tenali Ramakrishna\" gender: \"male\" email: \"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="eb9f8e858a8782c5998a868a8099829883858aabdade888ec5888486">[email&#160;protected]</a>\" status: \"active\"}) {user{id name gender email status}}}"}'</samp></div><div class="mb-3"><h6 class="text-info">Update User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"mutation{updateUser(input: {id: 1700815 name: \"Allasani Peddana\" email: \"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="bedfd2d2dfcddfd0d790cedbdadadfd0dffe8f8bdddb90ddd1d3">[email&#160;protected]</a>\" status: \"active\"}) {user{id name gender email status}}}"}'</samp></div><div class="mb-3"><h6 class="text-info">Delete User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"mutation{deleteUser(input: {id: 1700815}){user {id name email gender status}}}"}'</samp></div><h3 class="mt-5">REST API Http Response Codes</h3><ul><li>200: OK. Everything worked as expected.</li><li>201: A resource was successfully created in response to a POST request. The Location header contains the URL pointing to the newly created resource.</li><li>204: The request was handled successfully and the response contains no body content (like a DELETE request).</li><li>304: The resource was not modified. You can use the cached version.</li><li>400: Bad request. This could be caused by various actions by the user, such as providing invalid JSON data in the request body etc.</li><li>401: Authentication failed.</li><li>403: The authenticated user is not allowed to access the specified API endpoint.</li><li>404: The requested resource does not exist.</li><li>405: Method not allowed. Please check the Allow header for the allowed HTTP methods.</li><li>415: Unsupported media type. The requested content type or version number is invalid.</li><li>422: Data validation failed (in response to a POST request, for example). Please check the response body for detailed error messages.</li><li>429: Too many requests. The request was rejected due to rate limiting.</li><li>500: Internal server error. This could be caused by internal program errors.</li></ul></div><hr class="mt-5" /><div class="container"><div class="footer"><ul class="list-inline"><li class="list-inline-item">&copy; Go Rest 2023</li><li class="list-inline-item float-lg-end"><a href="/privacy-policy">Privacy Policy</a></li><li class="list-inline-item float-lg-end me-3"><a href="/contact-us">Contact Us</a></li></ul></div></div><script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script></body></html>
13:05:09.864 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:05:10.491 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:05:10.717 [main] DEBUG com.intuit.karate - request:
1 > GET https://gorest.co.in
1 > Host: gorest.co.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:05:11.903 [main] DEBUG com.intuit.karate - response time in milliseconds: 1179
1 < 200
1 < Date: Fri, 01 Dec 2023 16:05:11 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Cache-Control: max-age=0, private, must-revalidate
1 < feature-policy: camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'
1 < link: </assets/application-c07a59afdf8631a30ac88e98f48da8012fcecb39db5c5ce05a985950b2773bac.css>; rel=preload; as=style; nopush
1 < referrer-policy: strict-origin-when-cross-origin
1 < x-content-type-options: nosniff
1 < x-download-options: noopen
1 < x-frame-options: SAMEORIGIN
1 < x-permitted-cross-domain-policies: none
1 < x-request-id: 0edaca47-c415-4fc3-9865-34b7e127a23a
1 < x-runtime: 0.060885
1 < x-xss-protection: 0
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=9Nde8wWCmp8Q0TGNyX105kq3k8E%2FUQvprgenNULFViR%2BWQBIJI%2BTvVLjFYKcCqRMveC7S6jscNOrqQTeAmUT7mHxV2n9nxvZdru61AK7kzD3vg2pCPIrWAZ7OF2Ugz4%3D"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 82ec91fb98a20bbf-AMS
1 < alt-svc: h3=":443"; ma=86400
1 < Set-Cookie: _gorest_session=AKk8Pw6rJCbf3%2FxIDXUt59wDb7LmKR7u2lbAgpzITslMTMBqV%2Bh2EcvMtTGUuujm1gugPa57rgKDh54DOqVeGlOzu8Lh7qGmX3%2BCxqPsqDtzQ7rehgA%2BlkyzJoXiqZEoRUof%2B54QqM%2FGgNT2WSdl3sIEOi6nTamCitsWZlAL3Tmxa73dElkwe4vBD9dQeVg1ZvFTq%2B705oY%2FrlZXCjY%2FefAX1mvt%2B5wrI2rMZr9naty6n5WN8qdJ0i3p%2BeVWGmun%2BdfYReGBreM9rL5B0m71sJyNfn73uXY%3D--ORd%2B5kMr0G4zr48Q--lUnYs0ALkCpRe%2FijtkANLA%3D%3D; Domain=gorest.co.in
<!DOCTYPE html><html><head><meta charset="utf-8" /><meta content="width=device-width, initial-scale=1, shrink-to-fit=no" name="viewport" /><link href="/favicon.ico" rel="icon" type="image/x-icon" /><title>GraphQL and REST API for Testing and Prototyping | GO REST</title>
<meta name="description" content="24/7 online fake GraphQL and REST API service for quick testing and prototyping of web and android applications. Supports authentication, custom rate limiting, response format negotiation">
<meta name="keywords" content="graphql, rest api, fake data, api testing, graphql testing, json response, xml response, oauth, rate limiting"><meta name="csrf-param" content="authenticity_token" />
<meta name="csrf-token" content="6HSVksbElVqcSL3KPTHcIYMLnrZgenjWuVUrcLyPnWKqbn897NQyyP-E2s4vMvql-ad-KzcXxzhK39M_f2KHtw" /><link rel="stylesheet" href="/assets/application-c07a59afdf8631a30ac88e98f48da8012fcecb39db5c5ce05a985950b2773bac.css" media="all" data-turbolinks-track="reload" /><script src="/packs/js/application-194ed409298f13f197d2.js" data-turbolinks-track="reload" defer="defer"></script><script async="true" crossorigin="anonymous" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4930099895671899"></script><script async="true" src="https://www.googletagmanager.com/gtag/js?id=G-7KR6VNWHWS"></script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-7KR6VNWHWS');</script></head><body><nav class="navbar navbar-expand-lg navbar-dark bg-dark sticky-top"><div class="container"><a class="navbar-brand" href="/"><i class="fas fa-exchange-alt"></i> Go REST</a><button aria-controls="AppNavBar" aria-expanded="false" aria-label="Toggle navigation" class="navbar-toggler" data-bs-target="#AppNavBar" data-bs-toggle="collapse" type="button"><span class="navbar-toggler-icon"></span></button><div class="collapse navbar-collapse" id="AppNavBar"><ul class="navbar-nav ms-auto"><li class="nav-item"><a class="nav-link" href="/chandamama-stories"><i class="fas fa-cloud-moon"></i> Chandamama Stories</a></li><li class="nav-item"><a class="nav-link" href="/qa"><i class="fas fa-life-ring"></i> Help</a></li><li class="nav-item"><a class="nav-link" href="/rest-console"><i class="fab fa-linux"></i> Rest Console</a></li><li class="nav-item dropdown"><a aria-expanded="false" class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" id="ToolsDropDown" role="button"><i class="fas fa-tools"></i> Tools</a><ul aria-labelledby="ToolsDropDown" class="dropdown-menu"><li class><a class="dropdown-item" href="/tools/base64-encode-decode">Base64 Encode/Decode</a></li><li class><a class="dropdown-item" href="/tools/url-encode-decode">Url Encode/Decode</a></li><li class><a class="dropdown-item" href="/tools/gcode-translator">G-Code Translator</a></li></ul></li><li class="nav-item"><a class="nav-link" href="/consumer/login">Login</a></li></ul></div></div></nav><div class="container pt-3"><h1 class="text-center">GraphQL and REST API for Testing and Prototyping</h1><h4 class="text-center text-muted">fake data | real responses | 24/7 online</h4><div class="row mt-5"><div class="col-md-6"><h3>Resources</h3><table class="table table-responsive-sm table-sm"><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/users">https://gorest.co.in/public/v2/users</a></samp></td><td class="text-end">2930</td></tr><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/posts">https://gorest.co.in/public/v2/posts</a></samp></td><td class="text-end">2998</td></tr><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/comments">https://gorest.co.in/public/v2/comments</a></samp></td><td class="text-end">3032</td></tr><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/todos">https://gorest.co.in/public/v2/todos</a></samp></td><td class="text-end">1533</td></tr></table></div><div class="col-md-6"><h3>Trying it Out</h3><table class="table table-responsive-sm table-sm"><tr><td><samp>POST /public/v2/users</samp></td><td class="text-end">Create a new user</td></tr><tr><td><samp>GET /public/v2/users/1700815</samp></td><td class="text-end">Get user details</td></tr><tr><td><samp>PUT|PATCH /public/v2/users/1700815</samp></td><td class="text-end">Update user details</td></tr><tr><td><samp>DELETE /public/v2/users/1700815</samp></td><td class="text-end">Delete user</td></tr></table></div></div><h3 class="mt-3">Nested Resources</h3><div class="row"><div class="col-md-6"><table class="table table-responsive-sm table-sm"><tr><td><samp>GET <a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/users/1700815/posts">/public/v2/users/1700815/posts</a></samp></td><td class="text-end">Retrieves user posts</td></tr><tr><td><samp>GET <a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/posts/1700815/comments">/public/v2/posts/1700815/comments</a></samp></td><td class="text-end">Retrieves post comments</td></tr><tr><td><samp>GET <a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/users/1700815/todos">/public/v2/users/1700815/todos</a></samp></td><td class="text-end">Retrieves user todos</td></tr></table></div><div class="col-md-6"><table class="table table-responsive-sm table-sm"><tr><td><samp>POST /public/v2/users/1700815/posts</samp></td><td class="text-end">Creates a user post</td></tr><tr><td><samp>POST /public/v2/posts/1700815/comments</samp></td><td class="text-end">Creates a post comment</td></tr><tr><td><samp>POST /public/v2/users/1700815/todos</samp></td><td class="text-end">Creates a user todo</td></tr></table></div></div><ul><li class="text-warning">Do not post your personal data like name, email, phone, photo etc...</li><li class="text-info">For paged results parameter "page" and "per_page" should be passed in url ex: GET <code>/public/v2/users?page=1&per_page=20</code> (max 100 results per page)</li><li class="text-info">Request methods PUT, POST, PATCH, DELETE needs access token, which needs to be passed with &quot;Authorization&quot; header as Bearer token.</li><li class="text-info">API Versions <code>/public-api/*</code>, <code>/public/v1/*</code> and <code>/public/v2/*</code></li><li><a href="/consumer/login">Get your access token</a></li></ul><h3 class="mt-5">GraphQL Endpoint</h3><ul><li>GraphQL API is available at <code>https://gorest.co.in/public/v2/graphql</code></li><li><a target="_blank" href="/graphql/schema.json">View GraphQL json schema</a></li><li><a target="_blank" href="graphql/schema.graphql">View GrapQL schema</a></li></ul><h3 class="mt-5">Features</h3><ul><li>Fully secured quick prototyping.</li><li>Response format negotiation. (supporting JSON and XML add &quot;.json&quot; or &quot;.xml&quot; to api end point)</li><li>Support for the OPTIONS and HEAD verbs.</li><li>Full search support on all fields. Ex: https://gorest.co.in/public/v2/users?name=kumar</li><li>Data created/modified by a user is only visible to that perticular user, all data will be deleted and recreated on daily basis.</li><li><a href="/my-account/logs">Request and response logging.</a></li></ul><div class="row"><div class="col-md-6"><h3 class="mt-3">Rate Limiting Headers</h3><ul><li><a href="/my-account/access-tokens">Customize the rate limit per access token.</a></li><li><code>X-RateLimit-Limit</code> number of allowed requests/minute.</li><li><code>X-RateLimit-Remaining</code> remaining requests within the current period.</li><li><code>X-RateLimit-Reset</code> seconds to wait before having maximum number of allowed requests again.</li></ul></div><div class="col-md-6"><h3 class="mt-3">Pagination Headers</h3><ul><li><code>X-Pagination-Total</code> total number of results.</li><li><code>X-Pagination-Pages</code> total number of pages.</li><li><code>X-Pagination-Page</code> current page number.</li><li><code>X-Pagination-Limit</code> results per page.</li></ul></div></div><h3 class="mt-3">API Version 2</h3><ul><li>Path: <code>/public/v2/*</code></li><li>Response format Object or Array of Objects <code>{}</code> or <code>[{}]</code></li><li>HTTP Status code contains the actual response code, response headers contains the pagination information, response body contains the results.</li></ul><h3 class="mt-3">API Version 1</h3><ul><li>Path: <code>/public/v1/*</code></li><li>Response format <code>{ meta:, data: }</code></li><li>HTTP status code contains the actual response code, <code>meta</code> contains the pagination information and <code>data</code> contains the actual results</li></ul><h3 class="mt-3">API Version 0</h3><ul><li>Path: <code>/public-api/*</code></li><li>Response format <code>{ code :, meta:, data: }</code></li><li>HTTP status code is always 200, <code>code</code> contains the actual response code, <code>meta</code> contains the pagination information, <code>data</code> contains the actual results</li></ul><h3 class="mt-5">Authentication</h3><p>Unlike Web applications, RESTful APIs are usually stateless, which means sessions or cookies should not be used. Therefore, each request should come with some sort of authentication credentials. A common practice is to send a secret access token with each request to authenticate the user. Since an access token can be used to uniquely identify and authenticate a user, API requests should always be sent via HTTPS to prevent man-in-the-middle (MitM) attacks. </p><p>There are different ways to send an access token:</p><ul><li><a href="https://en.wikipedia.org/wiki/Basic_access_authentication" rel="noreferrer" target="_blank">HTTP Basic Auth</a>: the access token is sent as the username.</li><li>Query parameter: the access token is sent as a query parameter in the API URL. <br/>e.g. <samp>https://gorest.co.in/public/v2/users?access-token=xxx</samp></li><li><a href="http://oauth.net/2/" rel="noreferrer" target="_blank">OAuth 2</a>: the access token is obtained by the consumer from an authorization server and sent to the API server via <a href="http://tools.ietf.org/html/rfc6750" rel="noreferrer" target="_blank">HTTP Bearer Tokens </a>, according to the OAuth2 protocol.</li><li class="text-info">This API supports only &quot;HTTP Bearer Tokens&quot; and &quot;Query parameter Auth&quot;</li></ul><h3 class="mt-5 mb-3">cUrl Examples for REST API</h3><div class="mb-3"><h6 class="text-info">List users</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XGET "https://gorest.co.in/public/v2/users"</samp></div><div class="mb-3"><h6 class="text-info">Create user</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/users" -d '{"name":"Tenali Ramakrishna", "gender":"male", "email":"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="681c0d06090401461a090509031a011b00060928595d0b0d460b0705">[email&#160;protected]</a>", "status":"active"}' </samp></div><div class="mb-3"><h6 class="text-info">Update user</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPATCH "https://gorest.co.in/public/v2/users/1700815" -d '{"name":"Allasani Peddana", "email":"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="f0919c9c9183919e99de80959494919e91b0c1c59395de939f9d">[email&#160;protected]</a>", "status":"active"}' </samp></div><div class="mb-3"><h6 class="text-info">Delete user</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XDELETE "https://gorest.co.in/public/v2/users/1700815"</samp></div><h3 class="mt-5 mb-3">cUrl Examples for GraphQL</h3><div class="mb-3"><h6 class="text-info">List users</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"query{users {pageInfo {endCursor startCursor hasNextPage hasPreviousPage} totalCount nodes {id name email gender status}}}"}'</samp></div><div class="mb-3"><h6 class="text-info">Get User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"query{user(id: 1700815) { id name email gender status }}"}'</samp></div><div class="mb-3"><h6 class="text-info">Create User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"mutation{createUser(input: {name: \"Tenali Ramakrishna\" gender: \"male\" email: \"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="cabeafa4aba6a3e4b8aba7aba1b8a3b9a2a4ab8afbffa9afe4a9a5a7">[email&#160;protected]</a>\" status: \"active\"}) {user{id name gender email status}}}"}'</samp></div><div class="mb-3"><h6 class="text-info">Update User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"mutation{updateUser(input: {id: 1700815 name: \"Allasani Peddana\" email: \"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="fd9c91919c8e9c9394d38d9899999c939cbdccc89e98d39e9290">[email&#160;protected]</a>\" status: \"active\"}) {user{id name gender email status}}}"}'</samp></div><div class="mb-3"><h6 class="text-info">Delete User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"mutation{deleteUser(input: {id: 1700815}){user {id name email gender status}}}"}'</samp></div><h3 class="mt-5">REST API Http Response Codes</h3><ul><li>200: OK. Everything worked as expected.</li><li>201: A resource was successfully created in response to a POST request. The Location header contains the URL pointing to the newly created resource.</li><li>204: The request was handled successfully and the response contains no body content (like a DELETE request).</li><li>304: The resource was not modified. You can use the cached version.</li><li>400: Bad request. This could be caused by various actions by the user, such as providing invalid JSON data in the request body etc.</li><li>401: Authentication failed.</li><li>403: The authenticated user is not allowed to access the specified API endpoint.</li><li>404: The requested resource does not exist.</li><li>405: Method not allowed. Please check the Allow header for the allowed HTTP methods.</li><li>415: Unsupported media type. The requested content type or version number is invalid.</li><li>422: Data validation failed (in response to a POST request, for example). Please check the response body for detailed error messages.</li><li>429: Too many requests. The request was rejected due to rate limiting.</li><li>500: Internal server error. This could be caused by internal program errors.</li></ul></div><hr class="mt-5" /><div class="container"><div class="footer"><ul class="list-inline"><li class="list-inline-item">&copy; Go Rest 2023</li><li class="list-inline-item float-lg-end"><a href="/privacy-policy">Privacy Policy</a></li><li class="list-inline-item float-lg-end me-3"><a href="/contact-us">Contact Us</a></li></ul></div></div><script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script></body></html>
13:05:11.922 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:05:11.929 [main] DEBUG com.intuit.karate - request:
1 > GET https://gorest.co.in/public/v2/users
1 > Host: gorest.co.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:05:13.122 [main] DEBUG com.intuit.karate - response time in milliseconds: 1171
1 < 200
1 < Date: Fri, 01 Dec 2023 16:05:13 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Cache-Control: max-age=0, private, must-revalidate
1 < etag: W/"2f65c78104762887f82686f36d9bf8d3"
1 < referrer-policy: strict-origin-when-cross-origin
1 < vary: Origin
1 < x-content-type-options: nosniff
1 < x-download-options: noopen
1 < x-frame-options: SAMEORIGIN
1 < x-links-current: https://gorest.co.in/public/v2/users?page=1
1 < x-links-next: https://gorest.co.in/public/v2/users?page=2
1 < x-links-previous: 
1 < x-pagination-limit: 10
1 < x-pagination-page: 1
1 < x-pagination-pages: 293
1 < x-pagination-total: 2930
1 < x-permitted-cross-domain-policies: none
1 < x-request-id: 3d609ddf-b42f-42eb-b63f-29f1817a19f6
1 < x-runtime: 0.047060
1 < x-xss-protection: 0
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=SPwetkgfnW9dPVoiZ1T5NMCR1od2Uf5cAFKgwDc3vdFP4WqaPL%2FnPP%2BtyqCHeWJOJPHNbiIOUMAit2zfwMbng6dHH5czg3vrz7plqorXbwc4hU7k9QhVkOqKW3GQkjk%3D"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 82ec91ff7a020104-GRU
1 < alt-svc: h3=":443"; ma=86400
[{"gender":"male","name":"Minakshi Pandey","id":5803679,"email":"minakshi_pandey@torp.test","status":"active"},{"gender":"female","name":"Rameshwar Banerjee","id":5803678,"email":"rameshwar_banerjee@schiller.test","status":"active"},{"gender":"male","name":"Chakor Bhat","id":5803674,"email":"bhat_chakor@goldner.test","status":"inactive"},{"gender":"female","name":"Paramartha Menon","id":5803673,"email":"menon_paramartha@tromp.test","status":"active"},{"gender":"male","name":"Gajabahu Talwar Jr.","id":5803672,"email":"talwar_jr_gajabahu@jones-bernier.example","status":"inactive"},{"gender":"female","name":"Tapan Iyengar","id":5803671,"email":"iyengar_tapan@sporer.example","status":"inactive"},{"gender":"male","name":"Lakshminath Achari","id":5803670,"email":"lakshminath_achari@dare.test","status":"active"},{"gender":"male","name":"Tara Iyer","id":5803669,"email":"iyer_tara@friesen-yost.test","status":"inactive"},{"gender":"male","name":"Eshana Kaniyar","id":5803668,"email":"eshana_kaniyar@cruickshank-crona.test","status":"inactive"},{"gender":"female","name":"Dhananjay Menon","id":5803667,"email":"menon_dhananjay@gislason.example","status":"active"}]
13:06:35.274 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:06:35.927 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:06:36.155 [main] DEBUG com.intuit.karate - request:
1 > GET https://gorest.co.in
1 > Host: gorest.co.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:06:37.602 [main] DEBUG com.intuit.karate - response time in milliseconds: 1441
1 < 200
1 < Date: Fri, 01 Dec 2023 16:06:37 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Cache-Control: max-age=0, private, must-revalidate
1 < feature-policy: camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'
1 < link: </assets/application-c07a59afdf8631a30ac88e98f48da8012fcecb39db5c5ce05a985950b2773bac.css>; rel=preload; as=style; nopush
1 < referrer-policy: strict-origin-when-cross-origin
1 < x-content-type-options: nosniff
1 < x-download-options: noopen
1 < x-frame-options: SAMEORIGIN
1 < x-permitted-cross-domain-policies: none
1 < x-request-id: b80141a3-5519-4e2b-94f7-052d52a190e1
1 < x-runtime: 0.088970
1 < x-xss-protection: 0
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=P16hUR3AaEvZDm%2BvV8LUSmunjd%2Bmkjf5Xu4wAsHdGjRHkFIbITtxqamvbpv8cBwwXgqT%2Bb9aeTThD8hzE7idtcIafGlFRANRUlhl9J56Zw0dcdZNpyh%2FEeoSeg8M57k%3D"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 82ec94118983665b-AMS
1 < alt-svc: h3=":443"; ma=86400
1 < Set-Cookie: _gorest_session=3JCce19k%2F2XJgUjK7YnIrCUN5v1sAN7vL1udRDZWMePIfvDiwBkhryCa6WbOUBFLEZMGi0kxobAaT6GH4a9hMwpM2s%2B4GFtZ2a4rnmzcjFA0%2BcE7QGzmE2T%2B9yoPqVyFoR%2BR3nowVGUvUMIbR81O2Uf6SOB3hAnDMI4HnNRUYW6tfJuVLRAt%2Bm5Id28rBjdccxwMDppukYJx%2B7VQIQoV8qN7WY6vfycHyJ89XArevH2oSI%2BH9MrazT85lIef%2BMIPuD79VoPc3IEpcvgVN90JnJNEOxVAjM4%3D--uLOedbAj4MwP1ovT--d9ixoDMZM2E4FRmHwWlf3Q%3D%3D; Domain=gorest.co.in
<!DOCTYPE html><html><head><meta charset="utf-8" /><meta content="width=device-width, initial-scale=1, shrink-to-fit=no" name="viewport" /><link href="/favicon.ico" rel="icon" type="image/x-icon" /><title>GraphQL and REST API for Testing and Prototyping | GO REST</title>
<meta name="description" content="24/7 online fake GraphQL and REST API service for quick testing and prototyping of web and android applications. Supports authentication, custom rate limiting, response format negotiation">
<meta name="keywords" content="graphql, rest api, fake data, api testing, graphql testing, json response, xml response, oauth, rate limiting"><meta name="csrf-param" content="authenticity_token" />
<meta name="csrf-token" content="b64pFb2cgxEsInPSQtpatmqf55hZQKjMDUxJ8JNlZ7YE3HnHIL2hkcDxQLKVC7FV7CZEEgatT3rimG0U5j2fDQ" /><link rel="stylesheet" href="/assets/application-c07a59afdf8631a30ac88e98f48da8012fcecb39db5c5ce05a985950b2773bac.css" media="all" data-turbolinks-track="reload" /><script src="/packs/js/application-194ed409298f13f197d2.js" data-turbolinks-track="reload" defer="defer"></script><script async="true" crossorigin="anonymous" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4930099895671899"></script><script async="true" src="https://www.googletagmanager.com/gtag/js?id=G-7KR6VNWHWS"></script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-7KR6VNWHWS');</script></head><body><nav class="navbar navbar-expand-lg navbar-dark bg-dark sticky-top"><div class="container"><a class="navbar-brand" href="/"><i class="fas fa-exchange-alt"></i> Go REST</a><button aria-controls="AppNavBar" aria-expanded="false" aria-label="Toggle navigation" class="navbar-toggler" data-bs-target="#AppNavBar" data-bs-toggle="collapse" type="button"><span class="navbar-toggler-icon"></span></button><div class="collapse navbar-collapse" id="AppNavBar"><ul class="navbar-nav ms-auto"><li class="nav-item"><a class="nav-link" href="/chandamama-stories"><i class="fas fa-cloud-moon"></i> Chandamama Stories</a></li><li class="nav-item"><a class="nav-link" href="/qa"><i class="fas fa-life-ring"></i> Help</a></li><li class="nav-item"><a class="nav-link" href="/rest-console"><i class="fab fa-linux"></i> Rest Console</a></li><li class="nav-item dropdown"><a aria-expanded="false" class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" id="ToolsDropDown" role="button"><i class="fas fa-tools"></i> Tools</a><ul aria-labelledby="ToolsDropDown" class="dropdown-menu"><li class><a class="dropdown-item" href="/tools/base64-encode-decode">Base64 Encode/Decode</a></li><li class><a class="dropdown-item" href="/tools/url-encode-decode">Url Encode/Decode</a></li><li class><a class="dropdown-item" href="/tools/gcode-translator">G-Code Translator</a></li></ul></li><li class="nav-item"><a class="nav-link" href="/consumer/login">Login</a></li></ul></div></div></nav><div class="container pt-3"><h1 class="text-center">GraphQL and REST API for Testing and Prototyping</h1><h4 class="text-center text-muted">fake data | real responses | 24/7 online</h4><div class="row mt-5"><div class="col-md-6"><h3>Resources</h3><table class="table table-responsive-sm table-sm"><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/users">https://gorest.co.in/public/v2/users</a></samp></td><td class="text-end">2930</td></tr><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/posts">https://gorest.co.in/public/v2/posts</a></samp></td><td class="text-end">2998</td></tr><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/comments">https://gorest.co.in/public/v2/comments</a></samp></td><td class="text-end">3032</td></tr><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/todos">https://gorest.co.in/public/v2/todos</a></samp></td><td class="text-end">1533</td></tr></table></div><div class="col-md-6"><h3>Trying it Out</h3><table class="table table-responsive-sm table-sm"><tr><td><samp>POST /public/v2/users</samp></td><td class="text-end">Create a new user</td></tr><tr><td><samp>GET /public/v2/users/1700815</samp></td><td class="text-end">Get user details</td></tr><tr><td><samp>PUT|PATCH /public/v2/users/1700815</samp></td><td class="text-end">Update user details</td></tr><tr><td><samp>DELETE /public/v2/users/1700815</samp></td><td class="text-end">Delete user</td></tr></table></div></div><h3 class="mt-3">Nested Resources</h3><div class="row"><div class="col-md-6"><table class="table table-responsive-sm table-sm"><tr><td><samp>GET <a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/users/1700815/posts">/public/v2/users/1700815/posts</a></samp></td><td class="text-end">Retrieves user posts</td></tr><tr><td><samp>GET <a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/posts/1700815/comments">/public/v2/posts/1700815/comments</a></samp></td><td class="text-end">Retrieves post comments</td></tr><tr><td><samp>GET <a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/users/1700815/todos">/public/v2/users/1700815/todos</a></samp></td><td class="text-end">Retrieves user todos</td></tr></table></div><div class="col-md-6"><table class="table table-responsive-sm table-sm"><tr><td><samp>POST /public/v2/users/1700815/posts</samp></td><td class="text-end">Creates a user post</td></tr><tr><td><samp>POST /public/v2/posts/1700815/comments</samp></td><td class="text-end">Creates a post comment</td></tr><tr><td><samp>POST /public/v2/users/1700815/todos</samp></td><td class="text-end">Creates a user todo</td></tr></table></div></div><ul><li class="text-warning">Do not post your personal data like name, email, phone, photo etc...</li><li class="text-info">For paged results parameter "page" and "per_page" should be passed in url ex: GET <code>/public/v2/users?page=1&per_page=20</code> (max 100 results per page)</li><li class="text-info">Request methods PUT, POST, PATCH, DELETE needs access token, which needs to be passed with &quot;Authorization&quot; header as Bearer token.</li><li class="text-info">API Versions <code>/public-api/*</code>, <code>/public/v1/*</code> and <code>/public/v2/*</code></li><li><a href="/consumer/login">Get your access token</a></li></ul><h3 class="mt-5">GraphQL Endpoint</h3><ul><li>GraphQL API is available at <code>https://gorest.co.in/public/v2/graphql</code></li><li><a target="_blank" href="/graphql/schema.json">View GraphQL json schema</a></li><li><a target="_blank" href="graphql/schema.graphql">View GrapQL schema</a></li></ul><h3 class="mt-5">Features</h3><ul><li>Fully secured quick prototyping.</li><li>Response format negotiation. (supporting JSON and XML add &quot;.json&quot; or &quot;.xml&quot; to api end point)</li><li>Support for the OPTIONS and HEAD verbs.</li><li>Full search support on all fields. Ex: https://gorest.co.in/public/v2/users?name=kumar</li><li>Data created/modified by a user is only visible to that perticular user, all data will be deleted and recreated on daily basis.</li><li><a href="/my-account/logs">Request and response logging.</a></li></ul><div class="row"><div class="col-md-6"><h3 class="mt-3">Rate Limiting Headers</h3><ul><li><a href="/my-account/access-tokens">Customize the rate limit per access token.</a></li><li><code>X-RateLimit-Limit</code> number of allowed requests/minute.</li><li><code>X-RateLimit-Remaining</code> remaining requests within the current period.</li><li><code>X-RateLimit-Reset</code> seconds to wait before having maximum number of allowed requests again.</li></ul></div><div class="col-md-6"><h3 class="mt-3">Pagination Headers</h3><ul><li><code>X-Pagination-Total</code> total number of results.</li><li><code>X-Pagination-Pages</code> total number of pages.</li><li><code>X-Pagination-Page</code> current page number.</li><li><code>X-Pagination-Limit</code> results per page.</li></ul></div></div><h3 class="mt-3">API Version 2</h3><ul><li>Path: <code>/public/v2/*</code></li><li>Response format Object or Array of Objects <code>{}</code> or <code>[{}]</code></li><li>HTTP Status code contains the actual response code, response headers contains the pagination information, response body contains the results.</li></ul><h3 class="mt-3">API Version 1</h3><ul><li>Path: <code>/public/v1/*</code></li><li>Response format <code>{ meta:, data: }</code></li><li>HTTP status code contains the actual response code, <code>meta</code> contains the pagination information and <code>data</code> contains the actual results</li></ul><h3 class="mt-3">API Version 0</h3><ul><li>Path: <code>/public-api/*</code></li><li>Response format <code>{ code :, meta:, data: }</code></li><li>HTTP status code is always 200, <code>code</code> contains the actual response code, <code>meta</code> contains the pagination information, <code>data</code> contains the actual results</li></ul><h3 class="mt-5">Authentication</h3><p>Unlike Web applications, RESTful APIs are usually stateless, which means sessions or cookies should not be used. Therefore, each request should come with some sort of authentication credentials. A common practice is to send a secret access token with each request to authenticate the user. Since an access token can be used to uniquely identify and authenticate a user, API requests should always be sent via HTTPS to prevent man-in-the-middle (MitM) attacks. </p><p>There are different ways to send an access token:</p><ul><li><a href="https://en.wikipedia.org/wiki/Basic_access_authentication" rel="noreferrer" target="_blank">HTTP Basic Auth</a>: the access token is sent as the username.</li><li>Query parameter: the access token is sent as a query parameter in the API URL. <br/>e.g. <samp>https://gorest.co.in/public/v2/users?access-token=xxx</samp></li><li><a href="http://oauth.net/2/" rel="noreferrer" target="_blank">OAuth 2</a>: the access token is obtained by the consumer from an authorization server and sent to the API server via <a href="http://tools.ietf.org/html/rfc6750" rel="noreferrer" target="_blank">HTTP Bearer Tokens </a>, according to the OAuth2 protocol.</li><li class="text-info">This API supports only &quot;HTTP Bearer Tokens&quot; and &quot;Query parameter Auth&quot;</li></ul><h3 class="mt-5 mb-3">cUrl Examples for REST API</h3><div class="mb-3"><h6 class="text-info">List users</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XGET "https://gorest.co.in/public/v2/users"</samp></div><div class="mb-3"><h6 class="text-info">Create user</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/users" -d '{"name":"Tenali Ramakrishna", "gender":"male", "email":"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="1266777c737e7b3c60737f7379607b617a7c7352232771773c717d7f">[email&#160;protected]</a>", "status":"active"}' </samp></div><div class="mb-3"><h6 class="text-info">Update user</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPATCH "https://gorest.co.in/public/v2/users/1700815" -d '{"name":"Allasani Peddana", "email":"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="244548484557454a4d0a54414040454a4564151147410a474b49">[email&#160;protected]</a>", "status":"active"}' </samp></div><div class="mb-3"><h6 class="text-info">Delete user</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XDELETE "https://gorest.co.in/public/v2/users/1700815"</samp></div><h3 class="mt-5 mb-3">cUrl Examples for GraphQL</h3><div class="mb-3"><h6 class="text-info">List users</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"query{users {pageInfo {endCursor startCursor hasNextPage hasPreviousPage} totalCount nodes {id name email gender status}}}"}'</samp></div><div class="mb-3"><h6 class="text-info">Get User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"query{user(id: 1700815) { id name email gender status }}"}'</samp></div><div class="mb-3"><h6 class="text-info">Create User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"mutation{createUser(input: {name: \"Tenali Ramakrishna\" gender: \"male\" email: \"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="d6a2b3b8b7babff8a4b7bbb7bda4bfa5beb8b796e7e3b5b3f8b5b9bb">[email&#160;protected]</a>\" status: \"active\"}) {user{id name gender email status}}}"}'</samp></div><div class="mb-3"><h6 class="text-info">Update User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"mutation{updateUser(input: {id: 1700815 name: \"Allasani Peddana\" email: \"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="4e2f22222f3d2f2027603e2b2a2a2f202f0e7f7b2d2b602d2123">[email&#160;protected]</a>\" status: \"active\"}) {user{id name gender email status}}}"}'</samp></div><div class="mb-3"><h6 class="text-info">Delete User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"mutation{deleteUser(input: {id: 1700815}){user {id name email gender status}}}"}'</samp></div><h3 class="mt-5">REST API Http Response Codes</h3><ul><li>200: OK. Everything worked as expected.</li><li>201: A resource was successfully created in response to a POST request. The Location header contains the URL pointing to the newly created resource.</li><li>204: The request was handled successfully and the response contains no body content (like a DELETE request).</li><li>304: The resource was not modified. You can use the cached version.</li><li>400: Bad request. This could be caused by various actions by the user, such as providing invalid JSON data in the request body etc.</li><li>401: Authentication failed.</li><li>403: The authenticated user is not allowed to access the specified API endpoint.</li><li>404: The requested resource does not exist.</li><li>405: Method not allowed. Please check the Allow header for the allowed HTTP methods.</li><li>415: Unsupported media type. The requested content type or version number is invalid.</li><li>422: Data validation failed (in response to a POST request, for example). Please check the response body for detailed error messages.</li><li>429: Too many requests. The request was rejected due to rate limiting.</li><li>500: Internal server error. This could be caused by internal program errors.</li></ul></div><hr class="mt-5" /><div class="container"><div class="footer"><ul class="list-inline"><li class="list-inline-item">&copy; Go Rest 2023</li><li class="list-inline-item float-lg-end"><a href="/privacy-policy">Privacy Policy</a></li><li class="list-inline-item float-lg-end me-3"><a href="/contact-us">Contact Us</a></li></ul></div></div><script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script></body></html>
13:06:37.620 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:06:37.626 [main] DEBUG com.intuit.karate - request:
1 > GET https://gorest.co.in/public/v2/users
1 > Host: gorest.co.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:06:38.086 [main] DEBUG com.intuit.karate - response time in milliseconds: 438
1 < 200
1 < Date: Fri, 01 Dec 2023 16:06:38 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Cache-Control: max-age=0, private, must-revalidate
1 < etag: W/"2f65c78104762887f82686f36d9bf8d3"
1 < referrer-policy: strict-origin-when-cross-origin
1 < vary: Origin
1 < x-content-type-options: nosniff
1 < x-download-options: noopen
1 < x-frame-options: SAMEORIGIN
1 < x-links-current: https://gorest.co.in/public/v2/users?page=1
1 < x-links-next: https://gorest.co.in/public/v2/users?page=2
1 < x-links-previous: 
1 < x-pagination-limit: 10
1 < x-pagination-page: 1
1 < x-pagination-pages: 293
1 < x-pagination-total: 2930
1 < x-permitted-cross-domain-policies: none
1 < x-request-id: d10be6bf-0e3b-4653-a067-0e73a620c766
1 < x-runtime: 0.035445
1 < x-xss-protection: 0
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=At5GeZR9coI7fy8rIn9myjPpdypdE2ArPyH4fLjA1N6%2B8rhRRL9BmDeQLMwPEb3GTz60mqZ7VD21LTTGNg8dXGQEBnE%2B%2FHAmzEWtTF2kkDiHs7NLNzCaOllSnnjQEwQ%3D"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 82ec94171d6e1f7c-GIG
1 < alt-svc: h3=":443"; ma=86400
[{"gender":"male","name":"Minakshi Pandey","id":5803679,"email":"minakshi_pandey@torp.test","status":"active"},{"gender":"female","name":"Rameshwar Banerjee","id":5803678,"email":"rameshwar_banerjee@schiller.test","status":"active"},{"gender":"male","name":"Chakor Bhat","id":5803674,"email":"bhat_chakor@goldner.test","status":"inactive"},{"gender":"female","name":"Paramartha Menon","id":5803673,"email":"menon_paramartha@tromp.test","status":"active"},{"gender":"male","name":"Gajabahu Talwar Jr.","id":5803672,"email":"talwar_jr_gajabahu@jones-bernier.example","status":"inactive"},{"gender":"female","name":"Tapan Iyengar","id":5803671,"email":"iyengar_tapan@sporer.example","status":"inactive"},{"gender":"male","name":"Lakshminath Achari","id":5803670,"email":"lakshminath_achari@dare.test","status":"active"},{"gender":"male","name":"Tara Iyer","id":5803669,"email":"iyer_tara@friesen-yost.test","status":"inactive"},{"gender":"male","name":"Eshana Kaniyar","id":5803668,"email":"eshana_kaniyar@cruickshank-crona.test","status":"inactive"},{"gender":"female","name":"Dhananjay Menon","id":5803667,"email":"menon_dhananjay@gislason.example","status":"active"}]
13:11:46.604 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:11:47.239 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:11:47.461 [main] DEBUG com.intuit.karate - request:
1 > GET https://gorest.co.in
1 > Host: gorest.co.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:11:48.877 [main] DEBUG com.intuit.karate - response time in milliseconds: 1409
1 < 200
1 < Date: Fri, 01 Dec 2023 16:11:48 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Cache-Control: max-age=0, private, must-revalidate
1 < feature-policy: camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'
1 < link: </assets/application-c07a59afdf8631a30ac88e98f48da8012fcecb39db5c5ce05a985950b2773bac.css>; rel=preload; as=style; nopush
1 < referrer-policy: strict-origin-when-cross-origin
1 < x-content-type-options: nosniff
1 < x-download-options: noopen
1 < x-frame-options: SAMEORIGIN
1 < x-permitted-cross-domain-policies: none
1 < x-request-id: c1522a5b-20d8-433b-acf7-8b3e17ecd125
1 < x-runtime: 0.066766
1 < x-xss-protection: 0
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=CDngdfJoTimQdr9e18QGx1vV5zYu22OnYq%2B3SoMQV8FwExXNTLUB%2B9A7daJCNW7tAueoer5xM5H8Hn7H9CCjPFP4P5H700sUp6cDgDxaDyyxjJi2G6TabAPVHVrU2ao%3D"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 82ec9babdf2899dc-CDG
1 < alt-svc: h3=":443"; ma=86400
1 < Set-Cookie: _gorest_session=nEIbi3CqHPOi%2Fk7rAuQMqRlkNgTBKKa44wlx30HrUXDztTUL2mNikeVbpj%2FTaad%2FVsNol27XwMFArdHMD48R1jU3L7OeVG5izOuLt6llZEZWU8ozgI%2FpE7YDBzYMS6QCuFXhZo9POjpsyNKqg7ecT%2BfrzZe6D3hfKvr7F3OfD8jhL2sv%2FTY97a5PWgyQoyZnSqsniCbZTrpPcqgojEyLARzt4kVd9kGzlTOl0kRO9g3mogYpAn6ZZGlzzCwk3II0Q6SYlr8kUWTcNfpQ2hw9QCM4r8BprxQ%3D--APeLAgHCFMyJ5ept--llSaZjm6sYnZQxVIkhTh1A%3D%3D; Domain=gorest.co.in
<!DOCTYPE html><html><head><meta charset="utf-8" /><meta content="width=device-width, initial-scale=1, shrink-to-fit=no" name="viewport" /><link href="/favicon.ico" rel="icon" type="image/x-icon" /><title>GraphQL and REST API for Testing and Prototyping | GO REST</title>
<meta name="description" content="24/7 online fake GraphQL and REST API service for quick testing and prototyping of web and android applications. Supports authentication, custom rate limiting, response format negotiation">
<meta name="keywords" content="graphql, rest api, fake data, api testing, graphql testing, json response, xml response, oauth, rate limiting"><meta name="csrf-param" content="authenticity_token" />
<meta name="csrf-token" content="a0hFdAfWlqAlKClEQAU-05mTJ08cVC3e87vIaWevUuBIq74ZZ-yhA2hj-6BNoTT2zz-yHszW2IS1dcdVYQRZIQ" /><link rel="stylesheet" href="/assets/application-c07a59afdf8631a30ac88e98f48da8012fcecb39db5c5ce05a985950b2773bac.css" media="all" data-turbolinks-track="reload" /><script src="/packs/js/application-194ed409298f13f197d2.js" data-turbolinks-track="reload" defer="defer"></script><script async="true" crossorigin="anonymous" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4930099895671899"></script><script async="true" src="https://www.googletagmanager.com/gtag/js?id=G-7KR6VNWHWS"></script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-7KR6VNWHWS');</script></head><body><nav class="navbar navbar-expand-lg navbar-dark bg-dark sticky-top"><div class="container"><a class="navbar-brand" href="/"><i class="fas fa-exchange-alt"></i> Go REST</a><button aria-controls="AppNavBar" aria-expanded="false" aria-label="Toggle navigation" class="navbar-toggler" data-bs-target="#AppNavBar" data-bs-toggle="collapse" type="button"><span class="navbar-toggler-icon"></span></button><div class="collapse navbar-collapse" id="AppNavBar"><ul class="navbar-nav ms-auto"><li class="nav-item"><a class="nav-link" href="/chandamama-stories"><i class="fas fa-cloud-moon"></i> Chandamama Stories</a></li><li class="nav-item"><a class="nav-link" href="/qa"><i class="fas fa-life-ring"></i> Help</a></li><li class="nav-item"><a class="nav-link" href="/rest-console"><i class="fab fa-linux"></i> Rest Console</a></li><li class="nav-item dropdown"><a aria-expanded="false" class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" id="ToolsDropDown" role="button"><i class="fas fa-tools"></i> Tools</a><ul aria-labelledby="ToolsDropDown" class="dropdown-menu"><li class><a class="dropdown-item" href="/tools/base64-encode-decode">Base64 Encode/Decode</a></li><li class><a class="dropdown-item" href="/tools/url-encode-decode">Url Encode/Decode</a></li><li class><a class="dropdown-item" href="/tools/gcode-translator">G-Code Translator</a></li></ul></li><li class="nav-item"><a class="nav-link" href="/consumer/login">Login</a></li></ul></div></div></nav><div class="container pt-3"><h1 class="text-center">GraphQL and REST API for Testing and Prototyping</h1><h4 class="text-center text-muted">fake data | real responses | 24/7 online</h4><div class="row mt-5"><div class="col-md-6"><h3>Resources</h3><table class="table table-responsive-sm table-sm"><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/users">https://gorest.co.in/public/v2/users</a></samp></td><td class="text-end">2930</td></tr><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/posts">https://gorest.co.in/public/v2/posts</a></samp></td><td class="text-end">2998</td></tr><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/comments">https://gorest.co.in/public/v2/comments</a></samp></td><td class="text-end">3032</td></tr><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/todos">https://gorest.co.in/public/v2/todos</a></samp></td><td class="text-end">1533</td></tr></table></div><div class="col-md-6"><h3>Trying it Out</h3><table class="table table-responsive-sm table-sm"><tr><td><samp>POST /public/v2/users</samp></td><td class="text-end">Create a new user</td></tr><tr><td><samp>GET /public/v2/users/1700815</samp></td><td class="text-end">Get user details</td></tr><tr><td><samp>PUT|PATCH /public/v2/users/1700815</samp></td><td class="text-end">Update user details</td></tr><tr><td><samp>DELETE /public/v2/users/1700815</samp></td><td class="text-end">Delete user</td></tr></table></div></div><h3 class="mt-3">Nested Resources</h3><div class="row"><div class="col-md-6"><table class="table table-responsive-sm table-sm"><tr><td><samp>GET <a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/users/1700815/posts">/public/v2/users/1700815/posts</a></samp></td><td class="text-end">Retrieves user posts</td></tr><tr><td><samp>GET <a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/posts/1700815/comments">/public/v2/posts/1700815/comments</a></samp></td><td class="text-end">Retrieves post comments</td></tr><tr><td><samp>GET <a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/users/1700815/todos">/public/v2/users/1700815/todos</a></samp></td><td class="text-end">Retrieves user todos</td></tr></table></div><div class="col-md-6"><table class="table table-responsive-sm table-sm"><tr><td><samp>POST /public/v2/users/1700815/posts</samp></td><td class="text-end">Creates a user post</td></tr><tr><td><samp>POST /public/v2/posts/1700815/comments</samp></td><td class="text-end">Creates a post comment</td></tr><tr><td><samp>POST /public/v2/users/1700815/todos</samp></td><td class="text-end">Creates a user todo</td></tr></table></div></div><ul><li class="text-warning">Do not post your personal data like name, email, phone, photo etc...</li><li class="text-info">For paged results parameter "page" and "per_page" should be passed in url ex: GET <code>/public/v2/users?page=1&per_page=20</code> (max 100 results per page)</li><li class="text-info">Request methods PUT, POST, PATCH, DELETE needs access token, which needs to be passed with &quot;Authorization&quot; header as Bearer token.</li><li class="text-info">API Versions <code>/public-api/*</code>, <code>/public/v1/*</code> and <code>/public/v2/*</code></li><li><a href="/consumer/login">Get your access token</a></li></ul><h3 class="mt-5">GraphQL Endpoint</h3><ul><li>GraphQL API is available at <code>https://gorest.co.in/public/v2/graphql</code></li><li><a target="_blank" href="/graphql/schema.json">View GraphQL json schema</a></li><li><a target="_blank" href="graphql/schema.graphql">View GrapQL schema</a></li></ul><h3 class="mt-5">Features</h3><ul><li>Fully secured quick prototyping.</li><li>Response format negotiation. (supporting JSON and XML add &quot;.json&quot; or &quot;.xml&quot; to api end point)</li><li>Support for the OPTIONS and HEAD verbs.</li><li>Full search support on all fields. Ex: https://gorest.co.in/public/v2/users?name=kumar</li><li>Data created/modified by a user is only visible to that perticular user, all data will be deleted and recreated on daily basis.</li><li><a href="/my-account/logs">Request and response logging.</a></li></ul><div class="row"><div class="col-md-6"><h3 class="mt-3">Rate Limiting Headers</h3><ul><li><a href="/my-account/access-tokens">Customize the rate limit per access token.</a></li><li><code>X-RateLimit-Limit</code> number of allowed requests/minute.</li><li><code>X-RateLimit-Remaining</code> remaining requests within the current period.</li><li><code>X-RateLimit-Reset</code> seconds to wait before having maximum number of allowed requests again.</li></ul></div><div class="col-md-6"><h3 class="mt-3">Pagination Headers</h3><ul><li><code>X-Pagination-Total</code> total number of results.</li><li><code>X-Pagination-Pages</code> total number of pages.</li><li><code>X-Pagination-Page</code> current page number.</li><li><code>X-Pagination-Limit</code> results per page.</li></ul></div></div><h3 class="mt-3">API Version 2</h3><ul><li>Path: <code>/public/v2/*</code></li><li>Response format Object or Array of Objects <code>{}</code> or <code>[{}]</code></li><li>HTTP Status code contains the actual response code, response headers contains the pagination information, response body contains the results.</li></ul><h3 class="mt-3">API Version 1</h3><ul><li>Path: <code>/public/v1/*</code></li><li>Response format <code>{ meta:, data: }</code></li><li>HTTP status code contains the actual response code, <code>meta</code> contains the pagination information and <code>data</code> contains the actual results</li></ul><h3 class="mt-3">API Version 0</h3><ul><li>Path: <code>/public-api/*</code></li><li>Response format <code>{ code :, meta:, data: }</code></li><li>HTTP status code is always 200, <code>code</code> contains the actual response code, <code>meta</code> contains the pagination information, <code>data</code> contains the actual results</li></ul><h3 class="mt-5">Authentication</h3><p>Unlike Web applications, RESTful APIs are usually stateless, which means sessions or cookies should not be used. Therefore, each request should come with some sort of authentication credentials. A common practice is to send a secret access token with each request to authenticate the user. Since an access token can be used to uniquely identify and authenticate a user, API requests should always be sent via HTTPS to prevent man-in-the-middle (MitM) attacks. </p><p>There are different ways to send an access token:</p><ul><li><a href="https://en.wikipedia.org/wiki/Basic_access_authentication" rel="noreferrer" target="_blank">HTTP Basic Auth</a>: the access token is sent as the username.</li><li>Query parameter: the access token is sent as a query parameter in the API URL. <br/>e.g. <samp>https://gorest.co.in/public/v2/users?access-token=xxx</samp></li><li><a href="http://oauth.net/2/" rel="noreferrer" target="_blank">OAuth 2</a>: the access token is obtained by the consumer from an authorization server and sent to the API server via <a href="http://tools.ietf.org/html/rfc6750" rel="noreferrer" target="_blank">HTTP Bearer Tokens </a>, according to the OAuth2 protocol.</li><li class="text-info">This API supports only &quot;HTTP Bearer Tokens&quot; and &quot;Query parameter Auth&quot;</li></ul><h3 class="mt-5 mb-3">cUrl Examples for REST API</h3><div class="mb-3"><h6 class="text-info">List users</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XGET "https://gorest.co.in/public/v2/users"</samp></div><div class="mb-3"><h6 class="text-info">Create user</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/users" -d '{"name":"Tenali Ramakrishna", "gender":"male", "email":"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="36425358575a5f1844575b575d445f455e585776070355531855595b">[email&#160;protected]</a>", "status":"active"}' </samp></div><div class="mb-3"><h6 class="text-info">Update user</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPATCH "https://gorest.co.in/public/v2/users/1700815" -d '{"name":"Allasani Peddana", "email":"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="42232e2e2331232c2b6c32272626232c2302737721276c212d2f">[email&#160;protected]</a>", "status":"active"}' </samp></div><div class="mb-3"><h6 class="text-info">Delete user</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XDELETE "https://gorest.co.in/public/v2/users/1700815"</samp></div><h3 class="mt-5 mb-3">cUrl Examples for GraphQL</h3><div class="mb-3"><h6 class="text-info">List users</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"query{users {pageInfo {endCursor startCursor hasNextPage hasPreviousPage} totalCount nodes {id name email gender status}}}"}'</samp></div><div class="mb-3"><h6 class="text-info">Get User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"query{user(id: 1700815) { id name email gender status }}"}'</samp></div><div class="mb-3"><h6 class="text-info">Create User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"mutation{createUser(input: {name: \"Tenali Ramakrishna\" gender: \"male\" email: \"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="0f7b6a616e6366217d6e626e647d667c67616e4f3e3a6c6a216c6062">[email&#160;protected]</a>\" status: \"active\"}) {user{id name gender email status}}}"}'</samp></div><div class="mb-3"><h6 class="text-info">Update User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"mutation{updateUser(input: {id: 1700815 name: \"Allasani Peddana\" email: \"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="2b4a47474a584a4542055b4e4f4f4a454a6b1a1e484e05484446">[email&#160;protected]</a>\" status: \"active\"}) {user{id name gender email status}}}"}'</samp></div><div class="mb-3"><h6 class="text-info">Delete User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"mutation{deleteUser(input: {id: 1700815}){user {id name email gender status}}}"}'</samp></div><h3 class="mt-5">REST API Http Response Codes</h3><ul><li>200: OK. Everything worked as expected.</li><li>201: A resource was successfully created in response to a POST request. The Location header contains the URL pointing to the newly created resource.</li><li>204: The request was handled successfully and the response contains no body content (like a DELETE request).</li><li>304: The resource was not modified. You can use the cached version.</li><li>400: Bad request. This could be caused by various actions by the user, such as providing invalid JSON data in the request body etc.</li><li>401: Authentication failed.</li><li>403: The authenticated user is not allowed to access the specified API endpoint.</li><li>404: The requested resource does not exist.</li><li>405: Method not allowed. Please check the Allow header for the allowed HTTP methods.</li><li>415: Unsupported media type. The requested content type or version number is invalid.</li><li>422: Data validation failed (in response to a POST request, for example). Please check the response body for detailed error messages.</li><li>429: Too many requests. The request was rejected due to rate limiting.</li><li>500: Internal server error. This could be caused by internal program errors.</li></ul></div><hr class="mt-5" /><div class="container"><div class="footer"><ul class="list-inline"><li class="list-inline-item">&copy; Go Rest 2023</li><li class="list-inline-item float-lg-end"><a href="/privacy-policy">Privacy Policy</a></li><li class="list-inline-item float-lg-end me-3"><a href="/contact-us">Contact Us</a></li></ul></div></div><script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script></body></html>
13:11:48.895 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:11:48.902 [main] DEBUG com.intuit.karate - request:
1 > GET https://gorest.co.in/public/v2/users
1 > Host: gorest.co.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:11:50.079 [main] DEBUG com.intuit.karate - response time in milliseconds: 1154
1 < 200
1 < Date: Fri, 01 Dec 2023 16:11:50 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Cache-Control: max-age=0, private, must-revalidate
1 < etag: W/"2f65c78104762887f82686f36d9bf8d3"
1 < referrer-policy: strict-origin-when-cross-origin
1 < vary: Origin
1 < x-content-type-options: nosniff
1 < x-download-options: noopen
1 < x-frame-options: SAMEORIGIN
1 < x-links-current: https://gorest.co.in/public/v2/users?page=1
1 < x-links-next: https://gorest.co.in/public/v2/users?page=2
1 < x-links-previous: 
1 < x-pagination-limit: 10
1 < x-pagination-page: 1
1 < x-pagination-pages: 293
1 < x-pagination-total: 2930
1 < x-permitted-cross-domain-policies: none
1 < x-request-id: 154ac667-030b-4547-8633-fea81741b481
1 < x-runtime: 0.035208
1 < x-xss-protection: 0
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=eil2HPhmJQ0TufGCCRqbalfmWGBZAGSMO7gXDTH8HDL66KC01EuluJuNptCcrd4UHXRYwLcFuagUrWqHphjdHt9UrZe%2BS%2FtQ0A0ka%2FwphjNVniBO%2Bl1m1VhLJbWwb0o%3D"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 82ec9bb33cb2b75e-AMS
1 < alt-svc: h3=":443"; ma=86400
[{"gender":"male","name":"Minakshi Pandey","id":5803679,"email":"minakshi_pandey@torp.test","status":"active"},{"gender":"female","name":"Rameshwar Banerjee","id":5803678,"email":"rameshwar_banerjee@schiller.test","status":"active"},{"gender":"male","name":"Chakor Bhat","id":5803674,"email":"bhat_chakor@goldner.test","status":"inactive"},{"gender":"female","name":"Paramartha Menon","id":5803673,"email":"menon_paramartha@tromp.test","status":"active"},{"gender":"male","name":"Gajabahu Talwar Jr.","id":5803672,"email":"talwar_jr_gajabahu@jones-bernier.example","status":"inactive"},{"gender":"female","name":"Tapan Iyengar","id":5803671,"email":"iyengar_tapan@sporer.example","status":"inactive"},{"gender":"male","name":"Lakshminath Achari","id":5803670,"email":"lakshminath_achari@dare.test","status":"active"},{"gender":"male","name":"Tara Iyer","id":5803669,"email":"iyer_tara@friesen-yost.test","status":"inactive"},{"gender":"male","name":"Eshana Kaniyar","id":5803668,"email":"eshana_kaniyar@cruickshank-crona.test","status":"inactive"},{"gender":"female","name":"Dhananjay Menon","id":5803667,"email":"menon_dhananjay@gislason.example","status":"active"}]
13:11:50.112 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:11:50.119 [main] DEBUG com.intuit.karate - request:
1 > GET https://gorest.co.in/public/v2/users/5803679
1 > Host: gorest.co.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:11:51.220 [main] DEBUG com.intuit.karate - response time in milliseconds: 1101
1 < 200
1 < Date: Fri, 01 Dec 2023 16:11:51 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Cache-Control: max-age=0, private, must-revalidate
1 < etag: W/"36c49e5035dff7a7e0d757144328355a"
1 < referrer-policy: strict-origin-when-cross-origin
1 < vary: Origin
1 < x-content-type-options: nosniff
1 < x-download-options: noopen
1 < x-frame-options: SAMEORIGIN
1 < x-permitted-cross-domain-policies: none
1 < x-request-id: abd5dc19-0efd-4472-b7ca-76906bba8424
1 < x-runtime: 0.015439
1 < x-xss-protection: 0
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=D9227CTh2pAy4VeRifL4JWI%2B7evHr64mn%2BnccfG0jKMFxB8sxrdeOLtLyQUND34%2BRCsabPRse%2FVee1CSlh8LKkkdorViOW4fkW%2F1xxS5n7szEOnGn8qMsMwUNL0wVGU%3D"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 82ec9bb7f8dda47d-GRU
1 < alt-svc: h3=":443"; ma=86400
{"gender":"male","name":"Minakshi Pandey","id":5803679,"email":"minakshi_pandey@torp.test","status":"active"}
13:11:51.222 [main] ERROR com.intuit.karate - classpath:Prova/goRest.feature:27
And match $.id = '#number'
syntax error, expected '==' for match
classpath:Prova/goRest.feature:27
13:11:51.236 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:11:51.239 [main] DEBUG com.intuit.karate - request:
1 > GET https://gorest.co.in/public/v2/users/5803671
1 > Host: gorest.co.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:11:53.032 [main] DEBUG com.intuit.karate - response time in milliseconds: 1793
1 < 200
1 < Date: Fri, 01 Dec 2023 16:11:53 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Cache-Control: max-age=0, private, must-revalidate
1 < etag: W/"b284a202f4aa0585ac51b7959f3c2663"
1 < referrer-policy: strict-origin-when-cross-origin
1 < vary: Origin
1 < x-content-type-options: nosniff
1 < x-download-options: noopen
1 < x-frame-options: SAMEORIGIN
1 < x-permitted-cross-domain-policies: none
1 < x-request-id: a09cba63-176b-4bca-bdfd-dc87dc21f4c3
1 < x-runtime: 0.015669
1 < x-xss-protection: 0
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=8a3Jya0IuIzJGgq7srQvYBJYuUBylyWKzDnpANekHTGk2UcCXtjnIBklBgBTbIXjqewZzYkt5Yrq%2F6lpLs43qFxH%2BMrL8wbN9ic0qTuWbRnsmy145urYzIlfaqUokdw%3D"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 82ec9bc81a2e1c84-AMS
1 < alt-svc: h3=":443"; ma=86400
{"gender":"female","name":"Tapan Iyengar","id":5803671,"email":"iyengar_tapan@sporer.example","status":"inactive"}
13:11:53.043 [main] ERROR com.intuit.karate - classpath:Prova/goRest.feature:27
And match $.id = '#number'
syntax error, expected '==' for match
classpath:Prova/goRest.feature:27
13:12:08.216 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:12:08.889 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:12:09.132 [main] DEBUG com.intuit.karate - request:
1 > GET https://gorest.co.in
1 > Host: gorest.co.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:12:10.916 [main] DEBUG com.intuit.karate - response time in milliseconds: 1778
1 < 200
1 < Date: Fri, 01 Dec 2023 16:12:10 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Cache-Control: max-age=0, private, must-revalidate
1 < feature-policy: camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'
1 < link: </assets/application-c07a59afdf8631a30ac88e98f48da8012fcecb39db5c5ce05a985950b2773bac.css>; rel=preload; as=style; nopush
1 < referrer-policy: strict-origin-when-cross-origin
1 < x-content-type-options: nosniff
1 < x-download-options: noopen
1 < x-frame-options: SAMEORIGIN
1 < x-permitted-cross-domain-policies: none
1 < x-request-id: 45a47ee6-d022-447b-b193-eb5863f00ca1
1 < x-runtime: 0.062632
1 < x-xss-protection: 0
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=6331JPSPHrKmBithnuokApKuCXHqtWsTrUAJKAK2rTWog8P2xT8yw3mdgumyappMdQeS%2BRFFXh07dAr08NaE1BUcyPBIiysclu8JD9OcFG1u68PWF94Qn%2BVjcqLF%2Fyw%3D"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 82ec9c32ba32b7a6-AMS
1 < alt-svc: h3=":443"; ma=86400
1 < Set-Cookie: _gorest_session=xLQ0AiU%2BK3guxmiekgZviGKQHF7aU5hbkEeeYRqzhO0XfBlX27yn%2BDL9LPJPUbpaOELbEXXr2pfzcp688X3qtQ2K%2FV71YlouuQd9VTMaVStHD9di692JP4kJiqPKFscY8NeYQw%2FIjrb%2BlPXP0NoVBXASFVdKREsSELuaQsNWO2%2BJoJZwm380Iwrj7RR%2BD306OOhwfeoREIqxjTl69cgtZuH5nx0UwcBOEfWsLJWOIiXRsjoKOLsYukG4EQwEJcsL7ZQx07q%2F4DjZuiFlEaJeZ1pLngsto6Q%3D--wSy171f4%2Bpp64fgv--sj767WTXAR9d5ZrcE%2FbbcA%3D%3D; Domain=gorest.co.in
<!DOCTYPE html><html><head><meta charset="utf-8" /><meta content="width=device-width, initial-scale=1, shrink-to-fit=no" name="viewport" /><link href="/favicon.ico" rel="icon" type="image/x-icon" /><title>GraphQL and REST API for Testing and Prototyping | GO REST</title>
<meta name="description" content="24/7 online fake GraphQL and REST API service for quick testing and prototyping of web and android applications. Supports authentication, custom rate limiting, response format negotiation">
<meta name="keywords" content="graphql, rest api, fake data, api testing, graphql testing, json response, xml response, oauth, rate limiting"><meta name="csrf-param" content="authenticity_token" />
<meta name="csrf-token" content="FHnFFatJdyMSqBfr7KPt4RSQv9GbQ_E8qVZNcccpaAbpYTH6Ps4VleXM7pXxuPerLDU-W27k4a0d664MlUHxBQ" /><link rel="stylesheet" href="/assets/application-c07a59afdf8631a30ac88e98f48da8012fcecb39db5c5ce05a985950b2773bac.css" media="all" data-turbolinks-track="reload" /><script src="/packs/js/application-194ed409298f13f197d2.js" data-turbolinks-track="reload" defer="defer"></script><script async="true" crossorigin="anonymous" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4930099895671899"></script><script async="true" src="https://www.googletagmanager.com/gtag/js?id=G-7KR6VNWHWS"></script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-7KR6VNWHWS');</script></head><body><nav class="navbar navbar-expand-lg navbar-dark bg-dark sticky-top"><div class="container"><a class="navbar-brand" href="/"><i class="fas fa-exchange-alt"></i> Go REST</a><button aria-controls="AppNavBar" aria-expanded="false" aria-label="Toggle navigation" class="navbar-toggler" data-bs-target="#AppNavBar" data-bs-toggle="collapse" type="button"><span class="navbar-toggler-icon"></span></button><div class="collapse navbar-collapse" id="AppNavBar"><ul class="navbar-nav ms-auto"><li class="nav-item"><a class="nav-link" href="/chandamama-stories"><i class="fas fa-cloud-moon"></i> Chandamama Stories</a></li><li class="nav-item"><a class="nav-link" href="/qa"><i class="fas fa-life-ring"></i> Help</a></li><li class="nav-item"><a class="nav-link" href="/rest-console"><i class="fab fa-linux"></i> Rest Console</a></li><li class="nav-item dropdown"><a aria-expanded="false" class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" id="ToolsDropDown" role="button"><i class="fas fa-tools"></i> Tools</a><ul aria-labelledby="ToolsDropDown" class="dropdown-menu"><li class><a class="dropdown-item" href="/tools/base64-encode-decode">Base64 Encode/Decode</a></li><li class><a class="dropdown-item" href="/tools/url-encode-decode">Url Encode/Decode</a></li><li class><a class="dropdown-item" href="/tools/gcode-translator">G-Code Translator</a></li></ul></li><li class="nav-item"><a class="nav-link" href="/consumer/login">Login</a></li></ul></div></div></nav><div class="container pt-3"><h1 class="text-center">GraphQL and REST API for Testing and Prototyping</h1><h4 class="text-center text-muted">fake data | real responses | 24/7 online</h4><div class="row mt-5"><div class="col-md-6"><h3>Resources</h3><table class="table table-responsive-sm table-sm"><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/users">https://gorest.co.in/public/v2/users</a></samp></td><td class="text-end">2930</td></tr><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/posts">https://gorest.co.in/public/v2/posts</a></samp></td><td class="text-end">2998</td></tr><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/comments">https://gorest.co.in/public/v2/comments</a></samp></td><td class="text-end">3032</td></tr><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/todos">https://gorest.co.in/public/v2/todos</a></samp></td><td class="text-end">1533</td></tr></table></div><div class="col-md-6"><h3>Trying it Out</h3><table class="table table-responsive-sm table-sm"><tr><td><samp>POST /public/v2/users</samp></td><td class="text-end">Create a new user</td></tr><tr><td><samp>GET /public/v2/users/1700815</samp></td><td class="text-end">Get user details</td></tr><tr><td><samp>PUT|PATCH /public/v2/users/1700815</samp></td><td class="text-end">Update user details</td></tr><tr><td><samp>DELETE /public/v2/users/1700815</samp></td><td class="text-end">Delete user</td></tr></table></div></div><h3 class="mt-3">Nested Resources</h3><div class="row"><div class="col-md-6"><table class="table table-responsive-sm table-sm"><tr><td><samp>GET <a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/users/1700815/posts">/public/v2/users/1700815/posts</a></samp></td><td class="text-end">Retrieves user posts</td></tr><tr><td><samp>GET <a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/posts/1700815/comments">/public/v2/posts/1700815/comments</a></samp></td><td class="text-end">Retrieves post comments</td></tr><tr><td><samp>GET <a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/users/1700815/todos">/public/v2/users/1700815/todos</a></samp></td><td class="text-end">Retrieves user todos</td></tr></table></div><div class="col-md-6"><table class="table table-responsive-sm table-sm"><tr><td><samp>POST /public/v2/users/1700815/posts</samp></td><td class="text-end">Creates a user post</td></tr><tr><td><samp>POST /public/v2/posts/1700815/comments</samp></td><td class="text-end">Creates a post comment</td></tr><tr><td><samp>POST /public/v2/users/1700815/todos</samp></td><td class="text-end">Creates a user todo</td></tr></table></div></div><ul><li class="text-warning">Do not post your personal data like name, email, phone, photo etc...</li><li class="text-info">For paged results parameter "page" and "per_page" should be passed in url ex: GET <code>/public/v2/users?page=1&per_page=20</code> (max 100 results per page)</li><li class="text-info">Request methods PUT, POST, PATCH, DELETE needs access token, which needs to be passed with &quot;Authorization&quot; header as Bearer token.</li><li class="text-info">API Versions <code>/public-api/*</code>, <code>/public/v1/*</code> and <code>/public/v2/*</code></li><li><a href="/consumer/login">Get your access token</a></li></ul><h3 class="mt-5">GraphQL Endpoint</h3><ul><li>GraphQL API is available at <code>https://gorest.co.in/public/v2/graphql</code></li><li><a target="_blank" href="/graphql/schema.json">View GraphQL json schema</a></li><li><a target="_blank" href="graphql/schema.graphql">View GrapQL schema</a></li></ul><h3 class="mt-5">Features</h3><ul><li>Fully secured quick prototyping.</li><li>Response format negotiation. (supporting JSON and XML add &quot;.json&quot; or &quot;.xml&quot; to api end point)</li><li>Support for the OPTIONS and HEAD verbs.</li><li>Full search support on all fields. Ex: https://gorest.co.in/public/v2/users?name=kumar</li><li>Data created/modified by a user is only visible to that perticular user, all data will be deleted and recreated on daily basis.</li><li><a href="/my-account/logs">Request and response logging.</a></li></ul><div class="row"><div class="col-md-6"><h3 class="mt-3">Rate Limiting Headers</h3><ul><li><a href="/my-account/access-tokens">Customize the rate limit per access token.</a></li><li><code>X-RateLimit-Limit</code> number of allowed requests/minute.</li><li><code>X-RateLimit-Remaining</code> remaining requests within the current period.</li><li><code>X-RateLimit-Reset</code> seconds to wait before having maximum number of allowed requests again.</li></ul></div><div class="col-md-6"><h3 class="mt-3">Pagination Headers</h3><ul><li><code>X-Pagination-Total</code> total number of results.</li><li><code>X-Pagination-Pages</code> total number of pages.</li><li><code>X-Pagination-Page</code> current page number.</li><li><code>X-Pagination-Limit</code> results per page.</li></ul></div></div><h3 class="mt-3">API Version 2</h3><ul><li>Path: <code>/public/v2/*</code></li><li>Response format Object or Array of Objects <code>{}</code> or <code>[{}]</code></li><li>HTTP Status code contains the actual response code, response headers contains the pagination information, response body contains the results.</li></ul><h3 class="mt-3">API Version 1</h3><ul><li>Path: <code>/public/v1/*</code></li><li>Response format <code>{ meta:, data: }</code></li><li>HTTP status code contains the actual response code, <code>meta</code> contains the pagination information and <code>data</code> contains the actual results</li></ul><h3 class="mt-3">API Version 0</h3><ul><li>Path: <code>/public-api/*</code></li><li>Response format <code>{ code :, meta:, data: }</code></li><li>HTTP status code is always 200, <code>code</code> contains the actual response code, <code>meta</code> contains the pagination information, <code>data</code> contains the actual results</li></ul><h3 class="mt-5">Authentication</h3><p>Unlike Web applications, RESTful APIs are usually stateless, which means sessions or cookies should not be used. Therefore, each request should come with some sort of authentication credentials. A common practice is to send a secret access token with each request to authenticate the user. Since an access token can be used to uniquely identify and authenticate a user, API requests should always be sent via HTTPS to prevent man-in-the-middle (MitM) attacks. </p><p>There are different ways to send an access token:</p><ul><li><a href="https://en.wikipedia.org/wiki/Basic_access_authentication" rel="noreferrer" target="_blank">HTTP Basic Auth</a>: the access token is sent as the username.</li><li>Query parameter: the access token is sent as a query parameter in the API URL. <br/>e.g. <samp>https://gorest.co.in/public/v2/users?access-token=xxx</samp></li><li><a href="http://oauth.net/2/" rel="noreferrer" target="_blank">OAuth 2</a>: the access token is obtained by the consumer from an authorization server and sent to the API server via <a href="http://tools.ietf.org/html/rfc6750" rel="noreferrer" target="_blank">HTTP Bearer Tokens </a>, according to the OAuth2 protocol.</li><li class="text-info">This API supports only &quot;HTTP Bearer Tokens&quot; and &quot;Query parameter Auth&quot;</li></ul><h3 class="mt-5 mb-3">cUrl Examples for REST API</h3><div class="mb-3"><h6 class="text-info">List users</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XGET "https://gorest.co.in/public/v2/users"</samp></div><div class="mb-3"><h6 class="text-info">Create user</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/users" -d '{"name":"Tenali Ramakrishna", "gender":"male", "email":"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="e296878c838e8bcc90838f8389908b918a8c83a2d3d78187cc818d8f">[email&#160;protected]</a>", "status":"active"}' </samp></div><div class="mb-3"><h6 class="text-info">Update user</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPATCH "https://gorest.co.in/public/v2/users/1700815" -d '{"name":"Allasani Peddana", "email":"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="58393434392b39363176283d3c3c39363918696d3b3d763b3735">[email&#160;protected]</a>", "status":"active"}' </samp></div><div class="mb-3"><h6 class="text-info">Delete user</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XDELETE "https://gorest.co.in/public/v2/users/1700815"</samp></div><h3 class="mt-5 mb-3">cUrl Examples for GraphQL</h3><div class="mb-3"><h6 class="text-info">List users</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"query{users {pageInfo {endCursor startCursor hasNextPage hasPreviousPage} totalCount nodes {id name email gender status}}}"}'</samp></div><div class="mb-3"><h6 class="text-info">Get User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"query{user(id: 1700815) { id name email gender status }}"}'</samp></div><div class="mb-3"><h6 class="text-info">Create User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"mutation{createUser(input: {name: \"Tenali Ramakrishna\" gender: \"male\" email: \"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="c9bdaca7a8a5a0e7bba8a4a8a2bba0baa1a7a889f8fcaaace7aaa6a4">[email&#160;protected]</a>\" status: \"active\"}) {user{id name gender email status}}}"}'</samp></div><div class="mb-3"><h6 class="text-info">Update User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"mutation{updateUser(input: {id: 1700815 name: \"Allasani Peddana\" email: \"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="5a3b36363b293b3433742a3f3e3e3b343b1a6b6f393f74393537">[email&#160;protected]</a>\" status: \"active\"}) {user{id name gender email status}}}"}'</samp></div><div class="mb-3"><h6 class="text-info">Delete User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"mutation{deleteUser(input: {id: 1700815}){user {id name email gender status}}}"}'</samp></div><h3 class="mt-5">REST API Http Response Codes</h3><ul><li>200: OK. Everything worked as expected.</li><li>201: A resource was successfully created in response to a POST request. The Location header contains the URL pointing to the newly created resource.</li><li>204: The request was handled successfully and the response contains no body content (like a DELETE request).</li><li>304: The resource was not modified. You can use the cached version.</li><li>400: Bad request. This could be caused by various actions by the user, such as providing invalid JSON data in the request body etc.</li><li>401: Authentication failed.</li><li>403: The authenticated user is not allowed to access the specified API endpoint.</li><li>404: The requested resource does not exist.</li><li>405: Method not allowed. Please check the Allow header for the allowed HTTP methods.</li><li>415: Unsupported media type. The requested content type or version number is invalid.</li><li>422: Data validation failed (in response to a POST request, for example). Please check the response body for detailed error messages.</li><li>429: Too many requests. The request was rejected due to rate limiting.</li><li>500: Internal server error. This could be caused by internal program errors.</li></ul></div><hr class="mt-5" /><div class="container"><div class="footer"><ul class="list-inline"><li class="list-inline-item">&copy; Go Rest 2023</li><li class="list-inline-item float-lg-end"><a href="/privacy-policy">Privacy Policy</a></li><li class="list-inline-item float-lg-end me-3"><a href="/contact-us">Contact Us</a></li></ul></div></div><script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script></body></html>
13:12:10.933 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:12:10.940 [main] DEBUG com.intuit.karate - request:
1 > GET https://gorest.co.in/public/v2/users
1 > Host: gorest.co.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:12:12.186 [main] DEBUG com.intuit.karate - response time in milliseconds: 1223
1 < 200
1 < Date: Fri, 01 Dec 2023 16:12:12 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Cache-Control: max-age=0, private, must-revalidate
1 < etag: W/"2f65c78104762887f82686f36d9bf8d3"
1 < referrer-policy: strict-origin-when-cross-origin
1 < vary: Origin
1 < x-content-type-options: nosniff
1 < x-download-options: noopen
1 < x-frame-options: SAMEORIGIN
1 < x-links-current: https://gorest.co.in/public/v2/users?page=1
1 < x-links-next: https://gorest.co.in/public/v2/users?page=2
1 < x-links-previous: 
1 < x-pagination-limit: 10
1 < x-pagination-page: 1
1 < x-pagination-pages: 293
1 < x-pagination-total: 2930
1 < x-permitted-cross-domain-policies: none
1 < x-request-id: 3ba31294-699b-48bf-980d-586f0d59b482
1 < x-runtime: 0.045594
1 < x-xss-protection: 0
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=bMUKge1V1cc57Wqgm7KITtJIBUznVCFcfvn6tzidrtE1%2BOhP5owHUeE4s6XlwM8zzVjpquy7hp7L5zoQ%2BhP0%2FxSOyeEaNozfclXUD%2FZjZI6cFgRQuWl%2Bg5JKejZWLjE%3D"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 82ec9c3d1debb7ef-AMS
1 < alt-svc: h3=":443"; ma=86400
[{"gender":"male","name":"Minakshi Pandey","id":5803679,"email":"minakshi_pandey@torp.test","status":"active"},{"gender":"female","name":"Rameshwar Banerjee","id":5803678,"email":"rameshwar_banerjee@schiller.test","status":"active"},{"gender":"male","name":"Chakor Bhat","id":5803674,"email":"bhat_chakor@goldner.test","status":"inactive"},{"gender":"female","name":"Paramartha Menon","id":5803673,"email":"menon_paramartha@tromp.test","status":"active"},{"gender":"male","name":"Gajabahu Talwar Jr.","id":5803672,"email":"talwar_jr_gajabahu@jones-bernier.example","status":"inactive"},{"gender":"female","name":"Tapan Iyengar","id":5803671,"email":"iyengar_tapan@sporer.example","status":"inactive"},{"gender":"male","name":"Lakshminath Achari","id":5803670,"email":"lakshminath_achari@dare.test","status":"active"},{"gender":"male","name":"Tara Iyer","id":5803669,"email":"iyer_tara@friesen-yost.test","status":"inactive"},{"gender":"male","name":"Eshana Kaniyar","id":5803668,"email":"eshana_kaniyar@cruickshank-crona.test","status":"inactive"},{"gender":"female","name":"Dhananjay Menon","id":5803667,"email":"menon_dhananjay@gislason.example","status":"active"}]
13:12:12.219 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:12:12.224 [main] DEBUG com.intuit.karate - request:
1 > GET https://gorest.co.in/public/v2/users/5803679
1 > Host: gorest.co.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:12:13.071 [main] DEBUG com.intuit.karate - response time in milliseconds: 847
1 < 200
1 < Date: Fri, 01 Dec 2023 16:12:13 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Cache-Control: max-age=0, private, must-revalidate
1 < etag: W/"36c49e5035dff7a7e0d757144328355a"
1 < referrer-policy: strict-origin-when-cross-origin
1 < vary: Origin
1 < x-content-type-options: nosniff
1 < x-download-options: noopen
1 < x-frame-options: SAMEORIGIN
1 < x-permitted-cross-domain-policies: none
1 < x-request-id: 7ea031db-7c88-4bd9-bc62-01e926aba4f9
1 < x-runtime: 0.036129
1 < x-xss-protection: 0
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=ZAffpFc5rKgMylcKnBSBMjGis%2FNSq12w%2FpQ8NrrSA45cSSEndwDsd%2B3Zqgnm7YtxYeUQy8cn%2BkPJh%2FX6ZHQgD%2FSnsEzkFEZ%2FvK2GNwStcoG9PM2CWusxAGl4Phx%2FxTY%3D"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 82ec9c452fd81c86-AMS
1 < alt-svc: h3=":443"; ma=86400
{"gender":"male","name":"Minakshi Pandey","id":5803679,"email":"minakshi_pandey@torp.test","status":"active"}
13:12:13.080 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:12:13.083 [main] DEBUG com.intuit.karate - request:
1 > GET https://gorest.co.in/public/v2/users/5803671
1 > Host: gorest.co.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:12:14.228 [main] DEBUG com.intuit.karate - response time in milliseconds: 1144
1 < 200
1 < Date: Fri, 01 Dec 2023 16:12:14 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Cache-Control: max-age=0, private, must-revalidate
1 < etag: W/"b284a202f4aa0585ac51b7959f3c2663"
1 < referrer-policy: strict-origin-when-cross-origin
1 < vary: Origin
1 < x-content-type-options: nosniff
1 < x-download-options: noopen
1 < x-frame-options: SAMEORIGIN
1 < x-permitted-cross-domain-policies: none
1 < x-request-id: 20acdc01-b9c0-4404-86c8-0474c3706ddb
1 < x-runtime: 0.027116
1 < x-xss-protection: 0
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=hzhoWX%2FiHxsP10gD32MUrCuM1L%2F5PN8EQIbfH4EYZ%2Bq%2FD0MtxNlXGhpmBxfpFRpEPCcZ7BhnvwX3oizBuRpQbr%2BP70H9T0XxneNw0f1PTqoq1rlnEvxP8SViiY2e3BY%3D"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 82ec9c4a5e600e64-AMS
1 < alt-svc: h3=":443"; ma=86400
{"gender":"female","name":"Tapan Iyengar","id":5803671,"email":"iyengar_tapan@sporer.example","status":"inactive"}
13:15:13.963 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:15:14.613 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:15:14.834 [main] DEBUG com.intuit.karate - request:
1 > GET https://gorest.co.in
1 > Host: gorest.co.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:15:16.364 [main] DEBUG com.intuit.karate - response time in milliseconds: 1524
1 < 200
1 < Date: Fri, 01 Dec 2023 16:15:16 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Cache-Control: max-age=0, private, must-revalidate
1 < feature-policy: camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'
1 < link: </assets/application-c07a59afdf8631a30ac88e98f48da8012fcecb39db5c5ce05a985950b2773bac.css>; rel=preload; as=style; nopush
1 < referrer-policy: strict-origin-when-cross-origin
1 < x-content-type-options: nosniff
1 < x-download-options: noopen
1 < x-frame-options: SAMEORIGIN
1 < x-permitted-cross-domain-policies: none
1 < x-request-id: f7d97f6a-da0c-435d-affb-608949b79d5d
1 < x-runtime: 0.045226
1 < x-xss-protection: 0
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=VJWbWr9gl%2BeI6VGT3Uj1PFZEGQOV32VxrDnL5KJOWKeUf%2BDbnlfpYc9ztDVazzlNKqV%2FcXrTlHb%2B2%2FqKE1gs174pPc1s9oPGyxCtdei5IeoT1eboMwrxicElHuxches%3D"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 82eca0bb7a630082-CDG
1 < alt-svc: h3=":443"; ma=86400
1 < Set-Cookie: _gorest_session=YZ3p8Ymem3ACQ6CrzGFN697j%2B1ld1AtFrOJm%2FtS2lPM5NSq2NomBcTEY9%2BphIz3iaOOk%2FJlB%2FHhswrKZlhx6u6vdpCGSdntY1g8bKRjjw12XbdkTJIBRVmuPtbK6aglItSnxrgU5BJ7mGxZ7HcBARPG5llC4K9NdSj72P7rGb1oqzIUhA4JZCBG%2B26iendkgWwYzCayD55KlR3iQ9kDozV0vUgQzoPqhkwRpCQJPVSGMp4JIdfzUeKzXjOt8rI7TlxLoAtraNaU2ea9SUX5tp5u52pneTLc%3D--zfFc0bc%2Fa4e7BKFG--0a7w435RFPotD%2BeD7ga%2Fxw%3D%3D; Domain=gorest.co.in
<!DOCTYPE html><html><head><meta charset="utf-8" /><meta content="width=device-width, initial-scale=1, shrink-to-fit=no" name="viewport" /><link href="/favicon.ico" rel="icon" type="image/x-icon" /><title>GraphQL and REST API for Testing and Prototyping | GO REST</title>
<meta name="description" content="24/7 online fake GraphQL and REST API service for quick testing and prototyping of web and android applications. Supports authentication, custom rate limiting, response format negotiation">
<meta name="keywords" content="graphql, rest api, fake data, api testing, graphql testing, json response, xml response, oauth, rate limiting"><meta name="csrf-param" content="authenticity_token" />
<meta name="csrf-token" content="_EfUKDj_BT0mXQvXft9YNOqlHax2GN8lf6ddDD6cWqEwUYz5Fqyf7csY_wGG41-rcBqKnHMs00UdeRIMyMLjdw" /><link rel="stylesheet" href="/assets/application-c07a59afdf8631a30ac88e98f48da8012fcecb39db5c5ce05a985950b2773bac.css" media="all" data-turbolinks-track="reload" /><script src="/packs/js/application-194ed409298f13f197d2.js" data-turbolinks-track="reload" defer="defer"></script><script async="true" crossorigin="anonymous" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4930099895671899"></script><script async="true" src="https://www.googletagmanager.com/gtag/js?id=G-7KR6VNWHWS"></script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-7KR6VNWHWS');</script></head><body><nav class="navbar navbar-expand-lg navbar-dark bg-dark sticky-top"><div class="container"><a class="navbar-brand" href="/"><i class="fas fa-exchange-alt"></i> Go REST</a><button aria-controls="AppNavBar" aria-expanded="false" aria-label="Toggle navigation" class="navbar-toggler" data-bs-target="#AppNavBar" data-bs-toggle="collapse" type="button"><span class="navbar-toggler-icon"></span></button><div class="collapse navbar-collapse" id="AppNavBar"><ul class="navbar-nav ms-auto"><li class="nav-item"><a class="nav-link" href="/chandamama-stories"><i class="fas fa-cloud-moon"></i> Chandamama Stories</a></li><li class="nav-item"><a class="nav-link" href="/qa"><i class="fas fa-life-ring"></i> Help</a></li><li class="nav-item"><a class="nav-link" href="/rest-console"><i class="fab fa-linux"></i> Rest Console</a></li><li class="nav-item dropdown"><a aria-expanded="false" class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" id="ToolsDropDown" role="button"><i class="fas fa-tools"></i> Tools</a><ul aria-labelledby="ToolsDropDown" class="dropdown-menu"><li class><a class="dropdown-item" href="/tools/base64-encode-decode">Base64 Encode/Decode</a></li><li class><a class="dropdown-item" href="/tools/url-encode-decode">Url Encode/Decode</a></li><li class><a class="dropdown-item" href="/tools/gcode-translator">G-Code Translator</a></li></ul></li><li class="nav-item"><a class="nav-link" href="/consumer/login">Login</a></li></ul></div></div></nav><div class="container pt-3"><h1 class="text-center">GraphQL and REST API for Testing and Prototyping</h1><h4 class="text-center text-muted">fake data | real responses | 24/7 online</h4><div class="row mt-5"><div class="col-md-6"><h3>Resources</h3><table class="table table-responsive-sm table-sm"><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/users">https://gorest.co.in/public/v2/users</a></samp></td><td class="text-end">2930</td></tr><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/posts">https://gorest.co.in/public/v2/posts</a></samp></td><td class="text-end">2998</td></tr><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/comments">https://gorest.co.in/public/v2/comments</a></samp></td><td class="text-end">3032</td></tr><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/todos">https://gorest.co.in/public/v2/todos</a></samp></td><td class="text-end">1533</td></tr></table></div><div class="col-md-6"><h3>Trying it Out</h3><table class="table table-responsive-sm table-sm"><tr><td><samp>POST /public/v2/users</samp></td><td class="text-end">Create a new user</td></tr><tr><td><samp>GET /public/v2/users/1700815</samp></td><td class="text-end">Get user details</td></tr><tr><td><samp>PUT|PATCH /public/v2/users/1700815</samp></td><td class="text-end">Update user details</td></tr><tr><td><samp>DELETE /public/v2/users/1700815</samp></td><td class="text-end">Delete user</td></tr></table></div></div><h3 class="mt-3">Nested Resources</h3><div class="row"><div class="col-md-6"><table class="table table-responsive-sm table-sm"><tr><td><samp>GET <a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/users/1700815/posts">/public/v2/users/1700815/posts</a></samp></td><td class="text-end">Retrieves user posts</td></tr><tr><td><samp>GET <a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/posts/1700815/comments">/public/v2/posts/1700815/comments</a></samp></td><td class="text-end">Retrieves post comments</td></tr><tr><td><samp>GET <a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/users/1700815/todos">/public/v2/users/1700815/todos</a></samp></td><td class="text-end">Retrieves user todos</td></tr></table></div><div class="col-md-6"><table class="table table-responsive-sm table-sm"><tr><td><samp>POST /public/v2/users/1700815/posts</samp></td><td class="text-end">Creates a user post</td></tr><tr><td><samp>POST /public/v2/posts/1700815/comments</samp></td><td class="text-end">Creates a post comment</td></tr><tr><td><samp>POST /public/v2/users/1700815/todos</samp></td><td class="text-end">Creates a user todo</td></tr></table></div></div><ul><li class="text-warning">Do not post your personal data like name, email, phone, photo etc...</li><li class="text-info">For paged results parameter "page" and "per_page" should be passed in url ex: GET <code>/public/v2/users?page=1&per_page=20</code> (max 100 results per page)</li><li class="text-info">Request methods PUT, POST, PATCH, DELETE needs access token, which needs to be passed with &quot;Authorization&quot; header as Bearer token.</li><li class="text-info">API Versions <code>/public-api/*</code>, <code>/public/v1/*</code> and <code>/public/v2/*</code></li><li><a href="/consumer/login">Get your access token</a></li></ul><h3 class="mt-5">GraphQL Endpoint</h3><ul><li>GraphQL API is available at <code>https://gorest.co.in/public/v2/graphql</code></li><li><a target="_blank" href="/graphql/schema.json">View GraphQL json schema</a></li><li><a target="_blank" href="graphql/schema.graphql">View GrapQL schema</a></li></ul><h3 class="mt-5">Features</h3><ul><li>Fully secured quick prototyping.</li><li>Response format negotiation. (supporting JSON and XML add &quot;.json&quot; or &quot;.xml&quot; to api end point)</li><li>Support for the OPTIONS and HEAD verbs.</li><li>Full search support on all fields. Ex: https://gorest.co.in/public/v2/users?name=kumar</li><li>Data created/modified by a user is only visible to that perticular user, all data will be deleted and recreated on daily basis.</li><li><a href="/my-account/logs">Request and response logging.</a></li></ul><div class="row"><div class="col-md-6"><h3 class="mt-3">Rate Limiting Headers</h3><ul><li><a href="/my-account/access-tokens">Customize the rate limit per access token.</a></li><li><code>X-RateLimit-Limit</code> number of allowed requests/minute.</li><li><code>X-RateLimit-Remaining</code> remaining requests within the current period.</li><li><code>X-RateLimit-Reset</code> seconds to wait before having maximum number of allowed requests again.</li></ul></div><div class="col-md-6"><h3 class="mt-3">Pagination Headers</h3><ul><li><code>X-Pagination-Total</code> total number of results.</li><li><code>X-Pagination-Pages</code> total number of pages.</li><li><code>X-Pagination-Page</code> current page number.</li><li><code>X-Pagination-Limit</code> results per page.</li></ul></div></div><h3 class="mt-3">API Version 2</h3><ul><li>Path: <code>/public/v2/*</code></li><li>Response format Object or Array of Objects <code>{}</code> or <code>[{}]</code></li><li>HTTP Status code contains the actual response code, response headers contains the pagination information, response body contains the results.</li></ul><h3 class="mt-3">API Version 1</h3><ul><li>Path: <code>/public/v1/*</code></li><li>Response format <code>{ meta:, data: }</code></li><li>HTTP status code contains the actual response code, <code>meta</code> contains the pagination information and <code>data</code> contains the actual results</li></ul><h3 class="mt-3">API Version 0</h3><ul><li>Path: <code>/public-api/*</code></li><li>Response format <code>{ code :, meta:, data: }</code></li><li>HTTP status code is always 200, <code>code</code> contains the actual response code, <code>meta</code> contains the pagination information, <code>data</code> contains the actual results</li></ul><h3 class="mt-5">Authentication</h3><p>Unlike Web applications, RESTful APIs are usually stateless, which means sessions or cookies should not be used. Therefore, each request should come with some sort of authentication credentials. A common practice is to send a secret access token with each request to authenticate the user. Since an access token can be used to uniquely identify and authenticate a user, API requests should always be sent via HTTPS to prevent man-in-the-middle (MitM) attacks. </p><p>There are different ways to send an access token:</p><ul><li><a href="https://en.wikipedia.org/wiki/Basic_access_authentication" rel="noreferrer" target="_blank">HTTP Basic Auth</a>: the access token is sent as the username.</li><li>Query parameter: the access token is sent as a query parameter in the API URL. <br/>e.g. <samp>https://gorest.co.in/public/v2/users?access-token=xxx</samp></li><li><a href="http://oauth.net/2/" rel="noreferrer" target="_blank">OAuth 2</a>: the access token is obtained by the consumer from an authorization server and sent to the API server via <a href="http://tools.ietf.org/html/rfc6750" rel="noreferrer" target="_blank">HTTP Bearer Tokens </a>, according to the OAuth2 protocol.</li><li class="text-info">This API supports only &quot;HTTP Bearer Tokens&quot; and &quot;Query parameter Auth&quot;</li></ul><h3 class="mt-5 mb-3">cUrl Examples for REST API</h3><div class="mb-3"><h6 class="text-info">List users</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XGET "https://gorest.co.in/public/v2/users"</samp></div><div class="mb-3"><h6 class="text-info">Create user</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/users" -d '{"name":"Tenali Ramakrishna", "gender":"male", "email":"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="5420313a35383d7a263539353f263d273c3a3514656137317a373b39">[email&#160;protected]</a>", "status":"active"}' </samp></div><div class="mb-3"><h6 class="text-info">Update user</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPATCH "https://gorest.co.in/public/v2/users/1700815" -d '{"name":"Allasani Peddana", "email":"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="4b2a27272a382a2522653b2e2f2f2a252a0b7a7e282e65282426">[email&#160;protected]</a>", "status":"active"}' </samp></div><div class="mb-3"><h6 class="text-info">Delete user</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XDELETE "https://gorest.co.in/public/v2/users/1700815"</samp></div><h3 class="mt-5 mb-3">cUrl Examples for GraphQL</h3><div class="mb-3"><h6 class="text-info">List users</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"query{users {pageInfo {endCursor startCursor hasNextPage hasPreviousPage} totalCount nodes {id name email gender status}}}"}'</samp></div><div class="mb-3"><h6 class="text-info">Get User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"query{user(id: 1700815) { id name email gender status }}"}'</samp></div><div class="mb-3"><h6 class="text-info">Create User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"mutation{createUser(input: {name: \"Tenali Ramakrishna\" gender: \"male\" email: \"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="95e1f0fbf4f9fcbbe7f4f8f4fee7fce6fdfbf4d5a4a0f6f0bbf6faf8">[email&#160;protected]</a>\" status: \"active\"}) {user{id name gender email status}}}"}'</samp></div><div class="mb-3"><h6 class="text-info">Update User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"mutation{updateUser(input: {id: 1700815 name: \"Allasani Peddana\" email: \"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="72131e1e1301131c1b5c02171616131c1332434711175c111d1f">[email&#160;protected]</a>\" status: \"active\"}) {user{id name gender email status}}}"}'</samp></div><div class="mb-3"><h6 class="text-info">Delete User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"mutation{deleteUser(input: {id: 1700815}){user {id name email gender status}}}"}'</samp></div><h3 class="mt-5">REST API Http Response Codes</h3><ul><li>200: OK. Everything worked as expected.</li><li>201: A resource was successfully created in response to a POST request. The Location header contains the URL pointing to the newly created resource.</li><li>204: The request was handled successfully and the response contains no body content (like a DELETE request).</li><li>304: The resource was not modified. You can use the cached version.</li><li>400: Bad request. This could be caused by various actions by the user, such as providing invalid JSON data in the request body etc.</li><li>401: Authentication failed.</li><li>403: The authenticated user is not allowed to access the specified API endpoint.</li><li>404: The requested resource does not exist.</li><li>405: Method not allowed. Please check the Allow header for the allowed HTTP methods.</li><li>415: Unsupported media type. The requested content type or version number is invalid.</li><li>422: Data validation failed (in response to a POST request, for example). Please check the response body for detailed error messages.</li><li>429: Too many requests. The request was rejected due to rate limiting.</li><li>500: Internal server error. This could be caused by internal program errors.</li></ul></div><hr class="mt-5" /><div class="container"><div class="footer"><ul class="list-inline"><li class="list-inline-item">&copy; Go Rest 2023</li><li class="list-inline-item float-lg-end"><a href="/privacy-policy">Privacy Policy</a></li><li class="list-inline-item float-lg-end me-3"><a href="/contact-us">Contact Us</a></li></ul></div></div><script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script></body></html>
13:15:16.380 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:15:16.388 [main] DEBUG com.intuit.karate - request:
1 > GET https://gorest.co.in/public/v2/users
1 > Host: gorest.co.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:15:17.875 [main] DEBUG com.intuit.karate - response time in milliseconds: 1464
1 < 200
1 < Date: Fri, 01 Dec 2023 16:15:18 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Cache-Control: max-age=0, private, must-revalidate
1 < etag: W/"2f65c78104762887f82686f36d9bf8d3"
1 < referrer-policy: strict-origin-when-cross-origin
1 < vary: Origin
1 < x-content-type-options: nosniff
1 < x-download-options: noopen
1 < x-frame-options: SAMEORIGIN
1 < x-links-current: https://gorest.co.in/public/v2/users?page=1
1 < x-links-next: https://gorest.co.in/public/v2/users?page=2
1 < x-links-previous: 
1 < x-pagination-limit: 10
1 < x-pagination-page: 1
1 < x-pagination-pages: 293
1 < x-pagination-total: 2930
1 < x-permitted-cross-domain-policies: none
1 < x-request-id: 5b717a1e-957f-4941-8d22-e43ecc50f00b
1 < x-runtime: 0.029870
1 < x-xss-protection: 0
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=qVzGDoEh9mjTDNo1iIuSzAWDm3tW6p06g6FQdYVbSfywMQxrOuxOtm8nRP3Ec%2BTfSuA8oWfHalqhT2REOxXlKEtEvsQHZIZ1ve5q%2B1MAZrQLqdVTGetAJUpQvELmG6Q%3D"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 82eca0c309cf7472-MIA
1 < alt-svc: h3=":443"; ma=86400
[{"gender":"male","name":"Minakshi Pandey","id":5803679,"email":"minakshi_pandey@torp.test","status":"active"},{"gender":"female","name":"Rameshwar Banerjee","id":5803678,"email":"rameshwar_banerjee@schiller.test","status":"active"},{"gender":"male","name":"Chakor Bhat","id":5803674,"email":"bhat_chakor@goldner.test","status":"inactive"},{"gender":"female","name":"Paramartha Menon","id":5803673,"email":"menon_paramartha@tromp.test","status":"active"},{"gender":"male","name":"Gajabahu Talwar Jr.","id":5803672,"email":"talwar_jr_gajabahu@jones-bernier.example","status":"inactive"},{"gender":"female","name":"Tapan Iyengar","id":5803671,"email":"iyengar_tapan@sporer.example","status":"inactive"},{"gender":"male","name":"Lakshminath Achari","id":5803670,"email":"lakshminath_achari@dare.test","status":"active"},{"gender":"male","name":"Tara Iyer","id":5803669,"email":"iyer_tara@friesen-yost.test","status":"inactive"},{"gender":"male","name":"Eshana Kaniyar","id":5803668,"email":"eshana_kaniyar@cruickshank-crona.test","status":"inactive"},{"gender":"female","name":"Dhananjay Menon","id":5803667,"email":"menon_dhananjay@gislason.example","status":"active"}]
13:15:17.908 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:15:17.913 [main] DEBUG com.intuit.karate - request:
1 > GET https://gorest.co.in/public/v2/users/5803679
1 > Host: gorest.co.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:15:18.758 [main] DEBUG com.intuit.karate - response time in milliseconds: 844
1 < 200
1 < Date: Fri, 01 Dec 2023 16:15:18 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Cache-Control: max-age=0, private, must-revalidate
1 < etag: W/"36c49e5035dff7a7e0d757144328355a"
1 < referrer-policy: strict-origin-when-cross-origin
1 < vary: Origin
1 < x-content-type-options: nosniff
1 < x-download-options: noopen
1 < x-frame-options: SAMEORIGIN
1 < x-permitted-cross-domain-policies: none
1 < x-request-id: 23d9c57f-cfe8-4454-860d-6af1e6828b9e
1 < x-runtime: 0.014857
1 < x-xss-protection: 0
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=lVAXbBNHVyv6Fe0qKNPntv3WhZjkQJVcEwKFQB2nYye%2FcXjLDvtNTAgWwcLplhIHd1rkZzF3IqlVk3W882LyqsxGjtDpk24Kj4zEbxEZeWlbTh41ad4UjnwI6vwxfhs%3D"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 82eca0cdacad0e3b-AMS
1 < alt-svc: h3=":443"; ma=86400
{"gender":"male","name":"Minakshi Pandey","id":5803679,"email":"minakshi_pandey@torp.test","status":"active"}
13:15:18.767 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:15:18.771 [main] DEBUG com.intuit.karate - request:
1 > GET https://gorest.co.in/public/v2/users/5803671
1 > Host: gorest.co.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:15:21.148 [main] DEBUG com.intuit.karate - response time in milliseconds: 2377
1 < 200
1 < Date: Fri, 01 Dec 2023 16:15:20 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Cache-Control: max-age=0, private, must-revalidate
1 < etag: W/"b284a202f4aa0585ac51b7959f3c2663"
1 < referrer-policy: strict-origin-when-cross-origin
1 < vary: Origin
1 < x-content-type-options: nosniff
1 < x-download-options: noopen
1 < x-frame-options: SAMEORIGIN
1 < x-permitted-cross-domain-policies: none
1 < x-request-id: 3053cdf9-3a5f-496e-9155-7d00554ee424
1 < x-runtime: 0.013838
1 < x-xss-protection: 0
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=vYcXJAVYmyuh5XLyDjhFKgMhkAHBycLPvB9VoAkW9u2GU9CpBdbkBggWKWqU0nmOQYDl0hu71tfX4yoMz9Oux1F9%2FGUcpq76uSjU7cdQ2A7zQno%2FYVk3VA2AoMpeGSU%3D"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 82eca0d2ddbc0bd5-AMS
1 < alt-svc: h3=":443"; ma=86400
{"gender":"female","name":"Tapan Iyengar","id":5803671,"email":"iyengar_tapan@sporer.example","status":"inactive"}
13:15:21.155 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:15:21.207 [main] DEBUG com.intuit.karate - request:
1 > POST https://gorest.co.in/public/v2/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 105
1 > Host: gorest.co.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"gender":"masculino","name":"Rodrigo","id":100,"email":"emailteste@prova.inatel.br","status":"cançado"}

13:15:22.060 [main] DEBUG com.intuit.karate - response time in milliseconds: 853
1 < 401
1 < Date: Fri, 01 Dec 2023 16:15:22 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 35
1 < Connection: keep-alive
1 < Cache-Control: no-cache
1 < referrer-policy: strict-origin-when-cross-origin
1 < vary: Origin
1 < x-content-type-options: nosniff
1 < x-download-options: noopen
1 < x-frame-options: SAMEORIGIN
1 < x-permitted-cross-domain-policies: none
1 < x-request-id: 8533a29d-87bd-4db6-a466-d82cf2347a88
1 < x-runtime: 0.012424
1 < x-xss-protection: 0
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=Ql6WHwrTS7xtIKB1Fdcrcvp3ibZDTtJjvBzbtoFJa8xQdNcSnksk6N9A2GXmoFlGTD8GG%2F%2F7kIQBKjrKiFgDsenN1FoyHpc2%2BV6Z82456hEvkNIzMMFCx0wg93wYMPs%3D"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 82eca0e26c242a0a-CDG
1 < alt-svc: h3=":443"; ma=86400
{"message":"Authentication failed"}
13:15:22.061 [main] ERROR com.intuit.karate - classpath:Prova/goRest.feature:43
Then status 201
status code was: 401, expected: 201, response time in milliseconds: 853, url: https://gorest.co.in/public/v2/users, response: 
{"message":"Authentication failed"}
classpath:Prova/goRest.feature:43
13:24:04.980 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:24:05.623 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:24:05.852 [main] DEBUG com.intuit.karate - request:
1 > GET https://gorest.co.in
1 > Host: gorest.co.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:24:07.148 [main] DEBUG com.intuit.karate - response time in milliseconds: 1289
1 < 200
1 < Date: Fri, 01 Dec 2023 16:24:07 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Cache-Control: max-age=0, private, must-revalidate
1 < feature-policy: camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'
1 < link: </assets/application-c07a59afdf8631a30ac88e98f48da8012fcecb39db5c5ce05a985950b2773bac.css>; rel=preload; as=style; nopush
1 < referrer-policy: strict-origin-when-cross-origin
1 < x-content-type-options: nosniff
1 < x-download-options: noopen
1 < x-frame-options: SAMEORIGIN
1 < x-permitted-cross-domain-policies: none
1 < x-request-id: 37e2c402-b55d-4091-a87b-8a96df0ab9cd
1 < x-runtime: 0.084898
1 < x-xss-protection: 0
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=LljwWlxgnawhvC3Y5HrAHYUaYD%2B1LWRqUE%2FXZ0V1tgefWebCqzN3uspSTkHqnHf59h355f0BRpl2GkV6OQC64z0Yin%2Fv0Z%2BMXR9aWU72JuY64FhwAg716OWh0sW%2BdNw%3D"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 82ecadb25d0302d1-CDG
1 < alt-svc: h3=":443"; ma=86400
1 < Set-Cookie: _gorest_session=K5gx5j%2FylnbJaaK%2F2q7RTKVFkmKo8%2BgBxltzArE3pOI%2FaKjqPRCiTgLOGiYjnEyiktG1waTljNjK4NtkDgKowz5E0NcXM2TeEio8XFnzxQ7YTQ0lIbYyHxhHWy75bPAkeuXEbHdpNq4ffZ2moyUNLFw9PHzDuXm16HgbO%2Fbkx7mou%2F%2B966YJ8MeAH9dg%2BsmayDVfFlQmSY8Hma59nAB17osaTF6v0VnzUjBoI3cNaMv0B7Y4Y1Hj5gHs7uAc%2FKAR1x3Q65fgk2QU5ljmQXoP7Eqzys3rmfM%3D--bx%2B21rjUfKE6NZNI--UlJ4RCsSaAGdj2am3vvi9Q%3D%3D; Domain=gorest.co.in
<!DOCTYPE html><html><head><meta charset="utf-8" /><meta content="width=device-width, initial-scale=1, shrink-to-fit=no" name="viewport" /><link href="/favicon.ico" rel="icon" type="image/x-icon" /><title>GraphQL and REST API for Testing and Prototyping | GO REST</title>
<meta name="description" content="24/7 online fake GraphQL and REST API service for quick testing and prototyping of web and android applications. Supports authentication, custom rate limiting, response format negotiation">
<meta name="keywords" content="graphql, rest api, fake data, api testing, graphql testing, json response, xml response, oauth, rate limiting"><meta name="csrf-param" content="authenticity_token" />
<meta name="csrf-token" content="crlWX1X9c7Rx9zP7D_YaGFq3y3B1DEzoXJElJ9ozPLjfF_SI4ZjSkwsSZkRL8MOFnK_TAepDvobdSUK_eDzzkA" /><link rel="stylesheet" href="/assets/application-c07a59afdf8631a30ac88e98f48da8012fcecb39db5c5ce05a985950b2773bac.css" media="all" data-turbolinks-track="reload" /><script src="/packs/js/application-194ed409298f13f197d2.js" data-turbolinks-track="reload" defer="defer"></script><script async="true" crossorigin="anonymous" src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4930099895671899"></script><script async="true" src="https://www.googletagmanager.com/gtag/js?id=G-7KR6VNWHWS"></script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-7KR6VNWHWS');</script></head><body><nav class="navbar navbar-expand-lg navbar-dark bg-dark sticky-top"><div class="container"><a class="navbar-brand" href="/"><i class="fas fa-exchange-alt"></i> Go REST</a><button aria-controls="AppNavBar" aria-expanded="false" aria-label="Toggle navigation" class="navbar-toggler" data-bs-target="#AppNavBar" data-bs-toggle="collapse" type="button"><span class="navbar-toggler-icon"></span></button><div class="collapse navbar-collapse" id="AppNavBar"><ul class="navbar-nav ms-auto"><li class="nav-item"><a class="nav-link" href="/chandamama-stories"><i class="fas fa-cloud-moon"></i> Chandamama Stories</a></li><li class="nav-item"><a class="nav-link" href="/qa"><i class="fas fa-life-ring"></i> Help</a></li><li class="nav-item"><a class="nav-link" href="/rest-console"><i class="fab fa-linux"></i> Rest Console</a></li><li class="nav-item dropdown"><a aria-expanded="false" class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" id="ToolsDropDown" role="button"><i class="fas fa-tools"></i> Tools</a><ul aria-labelledby="ToolsDropDown" class="dropdown-menu"><li class><a class="dropdown-item" href="/tools/base64-encode-decode">Base64 Encode/Decode</a></li><li class><a class="dropdown-item" href="/tools/url-encode-decode">Url Encode/Decode</a></li><li class><a class="dropdown-item" href="/tools/gcode-translator">G-Code Translator</a></li></ul></li><li class="nav-item"><a class="nav-link" href="/consumer/login">Login</a></li></ul></div></div></nav><div class="container pt-3"><h1 class="text-center">GraphQL and REST API for Testing and Prototyping</h1><h4 class="text-center text-muted">fake data | real responses | 24/7 online</h4><div class="row mt-5"><div class="col-md-6"><h3>Resources</h3><table class="table table-responsive-sm table-sm"><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/users">https://gorest.co.in/public/v2/users</a></samp></td><td class="text-end">2929</td></tr><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/posts">https://gorest.co.in/public/v2/posts</a></samp></td><td class="text-end">2998</td></tr><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/comments">https://gorest.co.in/public/v2/comments</a></samp></td><td class="text-end">3032</td></tr><tr><td><samp><a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/todos">https://gorest.co.in/public/v2/todos</a></samp></td><td class="text-end">1533</td></tr></table></div><div class="col-md-6"><h3>Trying it Out</h3><table class="table table-responsive-sm table-sm"><tr><td><samp>POST /public/v2/users</samp></td><td class="text-end">Create a new user</td></tr><tr><td><samp>GET /public/v2/users/1700815</samp></td><td class="text-end">Get user details</td></tr><tr><td><samp>PUT|PATCH /public/v2/users/1700815</samp></td><td class="text-end">Update user details</td></tr><tr><td><samp>DELETE /public/v2/users/1700815</samp></td><td class="text-end">Delete user</td></tr></table></div></div><h3 class="mt-3">Nested Resources</h3><div class="row"><div class="col-md-6"><table class="table table-responsive-sm table-sm"><tr><td><samp>GET <a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/users/1700815/posts">/public/v2/users/1700815/posts</a></samp></td><td class="text-end">Retrieves user posts</td></tr><tr><td><samp>GET <a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/posts/1700815/comments">/public/v2/posts/1700815/comments</a></samp></td><td class="text-end">Retrieves post comments</td></tr><tr><td><samp>GET <a target="_blank" class="text-white" href="https://gorest.co.in/public/v2/users/1700815/todos">/public/v2/users/1700815/todos</a></samp></td><td class="text-end">Retrieves user todos</td></tr></table></div><div class="col-md-6"><table class="table table-responsive-sm table-sm"><tr><td><samp>POST /public/v2/users/1700815/posts</samp></td><td class="text-end">Creates a user post</td></tr><tr><td><samp>POST /public/v2/posts/1700815/comments</samp></td><td class="text-end">Creates a post comment</td></tr><tr><td><samp>POST /public/v2/users/1700815/todos</samp></td><td class="text-end">Creates a user todo</td></tr></table></div></div><ul><li class="text-warning">Do not post your personal data like name, email, phone, photo etc...</li><li class="text-info">For paged results parameter "page" and "per_page" should be passed in url ex: GET <code>/public/v2/users?page=1&per_page=20</code> (max 100 results per page)</li><li class="text-info">Request methods PUT, POST, PATCH, DELETE needs access token, which needs to be passed with &quot;Authorization&quot; header as Bearer token.</li><li class="text-info">API Versions <code>/public-api/*</code>, <code>/public/v1/*</code> and <code>/public/v2/*</code></li><li><a href="/consumer/login">Get your access token</a></li></ul><h3 class="mt-5">GraphQL Endpoint</h3><ul><li>GraphQL API is available at <code>https://gorest.co.in/public/v2/graphql</code></li><li><a target="_blank" href="/graphql/schema.json">View GraphQL json schema</a></li><li><a target="_blank" href="graphql/schema.graphql">View GrapQL schema</a></li></ul><h3 class="mt-5">Features</h3><ul><li>Fully secured quick prototyping.</li><li>Response format negotiation. (supporting JSON and XML add &quot;.json&quot; or &quot;.xml&quot; to api end point)</li><li>Support for the OPTIONS and HEAD verbs.</li><li>Full search support on all fields. Ex: https://gorest.co.in/public/v2/users?name=kumar</li><li>Data created/modified by a user is only visible to that perticular user, all data will be deleted and recreated on daily basis.</li><li><a href="/my-account/logs">Request and response logging.</a></li></ul><div class="row"><div class="col-md-6"><h3 class="mt-3">Rate Limiting Headers</h3><ul><li><a href="/my-account/access-tokens">Customize the rate limit per access token.</a></li><li><code>X-RateLimit-Limit</code> number of allowed requests/minute.</li><li><code>X-RateLimit-Remaining</code> remaining requests within the current period.</li><li><code>X-RateLimit-Reset</code> seconds to wait before having maximum number of allowed requests again.</li></ul></div><div class="col-md-6"><h3 class="mt-3">Pagination Headers</h3><ul><li><code>X-Pagination-Total</code> total number of results.</li><li><code>X-Pagination-Pages</code> total number of pages.</li><li><code>X-Pagination-Page</code> current page number.</li><li><code>X-Pagination-Limit</code> results per page.</li></ul></div></div><h3 class="mt-3">API Version 2</h3><ul><li>Path: <code>/public/v2/*</code></li><li>Response format Object or Array of Objects <code>{}</code> or <code>[{}]</code></li><li>HTTP Status code contains the actual response code, response headers contains the pagination information, response body contains the results.</li></ul><h3 class="mt-3">API Version 1</h3><ul><li>Path: <code>/public/v1/*</code></li><li>Response format <code>{ meta:, data: }</code></li><li>HTTP status code contains the actual response code, <code>meta</code> contains the pagination information and <code>data</code> contains the actual results</li></ul><h3 class="mt-3">API Version 0</h3><ul><li>Path: <code>/public-api/*</code></li><li>Response format <code>{ code :, meta:, data: }</code></li><li>HTTP status code is always 200, <code>code</code> contains the actual response code, <code>meta</code> contains the pagination information, <code>data</code> contains the actual results</li></ul><h3 class="mt-5">Authentication</h3><p>Unlike Web applications, RESTful APIs are usually stateless, which means sessions or cookies should not be used. Therefore, each request should come with some sort of authentication credentials. A common practice is to send a secret access token with each request to authenticate the user. Since an access token can be used to uniquely identify and authenticate a user, API requests should always be sent via HTTPS to prevent man-in-the-middle (MitM) attacks. </p><p>There are different ways to send an access token:</p><ul><li><a href="https://en.wikipedia.org/wiki/Basic_access_authentication" rel="noreferrer" target="_blank">HTTP Basic Auth</a>: the access token is sent as the username.</li><li>Query parameter: the access token is sent as a query parameter in the API URL. <br/>e.g. <samp>https://gorest.co.in/public/v2/users?access-token=xxx</samp></li><li><a href="http://oauth.net/2/" rel="noreferrer" target="_blank">OAuth 2</a>: the access token is obtained by the consumer from an authorization server and sent to the API server via <a href="http://tools.ietf.org/html/rfc6750" rel="noreferrer" target="_blank">HTTP Bearer Tokens </a>, according to the OAuth2 protocol.</li><li class="text-info">This API supports only &quot;HTTP Bearer Tokens&quot; and &quot;Query parameter Auth&quot;</li></ul><h3 class="mt-5 mb-3">cUrl Examples for REST API</h3><div class="mb-3"><h6 class="text-info">List users</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XGET "https://gorest.co.in/public/v2/users"</samp></div><div class="mb-3"><h6 class="text-info">Create user</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/users" -d '{"name":"Tenali Ramakrishna", "gender":"male", "email":"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="90e4f5fef1fcf9bee2f1fdf1fbe2f9e3f8fef1d0a1a5f3f5bef3fffd">[email&#160;protected]</a>", "status":"active"}' </samp></div><div class="mb-3"><h6 class="text-info">Update user</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPATCH "https://gorest.co.in/public/v2/users/1700815" -d '{"name":"Allasani Peddana", "email":"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="39585555584a58575017495c5d5d58575879080c5a5c175a5654">[email&#160;protected]</a>", "status":"active"}' </samp></div><div class="mb-3"><h6 class="text-info">Delete user</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XDELETE "https://gorest.co.in/public/v2/users/1700815"</samp></div><h3 class="mt-5 mb-3">cUrl Examples for GraphQL</h3><div class="mb-3"><h6 class="text-info">List users</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"query{users {pageInfo {endCursor startCursor hasNextPage hasPreviousPage} totalCount nodes {id name email gender status}}}"}'</samp></div><div class="mb-3"><h6 class="text-info">Get User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"query{user(id: 1700815) { id name email gender status }}"}'</samp></div><div class="mb-3"><h6 class="text-info">Create User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"mutation{createUser(input: {name: \"Tenali Ramakrishna\" gender: \"male\" email: \"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="c3b7a6ada2afaaedb1a2aea2a8b1aab0abada283f2f6a0a6eda0acae">[email&#160;protected]</a>\" status: \"active\"}) {user{id name gender email status}}}"}'</samp></div><div class="mb-3"><h6 class="text-info">Update User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"mutation{updateUser(input: {id: 1700815 name: \"Allasani Peddana\" email: \"<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="345558585547555a5d1a44515050555a5574050157511a575b59">[email&#160;protected]</a>\" status: \"active\"}) {user{id name gender email status}}}"}'</samp></div><div class="mb-3"><h6 class="text-info">Delete User</h6><samp class="user-select-all text-break">curl -i -H "Accept:application/json" -H "Content-Type:application/json" -H "Authorization: Bearer ACCESS-TOKEN" -XPOST "https://gorest.co.in/public/v2/graphql" -d '{"query":"mutation{deleteUser(input: {id: 1700815}){user {id name email gender status}}}"}'</samp></div><h3 class="mt-5">REST API Http Response Codes</h3><ul><li>200: OK. Everything worked as expected.</li><li>201: A resource was successfully created in response to a POST request. The Location header contains the URL pointing to the newly created resource.</li><li>204: The request was handled successfully and the response contains no body content (like a DELETE request).</li><li>304: The resource was not modified. You can use the cached version.</li><li>400: Bad request. This could be caused by various actions by the user, such as providing invalid JSON data in the request body etc.</li><li>401: Authentication failed.</li><li>403: The authenticated user is not allowed to access the specified API endpoint.</li><li>404: The requested resource does not exist.</li><li>405: Method not allowed. Please check the Allow header for the allowed HTTP methods.</li><li>415: Unsupported media type. The requested content type or version number is invalid.</li><li>422: Data validation failed (in response to a POST request, for example). Please check the response body for detailed error messages.</li><li>429: Too many requests. The request was rejected due to rate limiting.</li><li>500: Internal server error. This could be caused by internal program errors.</li></ul></div><hr class="mt-5" /><div class="container"><div class="footer"><ul class="list-inline"><li class="list-inline-item">&copy; Go Rest 2023</li><li class="list-inline-item float-lg-end"><a href="/privacy-policy">Privacy Policy</a></li><li class="list-inline-item float-lg-end me-3"><a href="/contact-us">Contact Us</a></li></ul></div></div><script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script></body></html>
13:24:07.165 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:24:07.173 [main] DEBUG com.intuit.karate - request:
1 > GET https://gorest.co.in/public/v2/users
1 > Host: gorest.co.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:24:08.630 [main] DEBUG com.intuit.karate - response time in milliseconds: 1434
1 < 200
1 < Date: Fri, 01 Dec 2023 16:24:08 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Cache-Control: max-age=0, private, must-revalidate
1 < etag: W/"2eabf0fdc51405d6281eaa3e6b916377"
1 < referrer-policy: strict-origin-when-cross-origin
1 < vary: Origin
1 < x-content-type-options: nosniff
1 < x-download-options: noopen
1 < x-frame-options: SAMEORIGIN
1 < x-links-current: https://gorest.co.in/public/v2/users?page=1
1 < x-links-next: https://gorest.co.in/public/v2/users?page=2
1 < x-links-previous: 
1 < x-pagination-limit: 10
1 < x-pagination-page: 1
1 < x-pagination-pages: 293
1 < x-pagination-total: 2929
1 < x-permitted-cross-domain-policies: none
1 < x-request-id: c6f356fc-274b-4f12-b063-7b440c0f6723
1 < x-runtime: 0.036047
1 < x-xss-protection: 0
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=3HLlGYDIdG2mCpHQX%2BLpQgtkt1bD3XJtku67rUaoo0pxrlgPWIUj%2BdrYQG5s0ez7X9l5aA7ABP4k1kkKha%2BC23iMCUiBA4ZNA5iXMu3njPzz1HvYttMXT%2BYC8DGALJA%3D"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 82ecadb97e57b96e-AMS
1 < alt-svc: h3=":443"; ma=86400
[{"gender":"female","name":"Rameshwar Banerjee","id":5803678,"email":"rameshwar_banerjee@schiller.test","status":"active"},{"gender":"male","name":"Chakor Bhat","id":5803674,"email":"bhat_chakor@goldner.test","status":"inactive"},{"gender":"female","name":"Paramartha Menon","id":5803673,"email":"menon_paramartha@tromp.test","status":"active"},{"gender":"male","name":"Gajabahu Talwar Jr.","id":5803672,"email":"talwar_jr_gajabahu@jones-bernier.example","status":"inactive"},{"gender":"female","name":"Tapan Iyengar","id":5803671,"email":"iyengar_tapan@sporer.example","status":"inactive"},{"gender":"male","name":"Lakshminath Achari","id":5803670,"email":"lakshminath_achari@dare.test","status":"active"},{"gender":"male","name":"Tara Iyer","id":5803669,"email":"iyer_tara@friesen-yost.test","status":"inactive"},{"gender":"male","name":"Eshana Kaniyar","id":5803668,"email":"eshana_kaniyar@cruickshank-crona.test","status":"inactive"},{"gender":"female","name":"Dhananjay Menon","id":5803667,"email":"menon_dhananjay@gislason.example","status":"active"},{"gender":"male","name":"Fr. Chakravarti Trivedi","id":5803666,"email":"trivedi_fr_chakravarti@wiegand.example","status":"active"}]
13:24:08.662 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:24:08.668 [main] DEBUG com.intuit.karate - request:
1 > GET https://gorest.co.in/public/v2/users/5803679
1 > Host: gorest.co.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:24:09.469 [main] DEBUG com.intuit.karate - response time in milliseconds: 799
1 < 404
1 < Date: Fri, 01 Dec 2023 16:24:09 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 32
1 < Connection: keep-alive
1 < Cache-Control: no-cache
1 < referrer-policy: strict-origin-when-cross-origin
1 < vary: Origin
1 < x-content-type-options: nosniff
1 < x-download-options: noopen
1 < x-frame-options: SAMEORIGIN
1 < x-permitted-cross-domain-policies: none
1 < x-request-id: 1ffdaace-9714-4329-862e-858ccf4bf63a
1 < x-runtime: 0.017961
1 < x-xss-protection: 0
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=fZnxo0vH%2F0HzjFvGWQFTzPqIrwwHr%2B5zGGeXqoXyU407CsbxeorHOKVwmtwuKaB37NYNTWsjE16RqMn8bFHCvo6JDbkXBR0bnX%2B42twP3ykTKDFHGwQC%2FNz9ckBpBG0%3D"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 82ecadc29e04d0d1-AMS
1 < alt-svc: h3=":443"; ma=86400
{"message":"Resource not found"}
13:24:09.470 [main] ERROR com.intuit.karate - classpath:Prova/goRest.feature:26
Then status 200
status code was: 404, expected: 200, response time in milliseconds: 799, url: https://gorest.co.in/public/v2/users/5803679, response: 
{"message":"Resource not found"}
classpath:Prova/goRest.feature:26
13:24:09.484 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:24:09.486 [main] DEBUG com.intuit.karate - request:
1 > GET https://gorest.co.in/public/v2/users/5803671
1 > Host: gorest.co.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:24:10.647 [main] DEBUG com.intuit.karate - response time in milliseconds: 1161
1 < 200
1 < Date: Fri, 01 Dec 2023 16:24:10 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Cache-Control: max-age=0, private, must-revalidate
1 < etag: W/"b284a202f4aa0585ac51b7959f3c2663"
1 < referrer-policy: strict-origin-when-cross-origin
1 < vary: Origin
1 < x-content-type-options: nosniff
1 < x-download-options: noopen
1 < x-frame-options: SAMEORIGIN
1 < x-permitted-cross-domain-policies: none
1 < x-request-id: 128c450c-4f7e-416d-a468-ad2ae37b3f86
1 < x-runtime: 0.015275
1 < x-xss-protection: 0
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=t1ItYyp4x54r62u8W8kvQ8E%2BfS3n0uiOelpI9s0vg7fJOavXsEMYSAd7tEeE6VrdxRsFLEdKUB60DUFID5G%2F08oEkf8O%2B%2B3meWmIWIGIYLU6f8JRTltN%2BjEtFlon37w%3D"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 82ecadc7bc6cb772-AMS
1 < alt-svc: h3=":443"; ma=86400
{"gender":"female","name":"Tapan Iyengar","id":5803671,"email":"iyengar_tapan@sporer.example","status":"inactive"}
13:24:10.664 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:24:10.692 [main] DEBUG com.intuit.karate - request:
1 > POST https://gorest.co.in/public/v2/users?access-token=a92f7b4704684e1a467baea91ae9be6c28a9faf9a8117e6dc1db9670fef45274
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 106
1 > Host: gorest.co.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"gender":"pokemon","name":"Charmander","id":100,"email":"emailteste@prova.inatel.br","status":"cançado"}

13:24:12.002 [main] DEBUG com.intuit.karate - response time in milliseconds: 1309
1 < 422
1 < Date: Fri, 01 Dec 2023 16:24:12 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 116
1 < Connection: keep-alive
1 < Cache-Control: no-cache
1 < referrer-policy: strict-origin-when-cross-origin
1 < vary: Origin
1 < x-content-type-options: nosniff
1 < x-download-options: noopen
1 < x-frame-options: SAMEORIGIN
1 < x-permitted-cross-domain-policies: none
1 < x-ratelimit-limit: 90
1 < x-ratelimit-remaining: 90
1 < x-ratelimit-reset: 1
1 < x-request-id: 4b91e580-3de3-4b7a-af95-4ede9b213955
1 < x-runtime: 0.061007
1 < x-xss-protection: 0
1 < CF-Cache-Status: DYNAMIC
1 < Report-To: {"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=Ztj7nzJQ1OvH1YppYmnoj2djpIsliCdUKhqyhMIqo1tdOiLB4KQO%2BuJvyfcbXpVibQsJxUJA7by1RWtdS5jHUoimdqQ189hx5MnxJYN%2Bqly91mtFs9ZIDFEobUZAikk%3D"}],"group":"cf-nel","max_age":604800}
1 < NEL: {"success_fraction":0,"report_to":"cf-nel","max_age":604800}
1 < Server: cloudflare
1 < CF-RAY: 82ecadcfda53d40c-CDG
1 < alt-svc: h3=":443"; ma=86400
[{"field":"gender","message":"can't be blank, can be male of female"},{"field":"status","message":"can't be blank"}]
13:24:12.004 [main] ERROR com.intuit.karate - classpath:Prova/goRest.feature:43
Then status 201
status code was: 422, expected: 201, response time in milliseconds: 1309, url: https://gorest.co.in/public/v2/users?access-token=a92f7b4704684e1a467baea91ae9be6c28a9faf9a8117e6dc1db9670fef45274, response: 
[{"field":"gender","message":"can't be blank, can be male of female"},{"field":"status","message":"can't be blank"}]
classpath:Prova/goRest.feature:43
13:28:04.193 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:28:04.861 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:28:05.111 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:28:06.046 [main] DEBUG com.intuit.karate - response time in milliseconds: 933
1 < 200
1 < Date: Fri, 01 Dec 2023 16:28:06 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701448085&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=2304EqT8WXwv0gIfDzCquaXaIbpe9cHkVwArUg3WsAs%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701448085&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=2304EqT8WXwv0gIfDzCquaXaIbpe9cHkVwArUg3WsAs%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82ecb387097fa4d8-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#d5bdb0b9b9ba95b7b0bbbdbaa2b1b9b0fbbcb8">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

13:28:06.068 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:28:06.077 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:28:06.166 [main] DEBUG com.intuit.karate - response time in milliseconds: 66
1 < 200
1 < Date: Fri, 01 Dec 2023 16:28:06 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701444418&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=RuuulUzXLF2QkaCTNTsH1VDlsl1T3lGvb%2F6xPUyQvi0%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701444418&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=RuuulUzXLF2QkaCTNTsH1VDlsl1T3lGvb%2F6xPUyQvi0%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 3668
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82ecb38b8c324cdf-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:28:06.200 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:28:06.206 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:28:06.274 [main] DEBUG com.intuit.karate - response time in milliseconds: 68
1 < 200
1 < Date: Fri, 01 Dec 2023 16:28:06 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701159145&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0WAwchXVBG%2F2mIwnqrdVjVujY2Lcsnm%2BICmwC%2BVeZTg%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701159145&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0WAwchXVBG%2F2mIwnqrdVjVujY2Lcsnm%2BICmwC%2BVeZTg%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 887
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82ecb38c5ff80136-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:28:06.296 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:28:06.299 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:28:06.375 [main] DEBUG com.intuit.karate - response time in milliseconds: 76
1 < 200
1 < Date: Fri, 01 Dec 2023 16:28:06 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701174652&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=kdZLszdXfGOiF1YZp%2BCkqVFVBthvX79jOjx7bQJabRs%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701174652&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=kdZLszdXfGOiF1YZp%2BCkqVFVBthvX79jOjx7bQJabRs%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 4184
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82ecb38cefdea585-GRU
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:31:06.037 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:31:06.666 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:31:06.885 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:31:07.710 [main] DEBUG com.intuit.karate - response time in milliseconds: 822
1 < 200
1 < Date: Fri, 01 Dec 2023 16:31:07 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701448267&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=y0bTLTagPRkcBhN1ys57QyQNRD8l22pkYGut6Oi%2FCLk%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701448267&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=y0bTLTagPRkcBhN1ys57QyQNRD8l22pkYGut6Oi%2FCLk%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82ecb7f68dc401a4-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#eb838e878784ab898e8583849c8f878ec58286">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

13:31:07.732 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:31:07.741 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:31:07.855 [main] DEBUG com.intuit.karate - response time in milliseconds: 92
1 < 200
1 < Date: Fri, 01 Dec 2023 16:31:08 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701190725&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=u8W4ywNna%2BWS0l4uDOa%2BJY2EqLK%2BjQDqtB6Pqow9XKU%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701190725&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=u8W4ywNna%2BWS0l4uDOa%2BJY2EqLK%2BjQDqtB6Pqow9XKU%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 351
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82ecb7fb1e1c118c-GIG
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:31:07.894 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:31:07.900 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:31:07.978 [main] DEBUG com.intuit.karate - response time in milliseconds: 78
1 < 200
1 < Date: Fri, 01 Dec 2023 16:31:08 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1699960572&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=PT67ifw2ru9d5O4U%2Bes7QFLXKOQ8auYTj4xFKooBWqI%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1699960572&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=PT67ifw2ru9d5O4U%2Bes7QFLXKOQ8auYTj4xFKooBWqI%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 4099
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82ecb7fbeef301af-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:31:07.987 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:31:07.989 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:31:08.065 [main] DEBUG com.intuit.karate - response time in milliseconds: 75
1 < 200
1 < Date: Fri, 01 Dec 2023 16:31:08 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1699789462&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bxOVqyTot36HGUYBKlkeaatFNQgh6oGfJet2Po%2FJ79A%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1699789462&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bxOVqyTot36HGUYBKlkeaatFNQgh6oGfJet2Po%2FJ79A%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 1246
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82ecb7fc7eeb0118-GRU
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:31:08.073 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:31:08.104 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 33
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"name":"Rodrigo","job":"Batman"}

13:31:08.567 [main] DEBUG com.intuit.karate - response time in milliseconds: 463
1 < 201
1 < Date: Fri, 01 Dec 2023 16:31:08 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 82
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701448268&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=Gt9lcxzijGTrjzCYJuD4E2EF7WodNxCdj6fAPAovV9o%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701448268&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=Gt9lcxzijGTrjzCYJuD4E2EF7WodNxCdj6fAPAovV9o%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"52-/6GszuQqhfuOoko79thOfSqi8sw"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82ecb7fd2e326050-GRU
{"createdAt":"2023-12-01T16:31:08.656Z","name":"Rodrigo","id":"53","job":"Batman"}
13:31:08.568 [main] ERROR com.intuit.karate - classpath:Prova/goRest.feature:44
And match response.id == '#number'
match failed: EQUALS
  $ | not a number (STRING:STRING)
  '53'
  '#number'

classpath:Prova/goRest.feature:44
13:31:25.618 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:31:26.270 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:31:26.508 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:31:27.360 [main] DEBUG com.intuit.karate - response time in milliseconds: 849
1 < 200
1 < Date: Fri, 01 Dec 2023 16:31:27 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701448287&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=7vi7SSKp8e5SjbuwEqA31ODQPlYQ5LDBqSPHdqC%2B5sg%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701448287&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=7vi7SSKp8e5SjbuwEqA31ODQPlYQ5LDBqSPHdqC%2B5sg%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82ecb8712cfe01a7-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#ddb5b8b1b1b29dbfb8b3b5b2aab9b1b8f3b4b0">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

13:31:27.383 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:31:27.391 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:31:27.502 [main] DEBUG com.intuit.karate - response time in milliseconds: 89
1 < 200
1 < Date: Fri, 01 Dec 2023 16:31:27 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701190725&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=u8W4ywNna%2BWS0l4uDOa%2BJY2EqLK%2BjQDqtB6Pqow9XKU%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701190725&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=u8W4ywNna%2BWS0l4uDOa%2BJY2EqLK%2BjQDqtB6Pqow9XKU%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 370
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82ecb875ef2864cc-GIG
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:31:27.534 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:31:27.539 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:31:27.614 [main] DEBUG com.intuit.karate - response time in milliseconds: 74
1 < 200
1 < Date: Fri, 01 Dec 2023 16:31:27 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701159145&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0WAwchXVBG%2F2mIwnqrdVjVujY2Lcsnm%2BICmwC%2BVeZTg%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701159145&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0WAwchXVBG%2F2mIwnqrdVjVujY2Lcsnm%2BICmwC%2BVeZTg%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 1088
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82ecb876acfa00f1-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:31:27.622 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:31:27.625 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:31:27.688 [main] DEBUG com.intuit.karate - response time in milliseconds: 62
1 < 200
1 < Date: Fri, 01 Dec 2023 16:31:27 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701254002&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bTpMi70Lp01LQyyRv%2F%2FcOiZG2Pf5GZYO15jyfCmWhSM%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701254002&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bTpMi70Lp01LQyyRv%2F%2FcOiZG2Pf5GZYO15jyfCmWhSM%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 125
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82ecb8772daa02e5-GRU
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:31:27.694 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:31:27.725 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 33
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"name":"Rodrigo","job":"Batman"}

13:31:28.189 [main] DEBUG com.intuit.karate - response time in milliseconds: 464
1 < 201
1 < Date: Fri, 01 Dec 2023 16:31:28 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 83
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701448288&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=YZS0BQM%2B9E6Py%2FypK97lYOhb6S%2FFRtUzfOWmU0w%2B1mM%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701448288&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=YZS0BQM%2B9E6Py%2FypK97lYOhb6S%2FFRtUzfOWmU0w%2B1mM%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"53-Jrv8ZhDF4V9nbKmd4NwbfXujl7M"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82ecb877c8644d3b-GRU
{"createdAt":"2023-12-01T16:31:28.277Z","name":"Rodrigo","id":"158","job":"Batman"}
13:33:17.767 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:33:18.411 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:33:18.629 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:33:19.476 [main] DEBUG com.intuit.karate - response time in milliseconds: 844
1 < 200
1 < Date: Fri, 01 Dec 2023 16:33:19 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701448399&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=1sbQWcM47gtuZOCKRwqrQGwAQiquK%2FlW%2FI6b8xNqCs0%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701448399&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=1sbQWcM47gtuZOCKRwqrQGwAQiquK%2FlW%2FI6b8xNqCs0%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82ecbb2e0865a4a2-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#a7cfc2cbcbc8e7c5c2c9cfc8d0c3cbc289ceca">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

13:33:19.498 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:33:19.507 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:33:19.590 [main] DEBUG com.intuit.karate - response time in milliseconds: 62
1 < 200
1 < Date: Fri, 01 Dec 2023 16:33:19 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701444396&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=a%2BzgC%2BqxVjtCfDJTwBENQ1pQGPlJPGXDqo7OaIbTsu4%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701444396&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=a%2BzgC%2BqxVjtCfDJTwBENQ1pQGPlJPGXDqo7OaIbTsu4%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 4003
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82ecbb32684b01a2-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:33:19.623 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:33:19.629 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:33:19.714 [main] DEBUG com.intuit.karate - response time in milliseconds: 85
1 < 200
1 < Date: Fri, 01 Dec 2023 16:33:19 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701167981&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=NlwiXv302VLI1jm3qb0U3KrVup4UgeCQZ3fqX7he034%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701167981&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=NlwiXv302VLI1jm3qb0U3KrVup4UgeCQZ3fqX7he034%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 6741
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82ecbb335f4c64cf-GIG
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:33:19.724 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:33:19.727 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:33:19.814 [main] DEBUG com.intuit.karate - response time in milliseconds: 86
1 < 200
1 < Date: Fri, 01 Dec 2023 16:33:20 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1700163682&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=I6jVZM8wqNNMZPXC2Dk8qUHhvLTrnYT2bqhEEeTb2b8%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1700163682&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=I6jVZM8wqNNMZPXC2Dk8qUHhvLTrnYT2bqhEEeTb2b8%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 718
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82ecbb33fd64645d-GIG
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:33:19.822 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:33:19.851 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 33
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"name":"Rodrigo","job":"Batman"}

13:33:20.325 [main] DEBUG com.intuit.karate - response time in milliseconds: 473
1 < 201
1 < Date: Fri, 01 Dec 2023 16:33:20 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 83
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701448400&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=YsALN2J0zupMBl1Gb%2FIC8mg9XZt55n6g60fUcRRAbQo%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701448400&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=YsALN2J0zupMBl1Gb%2FIC8mg9XZt55n6g60fUcRRAbQo%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"53-Zhld5x6klsqwn6h5aA7KMR4XSSs"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82ecbb34997b0122-GRU
{"createdAt":"2023-12-01T16:33:20.411Z","name":"Rodrigo","id":"320","job":"Batman"}
13:33:20.331 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:33:20.333 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/2000000
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:33:20.774 [main] DEBUG com.intuit.karate - response time in milliseconds: 441
1 < 204
1 < Date: Fri, 01 Dec 2023 16:33:20 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701448400&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=YsALN2J0zupMBl1Gb%2FIC8mg9XZt55n6g60fUcRRAbQo%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701448400&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=YsALN2J0zupMBl1Gb%2FIC8mg9XZt55n6g60fUcRRAbQo%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82ecbb3789604d09-GRU

13:33:20.775 [main] ERROR com.intuit.karate - classpath:Prova/goRest.feature:52
Then status 404
status code was: 204, expected: 404, response time in milliseconds: 441, url: https://reqres.in/api/users/2000000, response: 

classpath:Prova/goRest.feature:52
13:34:12.179 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:34:12.820 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:34:13.053 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:34:13.902 [main] DEBUG com.intuit.karate - response time in milliseconds: 846
1 < 200
1 < Date: Fri, 01 Dec 2023 16:34:13 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701448453&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vL9qhXU20xvtTTBLMwRh%2F6BoxdGxspOhb07zfqac4kQ%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701448453&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vL9qhXU20xvtTTBLMwRh%2F6BoxdGxspOhb07zfqac4kQ%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82ecbc82196e1a89-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#d3bbb6bfbfbc93b1b6bdbbbca4b7bfb6fdbabe">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

13:34:13.925 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:34:13.933 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:34:14.031 [main] DEBUG com.intuit.karate - response time in milliseconds: 76
1 < 200
1 < Date: Fri, 01 Dec 2023 16:34:14 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701444418&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=RuuulUzXLF2QkaCTNTsH1VDlsl1T3lGvb%2F6xPUyQvi0%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701444418&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=RuuulUzXLF2QkaCTNTsH1VDlsl1T3lGvb%2F6xPUyQvi0%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 4036
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82ecbc869de74b3b-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:34:14.073 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:34:14.078 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:34:14.144 [main] DEBUG com.intuit.karate - response time in milliseconds: 66
1 < 200
1 < Date: Fri, 01 Dec 2023 16:34:14 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701237016&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=IjVHIdsDvuLmm06JyWoRcFaBHkF6wyng%2FDMsjdfGF%2Bw%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701237016&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=IjVHIdsDvuLmm06JyWoRcFaBHkF6wyng%2FDMsjdfGF%2Bw%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 2575
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82ecbc8779cb1cfb-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:34:14.153 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:34:14.155 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:34:14.619 [main] DEBUG com.intuit.karate - response time in milliseconds: 464
1 < 200
1 < Date: Fri, 01 Dec 2023 16:34:14 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701256222&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=YXEXYnHrSUW9CPtcOCeQ8Dx7PrYhDsEnKoRAAb13oBM%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701256222&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=YXEXYnHrSUW9CPtcOCeQ8Dx7PrYhDsEnKoRAAb13oBM%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: REVALIDATED
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82ecbc87f8421a95-GRU
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:34:14.627 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:34:14.658 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 33
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"name":"Rodrigo","job":"Batman"}

13:34:15.133 [main] DEBUG com.intuit.karate - response time in milliseconds: 474
1 < 201
1 < Date: Fri, 01 Dec 2023 16:34:15 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 83
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701448455&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=mqSHl%2BBoEJTrZEj4WTuDK2mzEhhnnLs2EJKlIWEYCiY%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701448455&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=mqSHl%2BBoEJTrZEj4WTuDK2mzEhhnnLs2EJKlIWEYCiY%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"53-ezSl5ZHZTiJ4wh/2wnHogXG/EPI"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82ecbc8b194b0185-GRU
{"createdAt":"2023-12-01T16:34:15.222Z","name":"Rodrigo","id":"991","job":"Batman"}
13:34:15.140 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:34:15.143 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:34:15.611 [main] DEBUG com.intuit.karate - response time in milliseconds: 468
1 < 204
1 < Date: Fri, 01 Dec 2023 16:34:15 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701448455&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=mqSHl%2BBoEJTrZEj4WTuDK2mzEhhnnLs2EJKlIWEYCiY%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701448455&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=mqSHl%2BBoEJTrZEj4WTuDK2mzEhhnnLs2EJKlIWEYCiY%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82ecbc8e297a51f8-GRU

13:34:15.618 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:34:15.621 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:34:16.117 [main] DEBUG com.intuit.karate - response time in milliseconds: 496
1 < 204
1 < Date: Fri, 01 Dec 2023 16:34:16 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701448456&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=gEBEsBmRioWGBY0Ow1UEas2627nV%2BuegsfA43mHTqDs%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701448456&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=gEBEsBmRioWGBY0Ow1UEas2627nV%2BuegsfA43mHTqDs%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82ecbc915d502570-GIG

13:36:03.344 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:36:03.994 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:36:04.225 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:36:05.053 [main] DEBUG com.intuit.karate - response time in milliseconds: 825
1 < 200
1 < Date: Fri, 01 Dec 2023 16:36:05 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701448564&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=d3ieOst1ZZ8cUaLcTMf5gLA2r4Pa7xxW8CDx3IvGKkg%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701448564&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=d3ieOst1ZZ8cUaLcTMf5gLA2r4Pa7xxW8CDx3IvGKkg%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82ecbf390c2625f9-GIG
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#b7dfd2dbdbd8f7d5d2d9dfd8c0d3dbd299deda">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

13:36:05.076 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:36:05.085 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:36:05.208 [main] DEBUG com.intuit.karate - response time in milliseconds: 101
1 < 200
1 < Date: Fri, 01 Dec 2023 16:36:05 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701190725&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=u8W4ywNna%2BWS0l4uDOa%2BJY2EqLK%2BjQDqtB6Pqow9XKU%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701190725&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=u8W4ywNna%2BWS0l4uDOa%2BJY2EqLK%2BjQDqtB6Pqow9XKU%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 648
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82ecbf3d88cb21d2-GIG
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:36:05.240 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:36:05.255 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:36:05.318 [main] DEBUG com.intuit.karate - response time in milliseconds: 63
1 < 200
1 < Date: Fri, 01 Dec 2023 16:36:05 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701159145&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0WAwchXVBG%2F2mIwnqrdVjVujY2Lcsnm%2BICmwC%2BVeZTg%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701159145&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0WAwchXVBG%2F2mIwnqrdVjVujY2Lcsnm%2BICmwC%2BVeZTg%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 1366
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82ecbf3e59af601e-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:36:05.328 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:36:05.331 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:36:05.403 [main] DEBUG com.intuit.karate - response time in milliseconds: 72
1 < 200
1 < Date: Fri, 01 Dec 2023 16:36:05 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1700163682&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=I6jVZM8wqNNMZPXC2Dk8qUHhvLTrnYT2bqhEEeTb2b8%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1700163682&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=I6jVZM8wqNNMZPXC2Dk8qUHhvLTrnYT2bqhEEeTb2b8%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 883
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82ecbf3eeab864ae-GIG
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:36:05.413 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:36:05.443 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 33
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"name":"Rodrigo","job":"Batman"}

13:36:05.921 [main] DEBUG com.intuit.karate - response time in milliseconds: 477
1 < 201
1 < Date: Fri, 01 Dec 2023 16:36:06 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 83
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701448565&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=VI3%2FVbhsOp7K77TX5dTVS9br3axAGiWDaPB7cfYMcWM%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701448565&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=VI3%2FVbhsOp7K77TX5dTVS9br3axAGiWDaPB7cfYMcWM%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"53-HSCm0zw8Orrm3ragVDeHG6qY2Xc"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82ecbf3f7a4f1ac6-GRU
{"createdAt":"2023-12-01T16:36:06.005Z","name":"Rodrigo","id":"732","job":"Batman"}
13:36:05.928 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:36:05.931 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:36:06.399 [main] DEBUG com.intuit.karate - response time in milliseconds: 468
1 < 204
1 < Date: Fri, 01 Dec 2023 16:36:06 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701448566&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=LGegtjqJVjq%2BwC1HAN0OEE9rpjIce7U%2BeaP5PWKSaek%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701448566&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=LGegtjqJVjq%2BwC1HAN0OEE9rpjIce7U%2BeaP5PWKSaek%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82ecbf429ffd01a4-GRU

13:36:06.405 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:36:06.408 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:36:06.865 [main] DEBUG com.intuit.karate - response time in milliseconds: 457
1 < 204
1 < Date: Fri, 01 Dec 2023 16:36:07 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701448566&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=LGegtjqJVjq%2BwC1HAN0OEE9rpjIce7U%2BeaP5PWKSaek%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701448566&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=LGegtjqJVjq%2BwC1HAN0OEE9rpjIce7U%2BeaP5PWKSaek%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82ecbf457b4e1d21-GRU

13:36:06.871 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:36:06.875 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/register
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 43
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"email":"emailDeTeste@inatel.provaLab.br"}

13:36:07.375 [main] DEBUG com.intuit.karate - response time in milliseconds: 500
1 < 400
1 < Date: Fri, 01 Dec 2023 16:36:07 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 28
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701448567&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uNS4CHlG1UKRt7PF7oYw5xIuwgu7Yw4W4z%2Famc%2Baptk%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701448567&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uNS4CHlG1UKRt7PF7oYw5xIuwgu7Yw4W4z%2Famc%2Baptk%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"1c-NmpazMScs9tOqR7eDEesn+pqC9Q"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82ecbf489a60650e-GIG
{"error":"Missing password"}
13:40:07.991 [main] ERROR com.intuit.karate.core.FeatureParser - not a valid feature file: Prova/goRest.feature - extraneous input '\r\n\r\n    Examples:' expecting {<EOF>, SCENARIO, SCENARIO_OUTLINE, TAGS, NEWLINE}
13:41:48.230 [main] ERROR com.intuit.karate.core.FeatureParser - not a valid feature file: Prova/reqres.feature - extraneous input '\r\n\r\n    Examples:' expecting {<EOF>, SCENARIO, SCENARIO_OUTLINE, TAGS, NEWLINE}
13:42:41.239 [main] ERROR com.intuit.karate.core.FeatureParser - not a valid feature file: Prova/reqres.feature - extraneous input '\r\n\r\n    Examples:' expecting {<EOF>, SCENARIO, SCENARIO_OUTLINE, TAGS, NEWLINE}
13:43:13.663 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:43:14.308 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:43:14.529 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:43:15.371 [main] DEBUG com.intuit.karate - response time in milliseconds: 839
1 < 200
1 < Date: Fri, 01 Dec 2023 16:43:15 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701448995&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=VCC%2FQ%2F06Pu3WX%2Fds8f2Tr5pYtQVngvCna9KVp0aQ5Rk%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701448995&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=VCC%2FQ%2F06Pu3WX%2Fds8f2Tr5pYtQVngvCna9KVp0aQ5Rk%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82ecc9ba581b0131-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#6f070a0303002f0d0a010700180b030a410602">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

13:43:15.394 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:43:15.403 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:43:15.491 [main] DEBUG com.intuit.karate - response time in milliseconds: 65
1 < 200
1 < Date: Fri, 01 Dec 2023 16:43:15 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701444396&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=a%2BzgC%2BqxVjtCfDJTwBENQ1pQGPlJPGXDqo7OaIbTsu4%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701444396&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=a%2BzgC%2BqxVjtCfDJTwBENQ1pQGPlJPGXDqo7OaIbTsu4%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 4599
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82ecc9bebbf0a499-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:43:15.522 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:43:15.527 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:43:15.599 [main] DEBUG com.intuit.karate - response time in milliseconds: 70
1 < 200
1 < Date: Fri, 01 Dec 2023 16:43:15 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1699960572&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=PT67ifw2ru9d5O4U%2Bes7QFLXKOQ8auYTj4xFKooBWqI%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1699960572&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=PT67ifw2ru9d5O4U%2Bes7QFLXKOQ8auYTj4xFKooBWqI%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 4826
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82ecc9bf8ca3a4cb-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:43:15.616 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:43:15.619 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:43:15.689 [main] DEBUG com.intuit.karate - response time in milliseconds: 70
1 < 200
1 < Date: Fri, 01 Dec 2023 16:43:15 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701174652&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=kdZLszdXfGOiF1YZp%2BCkqVFVBthvX79jOjx7bQJabRs%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701174652&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=kdZLszdXfGOiF1YZp%2BCkqVFVBthvX79jOjx7bQJabRs%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 5093
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82ecc9c00a96a603-GRU
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:43:15.697 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:43:15.726 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 33
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"name":"Rodrigo","job":"Batman"}

13:43:16.218 [main] DEBUG com.intuit.karate - response time in milliseconds: 492
1 < 201
1 < Date: Fri, 01 Dec 2023 16:43:16 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 83
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701448996&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=yMHTspN9xxgqh82zFvV53g1DeT4KmL4a8aMMO5YHbMY%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701448996&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=yMHTspN9xxgqh82zFvV53g1DeT4KmL4a8aMMO5YHbMY%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"53-qRWYb5r46zin932rSC6vSekuKpw"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82ecc9c0e9fc117c-GIG
{"createdAt":"2023-12-01T16:43:16.295Z","name":"Rodrigo","id":"834","job":"Batman"}
13:43:16.226 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:43:16.229 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:43:16.715 [main] DEBUG com.intuit.karate - response time in milliseconds: 485
1 < 204
1 < Date: Fri, 01 Dec 2023 16:43:16 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701448996&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=yMHTspN9xxgqh82zFvV53g1DeT4KmL4a8aMMO5YHbMY%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701448996&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=yMHTspN9xxgqh82zFvV53g1DeT4KmL4a8aMMO5YHbMY%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82ecc9c3e9e700e7-GRU

13:43:16.720 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:43:16.723 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:43:17.196 [main] DEBUG com.intuit.karate - response time in milliseconds: 472
1 < 204
1 < Date: Fri, 01 Dec 2023 16:43:17 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701448997&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=593eozrzbhjx9Jz5tO8n%2BYHiajz97dQlCJUG1oqlvv8%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701448997&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=593eozrzbhjx9Jz5tO8n%2BYHiajz97dQlCJUG1oqlvv8%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82ecc9c6ffdca4f5-GRU

13:43:17.201 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:43:17.204 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/register
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 43
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"email":"emailDeTeste@inatel.provaLab.br"}

13:43:17.693 [main] DEBUG com.intuit.karate - response time in milliseconds: 489
1 < 400
1 < Date: Fri, 01 Dec 2023 16:43:17 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 28
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701448997&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=593eozrzbhjx9Jz5tO8n%2BYHiajz97dQlCJUG1oqlvv8%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701448997&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=593eozrzbhjx9Jz5tO8n%2BYHiajz97dQlCJUG1oqlvv8%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"1c-NmpazMScs9tOqR7eDEesn+pqC9Q"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82ecc9ca1e3364d3-GIG
{"error":"Missing password"}
13:43:35.467 [main] ERROR com.intuit.karate.core.FeatureParser - not a valid feature file: Prova/reqres.feature - extraneous input '\r\n\r\n    Examples:' expecting {<EOF>, SCENARIO, SCENARIO_OUTLINE, TAGS, NEWLINE}
13:44:19.204 [main] ERROR com.intuit.karate.core.FeatureParser - not a valid feature file: Prova/reqres.feature - extraneous input '\r\n\r\n    Examples:' expecting {<EOF>, SCENARIO, SCENARIO_OUTLINE, TAGS, NEWLINE}
13:44:32.837 [main] ERROR com.intuit.karate.core.FeatureParser - not a valid feature file: Prova/reqres.feature - extraneous input '\r\n\r\n    Examples:' expecting {<EOF>, SCENARIO, SCENARIO_OUTLINE, TAGS, NEWLINE}
13:45:25.853 [main] ERROR com.intuit.karate.core.FeatureParser - not a valid feature file: Prova/reqres.feature - extraneous input '\r\n\r\n    Examples:' expecting {<EOF>, SCENARIO, SCENARIO_OUTLINE, TAGS, NEWLINE}
13:45:36.766 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:45:37.418 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:45:37.661 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:45:38.500 [main] DEBUG com.intuit.karate - response time in milliseconds: 836
1 < 200
1 < Date: Fri, 01 Dec 2023 16:45:38 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701449138&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=dWxii10waZM2rtixvm1ZtWDza3cGCZKrPpsze5gvZEM%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701449138&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=dWxii10waZM2rtixvm1ZtWDza3cGCZKrPpsze5gvZEM%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82eccd38cd521d38-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#8ce4e9e0e0e3cceee9e2e4e3fbe8e0e9a2e5e1">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

13:45:38.524 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:45:38.533 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:45:38.628 [main] DEBUG com.intuit.karate - response time in milliseconds: 70
1 < 200
1 < Date: Fri, 01 Dec 2023 16:45:38 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701444396&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=a%2BzgC%2BqxVjtCfDJTwBENQ1pQGPlJPGXDqo7OaIbTsu4%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701444396&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=a%2BzgC%2BqxVjtCfDJTwBENQ1pQGPlJPGXDqo7OaIbTsu4%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 4742
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82eccd3d4f900309-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:45:38.668 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:45:38.674 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:45:38.742 [main] DEBUG com.intuit.karate - response time in milliseconds: 68
1 < 200
1 < Date: Fri, 01 Dec 2023 16:45:38 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1700814146&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=KG7tN8hTTN7T8pTwpkEGm%2BeKuK%2B7WHSdCyAhxR55BWA%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1700814146&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=KG7tN8hTTN7T8pTwpkEGm%2BeKuK%2B7WHSdCyAhxR55BWA%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 1093
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82eccd3e2d62a623-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:45:38.750 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:45:38.753 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:45:38.814 [main] DEBUG com.intuit.karate - response time in milliseconds: 61
1 < 200
1 < Date: Fri, 01 Dec 2023 16:45:38 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701254002&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bTpMi70Lp01LQyyRv%2F%2FcOiZG2Pf5GZYO15jyfCmWhSM%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701254002&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bTpMi70Lp01LQyyRv%2F%2FcOiZG2Pf5GZYO15jyfCmWhSM%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 976
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82eccd3e9c7502ec-GRU
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:45:38.822 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:45:38.851 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 33
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"name":"Rodrigo","job":"Batman"}

13:45:39.320 [main] DEBUG com.intuit.karate - response time in milliseconds: 469
1 < 201
1 < Date: Fri, 01 Dec 2023 16:45:39 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 83
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701449139&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=ewHX76YvTP%2B%2FnInXjJcGkd3rJQ76JGUFOBNedQsUSSY%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701449139&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=ewHX76YvTP%2B%2FnInXjJcGkd3rJQ76JGUFOBNedQsUSSY%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"53-hiJpA77zl+9l15qoGfKa6jm6qns"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82eccd3f3f9d02f0-GRU
{"createdAt":"2023-12-01T16:45:39.394Z","name":"Rodrigo","id":"207","job":"Batman"}
13:45:39.327 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:45:39.329 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:45:39.807 [main] DEBUG com.intuit.karate - response time in milliseconds: 478
1 < 204
1 < Date: Fri, 01 Dec 2023 16:45:39 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701449139&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=ewHX76YvTP%2B%2FnInXjJcGkd3rJQ76JGUFOBNedQsUSSY%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701449139&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=ewHX76YvTP%2B%2FnInXjJcGkd3rJQ76JGUFOBNedQsUSSY%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82eccd424fe7012d-GRU

13:45:39.813 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:45:39.815 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:45:40.283 [main] DEBUG com.intuit.karate - response time in milliseconds: 468
1 < 204
1 < Date: Fri, 01 Dec 2023 16:45:40 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701449140&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=zi%2BfWVjnzG5P9Ae0sJ%2BjfhmV7G1%2Fz0I0TBtZRQ1fJrA%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701449140&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=zi%2BfWVjnzG5P9Ae0sJ%2BjfhmV7G1%2Fz0I0TBtZRQ1fJrA%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82eccd454bcd1d17-GRU

13:45:40.289 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:45:40.291 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/register
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 43
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"email":"emailDeTeste@inatel.provaLab.br"}

13:45:40.769 [main] DEBUG com.intuit.karate - response time in milliseconds: 477
1 < 400
1 < Date: Fri, 01 Dec 2023 16:45:40 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 28
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701449140&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=zi%2BfWVjnzG5P9Ae0sJ%2BjfhmV7G1%2Fz0I0TBtZRQ1fJrA%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701449140&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=zi%2BfWVjnzG5P9Ae0sJ%2BjfhmV7G1%2Fz0I0TBtZRQ1fJrA%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"1c-NmpazMScs9tOqR7eDEesn+pqC9Q"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82eccd483e6f02fd-GRU
{"error":"Missing password"}
13:45:40.775 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:45:40.778 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/1
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 39
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"name":"Rodrigo","job":"Ryan Gosling"}

13:45:41.266 [main] DEBUG com.intuit.karate - response time in milliseconds: 488
1 < 200
1 < Date: Fri, 01 Dec 2023 16:45:41 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701449141&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=F7knSDUB46s%2FEaMA%2BSW53ugbt9Ptu6bzyfWC2X38MWI%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701449141&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=F7knSDUB46s%2FEaMA%2BSW53ugbt9Ptu6bzyfWC2X38MWI%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"4e-rRWCUWGaFkay5DayjTDIYShGizg"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82eccd4b5a5702fd-GRU
{"name":"Rodrigo","job":"Ryan Gosling","updatedAt":"2023-12-01T16:45:41.337Z"}
13:45:41.271 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:45:41.273 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/2
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 35
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"name":"Frederico","job":"Batman"}

13:45:41.747 [main] DEBUG com.intuit.karate - response time in milliseconds: 474
1 < 200
1 < Date: Fri, 01 Dec 2023 16:45:41 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701449141&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=F7knSDUB46s%2FEaMA%2BSW53ugbt9Ptu6bzyfWC2X38MWI%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701449141&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=F7knSDUB46s%2FEaMA%2BSW53ugbt9Ptu6bzyfWC2X38MWI%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"4a-/hsUONP73tqvwyvwoyoj3MwJH7s"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82eccd4e6cf6a505-GRU
{"name":"Frederico","job":"Batman","updatedAt":"2023-12-01T16:45:41.824Z"}
