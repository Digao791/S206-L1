11:58:11.797 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
11:58:12.741 [main] INFO  com.intuit.karate - karate.env system property was: null 
11:58:13.227 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/1.8.0_391)
1 > Accept-Encoding: gzip,deflate


11:58:14.125 [main] DEBUG com.intuit.karate - response time in milliseconds: 896
1 < 200
1 < Date: Thu, 30 Nov 2023 14:58:14 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701356293&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=Fwfch9PyHXWTjw9a2MbxZzJcghxAuFh6nTUqsKSq1lI%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701356293&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=Fwfch9PyHXWTjw9a2MbxZzJcghxAuFh6nTUqsKSq1lI%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e3f2833a3e01c2-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#f79f929b9b98b79592999f9880939b92d99e9a">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

11:58:55.002 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
11:58:55.656 [main] INFO  com.intuit.karate - karate.env system property was: null 
11:58:55.888 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


11:58:56.745 [main] DEBUG com.intuit.karate - response time in milliseconds: 855
1 < 200
1 < Date: Thu, 30 Nov 2023 14:58:56 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701356336&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=%2FbzyAdoDxyuvCBp1vgD%2Bh3TBayAIT1hZ4b2G5T73Q%2Bo%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701356336&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=%2FbzyAdoDxyuvCBp1vgD%2Bh3TBayAIT1hZ4b2G5T73Q%2Bo%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e3f38daf75a62e-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#afc7cac3c3c0efcdcac1c7c0d8cbc3ca81c6c2">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

12:00:46.793 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
12:00:47.442 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:00:47.667 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:00:48.457 [main] DEBUG com.intuit.karate - response time in milliseconds: 788
1 < 200
1 < Date: Thu, 30 Nov 2023 15:00:48 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701356448&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=A2Hla2Eh8J%2BjL86%2BQZLapHSLf8EjGDTo1L98fnVHsQ0%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701356448&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=A2Hla2Eh8J%2BjL86%2BQZLapHSLf8EjGDTo1L98fnVHsQ0%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e3f6480de601b3-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#d4bcb1b8b8bb94b6b1babcbba3b0b8b1fabdb9">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

12:00:48.479 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:00:48.486 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:00:48.981 [main] DEBUG com.intuit.karate - response time in milliseconds: 472
1 < 200
1 < Date: Thu, 30 Nov 2023 15:00:49 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701183361&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uib%2FRHgS9ilgKtdx8U0FDNf72sz2gvuumcC5IlgPSlY%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701183361&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uib%2FRHgS9ilgKtdx8U0FDNf72sz2gvuumcC5IlgPSlY%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: REVALIDATED
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e3f64c4d785205-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:18:22.868 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
12:18:23.522 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:18:23.752 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:18:24.430 [main] DEBUG com.intuit.karate - response time in milliseconds: 676
1 < 404
1 < Date: Thu, 30 Nov 2023 15:18:24 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701357504&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=%2BJIBeIbZbaXijXesCtdQZ8f3CTXSzvZez%2BGsE2tQGEw%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701357504&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=%2BJIBeIbZbaXijXesCtdQZ8f3CTXSzvZez%2BGsE2tQGEw%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e41010f8ed068d-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container">404</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

12:18:24.437 [main] ERROR com.intuit.karate - classpath:Trabalho_Inatel/Trabalho/reqres.feature:11
Then status 200
status code was: 404, expected: 200, response time in milliseconds: 676, url: https://reqres.in/api, response: 
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container">404</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

classpath:Trabalho_Inatel/Trabalho/reqres.feature:11
12:18:24.461 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:18:24.471 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:18:24.559 [main] DEBUG com.intuit.karate - response time in milliseconds: 66
1 < 200
1 < Date: Thu, 30 Nov 2023 15:18:24 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1699960572&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=PT67ifw2ru9d5O4U%2Bes7QFLXKOQ8auYTj4xFKooBWqI%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1699960572&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=PT67ifw2ru9d5O4U%2Bes7QFLXKOQ8auYTj4xFKooBWqI%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 6953
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e410144c9ca48c-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:18:24.569 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:18:24.572 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:18:24.640 [main] DEBUG com.intuit.karate - response time in milliseconds: 68
1 < 200
1 < Date: Thu, 30 Nov 2023 15:18:24 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1699789462&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bxOVqyTot36HGUYBKlkeaatFNQgh6oGfJet2Po%2FJ79A%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1699789462&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bxOVqyTot36HGUYBKlkeaatFNQgh6oGfJet2Po%2FJ79A%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 7082
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e41014ec530108-GRU
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:19:56.638 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
12:19:57.280 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:19:57.502 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:19:58.336 [main] DEBUG com.intuit.karate - response time in milliseconds: 831
1 < 200
1 < Date: Thu, 30 Nov 2023 15:19:58 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701357598&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=lWaP5QDwr0T1RqEm12k2YawTqg2zk%2F3fp8wq93J0a4w%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701357598&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=lWaP5QDwr0T1RqEm12k2YawTqg2zk%2F3fp8wq93J0a4w%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e4125acae1a5ec-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#f69e939a9a99b69493989e9981929a93d89f9b">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

12:19:58.362 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:19:58.372 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:19:58.467 [main] DEBUG com.intuit.karate - response time in milliseconds: 73
1 < 200
1 < Date: Thu, 30 Nov 2023 15:19:58 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1700814146&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=KG7tN8hTTN7T8pTwpkEGm%2BeKuK%2B7WHSdCyAhxR55BWA%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1700814146&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=KG7tN8hTTN7T8pTwpkEGm%2BeKuK%2B7WHSdCyAhxR55BWA%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 3212
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4125f2eeba5f8-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:19:58.474 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:19:58.477 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:19:58.550 [main] DEBUG com.intuit.karate - response time in milliseconds: 73
1 < 200
1 < Date: Thu, 30 Nov 2023 15:19:58 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1700163682&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=I6jVZM8wqNNMZPXC2Dk8qUHhvLTrnYT2bqhEEeTb2b8%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1700163682&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=I6jVZM8wqNNMZPXC2Dk8qUHhvLTrnYT2bqhEEeTb2b8%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 156
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4125ffd451d3f-GIG
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:25:54.849 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
12:25:55.489 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:25:55.727 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:25:56.550 [main] DEBUG com.intuit.karate - response time in milliseconds: 821
1 < 200
1 < Date: Thu, 30 Nov 2023 15:25:56 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701357956&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=REHA40io3mFkiDnJsQ7Vl2Nft74A4N3zIdtUCrnIsL0%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701357956&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=REHA40io3mFkiDnJsQ7Vl2Nft74A4N3zIdtUCrnIsL0%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e41b19cfe0a626-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#244c4148484b6446414a4c4b534048410a4d49">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

12:25:56.577 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:25:56.589 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:25:57.066 [main] DEBUG com.intuit.karate - response time in milliseconds: 453
1 < 200
1 < Date: Thu, 30 Nov 2023 15:25:57 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701357957&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vrjip9Ay9GPe7y4MmaZpMX3ndc8sXzH3HgvSe0cIp9k%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701357957&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vrjip9Ay9GPe7y4MmaZpMX3ndc8sXzH3HgvSe0cIp9k%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e41b1e1d1a010e-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:25:57.074 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:25:57.077 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:25:57.555 [main] DEBUG com.intuit.karate - response time in milliseconds: 477
1 < 200
1 < Date: Thu, 30 Nov 2023 15:25:57 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701357957&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vrjip9Ay9GPe7y4MmaZpMX3ndc8sXzH3HgvSe0cIp9k%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701357957&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vrjip9Ay9GPe7y4MmaZpMX3ndc8sXzH3HgvSe0cIp9k%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e41b212dbea4e4-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:31:38.591 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
12:31:39.239 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:31:39.461 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:31:40.323 [main] DEBUG com.intuit.karate - response time in milliseconds: 860
1 < 200
1 < Date: Thu, 30 Nov 2023 15:31:40 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358300&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=9d8Ck%2FRfXdlsKG3yW0qdyXKSLBsJQ04WnLfWfJTXyAI%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358300&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=9d8Ck%2FRfXdlsKG3yW0qdyXKSLBsJQ04WnLfWfJTXyAI%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e4237e4ebd645a-GIG
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#8be3eee7e7e4cbe9eee5e3e4fcefe7eea5e2e6">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

12:31:40.350 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:31:40.364 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:31:40.449 [main] DEBUG com.intuit.karate - response time in milliseconds: 62
1 < 200
1 < Date: Thu, 30 Nov 2023 15:31:40 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701357957&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vrjip9Ay9GPe7y4MmaZpMX3ndc8sXzH3HgvSe0cIp9k%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701357957&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vrjip9Ay9GPe7y4MmaZpMX3ndc8sXzH3HgvSe0cIp9k%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 343
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e42382be1500ee-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:31:40.478 [main] ERROR com.intuit.karate - classpath:Trabalho_Inatel/Trabalho/reqres.feature:22
And match $.data.id == '#number'
match failed: EQUALS

classpath:Trabalho_Inatel/Trabalho/reqres.feature:22
12:31:40.491 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:31:40.495 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:31:40.555 [main] DEBUG com.intuit.karate - response time in milliseconds: 60
1 < 200
1 < Date: Thu, 30 Nov 2023 15:31:40 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701357957&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vrjip9Ay9GPe7y4MmaZpMX3ndc8sXzH3HgvSe0cIp9k%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701357957&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vrjip9Ay9GPe7y4MmaZpMX3ndc8sXzH3HgvSe0cIp9k%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 343
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e423838eaea4c0-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:31:40.557 [main] ERROR com.intuit.karate - classpath:Trabalho_Inatel/Trabalho/reqres.feature:22
And match $.data.id == '#number'
match failed: EQUALS

classpath:Trabalho_Inatel/Trabalho/reqres.feature:22
12:31:40.563 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:31:40.582 [main] ERROR com.intuit.karate - classpath:Trabalho_Inatel/Trabalho/reqres.feature:30
And path '/api/users/
>>>> js failed:
01: ['/api/users/]
<<<<
org.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:14 Missing close quote
['/api/users/]
              ^

- org.graalvm.polyglot.Context.eval(Context.java:373)
- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:124)
- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:120)
- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1246)
- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:365)
- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:82)
- java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)

classpath:Trabalho_Inatel/Trabalho/reqres.feature:30
12:31:40.588 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:31:40.590 [main] ERROR com.intuit.karate - classpath:Trabalho_Inatel/Trabalho/reqres.feature:30
And path '/api/users/
>>>> js failed:
01: ['/api/users/]
<<<<
org.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:14 Missing close quote
['/api/users/]
              ^

- org.graalvm.polyglot.Context.eval(Context.java:373)
- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:124)
- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:120)
- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1246)
- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:365)
- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:82)
- java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)

classpath:Trabalho_Inatel/Trabalho/reqres.feature:30
12:33:19.064 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
12:33:19.719 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:33:19.933 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:33:20.742 [main] DEBUG com.intuit.karate - response time in milliseconds: 807
1 < 200
1 < Date: Thu, 30 Nov 2023 15:33:20 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358400&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=GhkoBRwcau3hrX3aTxSa20%2Fh2tu7tLG3pbAOqicakPU%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358400&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=GhkoBRwcau3hrX3aTxSa20%2Fh2tu7tLG3pbAOqicakPU%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e425f20d0f0101-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#ff979a939390bf9d9a919790889b939ad19692">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

12:33:20.767 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:33:20.792 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:33:21.288 [main] DEBUG com.intuit.karate - response time in milliseconds: 472
1 < 200
1 < Date: Thu, 30 Nov 2023 15:33:21 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e425f66b8802f7-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:33:21.326 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:33:21.330 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:33:21.818 [main] DEBUG com.intuit.karate - response time in milliseconds: 487
1 < 200
1 < Date: Thu, 30 Nov 2023 15:33:21 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e425f9cd561ab7-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:33:21.825 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:33:21.839 [main] ERROR com.intuit.karate - classpath:Trabalho_Inatel/Trabalho/reqres.feature:29
And path '/api/users/
>>>> js failed:
01: ['/api/users/]
<<<<
org.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:14 Missing close quote
['/api/users/]
              ^

- org.graalvm.polyglot.Context.eval(Context.java:373)
- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:124)
- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:120)
- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1246)
- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:365)
- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:82)
- java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)

classpath:Trabalho_Inatel/Trabalho/reqres.feature:29
12:33:21.850 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:33:21.853 [main] ERROR com.intuit.karate - classpath:Trabalho_Inatel/Trabalho/reqres.feature:29
And path '/api/users/
>>>> js failed:
01: ['/api/users/]
<<<<
org.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:14 Missing close quote
['/api/users/]
              ^

- org.graalvm.polyglot.Context.eval(Context.java:373)
- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:124)
- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:120)
- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1246)
- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:365)
- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:82)
- java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)

classpath:Trabalho_Inatel/Trabalho/reqres.feature:29
12:35:16.382 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
12:35:17.029 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:35:17.243 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:35:18.077 [main] DEBUG com.intuit.karate - response time in milliseconds: 832
1 < 200
1 < Date: Thu, 30 Nov 2023 15:35:18 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358517&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=RFD0vP%2B%2BhoDkUdQhWXyt1SE3YMNavvK%2F20N48KeKAEU%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358517&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=RFD0vP%2B%2BhoDkUdQhWXyt1SE3YMNavvK%2F20N48KeKAEU%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e428cf39f5a635-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#2b434e4747446b494e4543445c4f474e054246">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

12:35:18.102 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:35:18.115 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:35:18.216 [main] DEBUG com.intuit.karate - response time in milliseconds: 80
1 < 200
1 < Date: Thu, 30 Nov 2023 15:35:18 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 117
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e428d3bd6f01a6-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:35:18.243 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:35:18.246 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:35:18.315 [main] DEBUG com.intuit.karate - response time in milliseconds: 68
1 < 200
1 < Date: Thu, 30 Nov 2023 15:35:18 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701357957&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vrjip9Ay9GPe7y4MmaZpMX3ndc8sXzH3HgvSe0cIp9k%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701357957&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vrjip9Ay9GPe7y4MmaZpMX3ndc8sXzH3HgvSe0cIp9k%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 561
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e428d47b6da519-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:35:18.322 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:35:18.325 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:35:18.394 [main] DEBUG com.intuit.karate - response time in milliseconds: 69
1 < 200
1 < Date: Thu, 30 Nov 2023 15:35:18 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1699960572&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=PT67ifw2ru9d5O4U%2Bes7QFLXKOQ8auYTj4xFKooBWqI%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1699960572&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=PT67ifw2ru9d5O4U%2Bes7QFLXKOQ8auYTj4xFKooBWqI%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 766
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e428d50b130188-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:35:18.400 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:35:18.403 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:35:18.469 [main] DEBUG com.intuit.karate - response time in milliseconds: 65
1 < 200
1 < Date: Thu, 30 Nov 2023 15:35:18 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701254002&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bTpMi70Lp01LQyyRv%2F%2FcOiZG2Pf5GZYO15jyfCmWhSM%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701254002&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bTpMi70Lp01LQyyRv%2F%2FcOiZG2Pf5GZYO15jyfCmWhSM%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 836
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e428d5782ba50b-GRU
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:37:48.622 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
12:37:49.254 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:37:49.476 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:37:50.367 [main] DEBUG com.intuit.karate - response time in milliseconds: 888
1 < 200
1 < Date: Thu, 30 Nov 2023 15:37:50 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358670&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=UWfl0qIUrkOADFupjbGfPtMPZbEyCQX0tDzKGZ7LIek%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358670&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=UWfl0qIUrkOADFupjbGfPtMPZbEyCQX0tDzKGZ7LIek%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e42c86f9b04ceb-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#2e464b4242416e4c4b404641594a424b004743">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

12:37:50.390 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:37:50.403 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:37:50.493 [main] DEBUG com.intuit.karate - response time in milliseconds: 67
1 < 200
1 < Date: Thu, 30 Nov 2023 15:37:50 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 269
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e42c8b7de401d6-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:37:50.518 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:37:50.521 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:37:50.584 [main] DEBUG com.intuit.karate - response time in milliseconds: 62
1 < 200
1 < Date: Thu, 30 Nov 2023 15:37:50 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701357957&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vrjip9Ay9GPe7y4MmaZpMX3ndc8sXzH3HgvSe0cIp9k%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701357957&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vrjip9Ay9GPe7y4MmaZpMX3ndc8sXzH3HgvSe0cIp9k%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 713
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e42c8c397e019d-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:37:50.591 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:37:50.603 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:37:50.664 [main] DEBUG com.intuit.karate - response time in milliseconds: 61
1 < 200
1 < Date: Thu, 30 Nov 2023 15:37:50 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1699960572&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=PT67ifw2ru9d5O4U%2Bes7QFLXKOQ8auYTj4xFKooBWqI%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1699960572&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=PT67ifw2ru9d5O4U%2Bes7QFLXKOQ8auYTj4xFKooBWqI%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 918
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e42c8cb93f0290-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:37:50.666 [main] ERROR com.intuit.karate - classpath:Trabalho_Inatel/Trabalho/reqres.feature:33
And $.id == '#number'
no step-definition method match found for: $.id == '#number'
classpath:Trabalho_Inatel/Trabalho/reqres.feature:33
12:37:50.678 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:37:50.681 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:37:50.750 [main] DEBUG com.intuit.karate - response time in milliseconds: 69
1 < 200
1 < Date: Thu, 30 Nov 2023 15:37:50 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701248962&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=GCj2Umj%2BozshrjS4ibApyo06rK6Y7YpfT69sCq3CGuI%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701248962&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=GCj2Umj%2BozshrjS4ibApyo06rK6Y7YpfT69sCq3CGuI%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 748
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e42c8d3e371b34-GRU
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:37:50.751 [main] ERROR com.intuit.karate - classpath:Trabalho_Inatel/Trabalho/reqres.feature:33
And $.id == '#number'
no step-definition method match found for: $.id == '#number'
classpath:Trabalho_Inatel/Trabalho/reqres.feature:33
12:39:11.958 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
12:39:12.642 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:39:12.865 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:39:13.687 [main] DEBUG com.intuit.karate - response time in milliseconds: 820
1 < 200
1 < Date: Thu, 30 Nov 2023 15:39:13 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358753&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=l9naBV2P%2BGMt0Nym6wvKD9X2x845IqKOEG6AHHY73Cg%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358753&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=l9naBV2P%2BGMt0Nym6wvKD9X2x845IqKOEG6AHHY73Cg%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e42e900e70a595-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#d2bab7bebebd92b0b7bcbabda5b6beb7fcbbbf">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

12:39:13.712 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:39:13.723 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:39:14.218 [main] DEBUG com.intuit.karate - response time in milliseconds: 472
1 < 200
1 < Date: Thu, 30 Nov 2023 15:39:14 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358754&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=jGlv8Bi9hYMJGFJVGFc%2BYZkvGw3znsnU3civpmiXK80%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358754&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=jGlv8Bi9hYMJGFJVGFc%2BYZkvGw3znsnU3civpmiXK80%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e42e946a376d4e-GIG
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:39:14.248 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:39:14.252 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:39:14.707 [main] DEBUG com.intuit.karate - response time in milliseconds: 454
1 < 200
1 < Date: Thu, 30 Nov 2023 15:39:14 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358754&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=jGlv8Bi9hYMJGFJVGFc%2BYZkvGw3znsnU3civpmiXK80%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358754&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=jGlv8Bi9hYMJGFJVGFc%2BYZkvGw3znsnU3civpmiXK80%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e42e979c360182-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:39:14.725 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:39:14.729 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:39:14.800 [main] DEBUG com.intuit.karate - response time in milliseconds: 71
1 < 200
1 < Date: Thu, 30 Nov 2023 15:39:14 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701159145&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0WAwchXVBG%2F2mIwnqrdVjVujY2Lcsnm%2BICmwC%2BVeZTg%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701159145&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0WAwchXVBG%2F2mIwnqrdVjVujY2Lcsnm%2BICmwC%2BVeZTg%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 5176
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e42e9a8bb100c5-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:39:14.802 [main] ERROR com.intuit.karate - classpath:Trabalho_Inatel/Trabalho/reqres.feature:33
And $.data.id == '#number'
no step-definition method match found for: $.data.id == '#number'
classpath:Trabalho_Inatel/Trabalho/reqres.feature:33
12:39:14.815 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:39:14.818 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:39:14.881 [main] DEBUG com.intuit.karate - response time in milliseconds: 63
1 < 200
1 < Date: Thu, 30 Nov 2023 15:39:15 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1699789462&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bxOVqyTot36HGUYBKlkeaatFNQgh6oGfJet2Po%2FJ79A%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1699789462&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bxOVqyTot36HGUYBKlkeaatFNQgh6oGfJet2Po%2FJ79A%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 893
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e42e9b1c5d4d2a-GRU
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:39:14.882 [main] ERROR com.intuit.karate - classpath:Trabalho_Inatel/Trabalho/reqres.feature:33
And $.data.id == '#number'
no step-definition method match found for: $.data.id == '#number'
classpath:Trabalho_Inatel/Trabalho/reqres.feature:33
12:45:17.345 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
12:45:18.001 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:45:18.230 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:45:19.061 [main] DEBUG com.intuit.karate - response time in milliseconds: 828
1 < 200
1 < Date: Thu, 30 Nov 2023 15:45:19 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701359118&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=L6qIk2P81LPwc0t4bWl3UzRD3JRooIeCqif1ro%2BRrPQ%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701359118&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=L6qIk2P81LPwc0t4bWl3UzRD3JRooIeCqif1ro%2BRrPQ%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e4377b986ca616-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#5b333e3737341b393e3533342c3f373e753236">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

12:45:19.085 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:45:19.096 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:45:19.583 [main] DEBUG com.intuit.karate - response time in milliseconds: 462
1 < 200
1 < Date: Thu, 30 Nov 2023 15:45:19 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701359119&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=X2DIKLRKSS4J%2BtrefzkZzpB%2FBGz8PsjE5KXmmOkQ5cE%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701359119&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=X2DIKLRKSS4J%2BtrefzkZzpB%2FBGz8PsjE5KXmmOkQ5cE%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4377fed72a5d4-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:45:19.609 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:45:19.612 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:45:19.682 [main] DEBUG com.intuit.karate - response time in milliseconds: 70
1 < 200
1 < Date: Thu, 30 Nov 2023 15:45:19 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701357957&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vrjip9Ay9GPe7y4MmaZpMX3ndc8sXzH3HgvSe0cIp9k%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701357957&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vrjip9Ay9GPe7y4MmaZpMX3ndc8sXzH3HgvSe0cIp9k%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 1162
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e437831fe00184-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:45:19.689 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:45:19.701 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:45:19.784 [main] DEBUG com.intuit.karate - response time in milliseconds: 83
1 < 200
1 < Date: Thu, 30 Nov 2023 15:45:19 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701167981&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=NlwiXv302VLI1jm3qb0U3KrVup4UgeCQZ3fqX7he034%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701167981&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=NlwiXv302VLI1jm3qb0U3KrVup4UgeCQZ3fqX7he034%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 3883
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e43783da07118a-GIG
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:45:19.793 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:45:19.796 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:45:19.876 [main] DEBUG com.intuit.karate - response time in milliseconds: 80
1 < 200
1 < Date: Thu, 30 Nov 2023 15:45:20 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701248962&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=GCj2Umj%2BozshrjS4ibApyo06rK6Y7YpfT69sCq3CGuI%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701248962&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=GCj2Umj%2BozshrjS4ibApyo06rK6Y7YpfT69sCq3CGuI%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 1198
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e437844b471d32-GRU
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:45:44.477 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
12:45:45.127 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:45:45.356 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:45:46.204 [main] DEBUG com.intuit.karate - response time in milliseconds: 846
1 < 200
1 < Date: Thu, 30 Nov 2023 15:45:46 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701359146&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=aKiqOYD0i5aJv6h%2B5EH5zKkrXS1NslvrrvWnn1oR4I4%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701359146&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=aKiqOYD0i5aJv6h%2B5EH5zKkrXS1NslvrrvWnn1oR4I4%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e438252deda5f7-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#83ebe6efefecc3e1e6edebecf4e7efe6adeaee">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

12:45:46.229 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:45:46.243 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:45:46.331 [main] DEBUG com.intuit.karate - response time in milliseconds: 66
1 < 200
1 < Date: Thu, 30 Nov 2023 15:45:46 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 745
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e438298b2901ad-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:45:46.358 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:45:46.363 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:45:46.430 [main] DEBUG com.intuit.karate - response time in milliseconds: 66
1 < 200
1 < Date: Thu, 30 Nov 2023 15:45:46 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358754&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=jGlv8Bi9hYMJGFJVGFc%2BYZkvGw3znsnU3civpmiXK80%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358754&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=jGlv8Bi9hYMJGFJVGFc%2BYZkvGw3znsnU3civpmiXK80%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 392
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4382a48ee4d41-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:45:46.437 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:45:46.441 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:45:46.518 [main] DEBUG com.intuit.karate - response time in milliseconds: 77
1 < 200
1 < Date: Thu, 30 Nov 2023 15:45:46 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1699960572&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=PT67ifw2ru9d5O4U%2Bes7QFLXKOQ8auYTj4xFKooBWqI%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1699960572&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=PT67ifw2ru9d5O4U%2Bes7QFLXKOQ8auYTj4xFKooBWqI%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 1394
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4382ad91201c0-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:45:46.527 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:45:46.531 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:45:46.600 [main] DEBUG com.intuit.karate - response time in milliseconds: 69
1 < 200
1 < Date: Thu, 30 Nov 2023 15:45:46 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1700163682&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=I6jVZM8wqNNMZPXC2Dk8qUHhvLTrnYT2bqhEEeTb2b8%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1700163682&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=I6jVZM8wqNNMZPXC2Dk8qUHhvLTrnYT2bqhEEeTb2b8%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 1704
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4382b7be86448-GIG
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:48:04.964 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
12:48:05.642 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:48:05.895 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:48:06.752 [main] DEBUG com.intuit.karate - response time in milliseconds: 854
1 < 200
1 < Date: Thu, 30 Nov 2023 15:48:06 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701359286&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=g6%2BlLaroEyWTK2zfTNZCBytC%2F9aVnrpR%2F80d22%2BAgDE%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701359286&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=g6%2BlLaroEyWTK2zfTNZCBytC%2F9aVnrpR%2F80d22%2BAgDE%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e43b939a6d00f1-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#2d45484141426d4f484345425a494148034440">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

12:48:06.777 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:48:06.790 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:48:06.881 [main] DEBUG com.intuit.karate - response time in milliseconds: 70
1 < 200
1 < Date: Thu, 30 Nov 2023 15:48:07 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 886
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e43b97fc24a51d-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:48:06.904 [main] ERROR com.intuit.karate - classpath:Trabalho_Inatel/Trabalho/reqres.feature:22
And match $.data contains {id: '#number', email: '#string', first_name: '#string', last_name: '#string'}
match failed: CONTAINS
  $ | actual does not contain expected | actual array does not contain expected item - {"id":"#number","email":"#string","first_name":"#string","last_name":"#string"} (LIST:MAP)
  [{"last_name":"Bluth","id":1,"avatar":"https://reqres.in/img/faces/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https://reqres.in/img/faces/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https://reqres.in/img/faces/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https://reqres.in/img/faces/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https://reqres.in/img/faces/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https://reqres.in/img/faces/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}]
  {"id":"#number","email":"#string","first_name":"#string","last_name":"#string"}

    $[5] | not equal | actual has 1 more key(s) than expected - {"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg"} (MAP:MAP)
    {"last_name":"Ramos","id":6,"avatar":"https://reqres.in/img/faces/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}
    {"last_name":"#string","id":"#number","first_name":"#string","email":"#string"}

    $[4] | not equal | actual has 1 more key(s) than expected - {"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg"} (MAP:MAP)
    {"last_name":"Morris","id":5,"avatar":"https://reqres.in/img/faces/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"}
    {"last_name":"#string","id":"#number","first_name":"#string","email":"#string"}

    $[3] | not equal | actual has 1 more key(s) than expected - {"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg"} (MAP:MAP)
    {"last_name":"Holt","id":4,"avatar":"https://reqres.in/img/faces/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"}
    {"last_name":"#string","id":"#number","first_name":"#string","email":"#string"}

    $[2] | not equal | actual has 1 more key(s) than expected - {"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg"} (MAP:MAP)
    {"last_name":"Wong","id":3,"avatar":"https://reqres.in/img/faces/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"}
    {"last_name":"#string","id":"#number","first_name":"#string","email":"#string"}

    $[1] | not equal | actual has 1 more key(s) than expected - {"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg"} (MAP:MAP)
    {"last_name":"Weaver","id":2,"avatar":"https://reqres.in/img/faces/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"}
    {"last_name":"#string","id":"#number","first_name":"#string","email":"#string"}

    $[0] | not equal | actual has 1 more key(s) than expected - {"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg"} (MAP:MAP)
    {"last_name":"Bluth","id":1,"avatar":"https://reqres.in/img/faces/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"}
    {"last_name":"#string","id":"#number","first_name":"#string","email":"#string"}


classpath:Trabalho_Inatel/Trabalho/reqres.feature:22
12:48:06.927 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:48:06.930 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:48:06.997 [main] DEBUG com.intuit.karate - response time in milliseconds: 66
1 < 200
1 < Date: Thu, 30 Nov 2023 15:48:07 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 886
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e43b98decd1a9b-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:48:06.999 [main] ERROR com.intuit.karate - classpath:Trabalho_Inatel/Trabalho/reqres.feature:22
And match $.data contains {id: '#number', email: '#string', first_name: '#string', last_name: '#string'}
match failed: CONTAINS
  $ | actual does not contain expected | actual array does not contain expected item - {"id":"#number","email":"#string","first_name":"#string","last_name":"#string"} (LIST:MAP)
  [{"last_name":"Bluth","id":1,"avatar":"https://reqres.in/img/faces/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https://reqres.in/img/faces/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https://reqres.in/img/faces/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https://reqres.in/img/faces/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https://reqres.in/img/faces/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https://reqres.in/img/faces/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}]
  {"id":"#number","email":"#string","first_name":"#string","last_name":"#string"}

    $[5] | not equal | actual has 1 more key(s) than expected - {"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg"} (MAP:MAP)
    {"last_name":"Ramos","id":6,"avatar":"https://reqres.in/img/faces/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}
    {"last_name":"#string","id":"#number","first_name":"#string","email":"#string"}

    $[4] | not equal | actual has 1 more key(s) than expected - {"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg"} (MAP:MAP)
    {"last_name":"Morris","id":5,"avatar":"https://reqres.in/img/faces/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"}
    {"last_name":"#string","id":"#number","first_name":"#string","email":"#string"}

    $[3] | not equal | actual has 1 more key(s) than expected - {"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg"} (MAP:MAP)
    {"last_name":"Holt","id":4,"avatar":"https://reqres.in/img/faces/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"}
    {"last_name":"#string","id":"#number","first_name":"#string","email":"#string"}

    $[2] | not equal | actual has 1 more key(s) than expected - {"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg"} (MAP:MAP)
    {"last_name":"Wong","id":3,"avatar":"https://reqres.in/img/faces/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"}
    {"last_name":"#string","id":"#number","first_name":"#string","email":"#string"}

    $[1] | not equal | actual has 1 more key(s) than expected - {"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg"} (MAP:MAP)
    {"last_name":"Weaver","id":2,"avatar":"https://reqres.in/img/faces/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"}
    {"last_name":"#string","id":"#number","first_name":"#string","email":"#string"}

    $[0] | not equal | actual has 1 more key(s) than expected - {"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg"} (MAP:MAP)
    {"last_name":"Bluth","id":1,"avatar":"https://reqres.in/img/faces/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"}
    {"last_name":"#string","id":"#number","first_name":"#string","email":"#string"}


classpath:Trabalho_Inatel/Trabalho/reqres.feature:22
12:48:07.005 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:48:07.009 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:48:07.083 [main] DEBUG com.intuit.karate - response time in milliseconds: 74
1 < 200
1 < Date: Thu, 30 Nov 2023 15:48:07 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1699960572&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=PT67ifw2ru9d5O4U%2Bes7QFLXKOQ8auYTj4xFKooBWqI%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1699960572&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=PT67ifw2ru9d5O4U%2Bes7QFLXKOQ8auYTj4xFKooBWqI%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 1535
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e43b996906a477-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:48:07.090 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:48:07.093 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:48:07.169 [main] DEBUG com.intuit.karate - response time in milliseconds: 76
1 < 200
1 < Date: Thu, 30 Nov 2023 15:48:07 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1700163682&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=I6jVZM8wqNNMZPXC2Dk8qUHhvLTrnYT2bqhEEeTb2b8%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1700163682&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=I6jVZM8wqNNMZPXC2Dk8qUHhvLTrnYT2bqhEEeTb2b8%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 1845
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e43b99f9b86449-GIG
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:49:03.931 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
12:49:04.571 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:49:04.784 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:49:05.621 [main] DEBUG com.intuit.karate - response time in milliseconds: 834
1 < 200
1 < Date: Thu, 30 Nov 2023 15:49:05 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701359345&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=J%2FEFNhqXRZ9KBYFkU1LKyfYGf4MLH2KQl%2BY8ah9C3MU%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701359345&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=J%2FEFNhqXRZ9KBYFkU1LKyfYGf4MLH2KQl%2BY8ah9C3MU%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e43d039cde6455-GIG
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#79111c151516391b1c1711160e1d151c571014">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

12:49:05.647 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:49:05.661 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:49:05.756 [main] DEBUG com.intuit.karate - response time in milliseconds: 73
1 < 200
1 < Date: Thu, 30 Nov 2023 15:49:05 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 944
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e43d07f963a4bd-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:49:05.795 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:49:05.800 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:49:06.274 [main] DEBUG com.intuit.karate - response time in milliseconds: 473
1 < 200
1 < Date: Thu, 30 Nov 2023 15:49:06 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701359346&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=xIyn6gUlQxcvNSOof7dMoOX6MB8EP1tFrImSwI2aUCE%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701359346&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=xIyn6gUlQxcvNSOof7dMoOX6MB8EP1tFrImSwI2aUCE%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e43d08fcb81ccb-GIG
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:49:06.283 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:49:06.286 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:49:06.354 [main] DEBUG com.intuit.karate - response time in milliseconds: 68
1 < 200
1 < Date: Thu, 30 Nov 2023 15:49:06 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701256006&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vONDxnMrflnz%2F2dSyxsQP9REHrrbbiAkcUsCLmJ1LRQ%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701256006&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vONDxnMrflnz%2F2dSyxsQP9REHrrbbiAkcUsCLmJ1LRQ%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 2519
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e43d0bde58068d-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:49:06.361 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:49:06.364 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:49:06.432 [main] DEBUG com.intuit.karate - response time in milliseconds: 68
1 < 200
1 < Date: Thu, 30 Nov 2023 15:49:06 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701174652&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=kdZLszdXfGOiF1YZp%2BCkqVFVBthvX79jOjx7bQJabRs%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701174652&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=kdZLszdXfGOiF1YZp%2BCkqVFVBthvX79jOjx7bQJabRs%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 704
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e43d0c5fe5a634-GRU
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:56:20.687 [main] ERROR com.intuit.karate.core.FeatureParser - not a valid feature file: Trabalho_Inatel/Trabalho/reqres.feature - extraneous input '\r\n\r\n    Examples:' expecting {<EOF>, SCENARIO, SCENARIO_OUTLINE, TAGS, NEWLINE}
12:56:51.634 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
12:56:52.291 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:56:52.548 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:56:53.371 [main] DEBUG com.intuit.karate - response time in milliseconds: 821
1 < 200
1 < Date: Thu, 30 Nov 2023 15:56:53 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701359813&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=qE050X2f%2BUvw10%2F%2BicAZJXaAV0C5PqcBTX1b7havK%2Fg%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701359813&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=qE050X2f%2BUvw10%2F%2BicAZJXaAV0C5PqcBTX1b7havK%2Fg%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e4486f1c0c00c0-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#670f020b0b08270502090f0810030b02490e0a">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

12:56:53.399 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:56:53.413 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:56:53.502 [main] DEBUG com.intuit.karate - response time in milliseconds: 87
1 < 200
1 < Date: Thu, 30 Nov 2023 15:56:53 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358754&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=jGlv8Bi9hYMJGFJVGFc%2BYZkvGw3znsnU3civpmiXK80%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358754&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=jGlv8Bi9hYMJGFJVGFc%2BYZkvGw3znsnU3civpmiXK80%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 1059
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4487398426461-GIG
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:56:53.520 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:56:53.524 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:56:53.596 [main] DEBUG com.intuit.karate - response time in milliseconds: 72
1 < 200
1 < Date: Thu, 30 Nov 2023 15:56:53 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358754&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=jGlv8Bi9hYMJGFJVGFc%2BYZkvGw3znsnU3civpmiXK80%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358754&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=jGlv8Bi9hYMJGFJVGFc%2BYZkvGw3znsnU3civpmiXK80%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 1059
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e448742e664d1b-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:56:53.609 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:56:53.614 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:56:53.673 [main] DEBUG com.intuit.karate - response time in milliseconds: 59
1 < 200
1 < Date: Thu, 30 Nov 2023 15:56:53 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701256006&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vONDxnMrflnz%2F2dSyxsQP9REHrrbbiAkcUsCLmJ1LRQ%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701256006&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vONDxnMrflnz%2F2dSyxsQP9REHrrbbiAkcUsCLmJ1LRQ%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 2986
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e44874ac4c1aa1-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:56:53.680 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:56:53.683 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


12:56:53.756 [main] DEBUG com.intuit.karate - response time in milliseconds: 72
1 < 200
1 < Date: Thu, 30 Nov 2023 15:56:53 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701254002&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bTpMi70Lp01LQyyRv%2F%2FcOiZG2Pf5GZYO15jyfCmWhSM%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701254002&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bTpMi70Lp01LQyyRv%2F%2FcOiZG2Pf5GZYO15jyfCmWhSM%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 2131
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e448752bb70227-GRU
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
12:56:53.762 [main] INFO  com.intuit.karate - karate.env system property was: null 
12:56:53.810 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 301
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

12:56:54.259 [main] DEBUG com.intuit.karate - response time in milliseconds: 448
1 < 201
1 < Date: Thu, 30 Nov 2023 15:56:54 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 343
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701359814&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=FzQwuMf3%2FvOXZ%2BwzkVRknPzFo7O0rffYlNnkKXgtTh8%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701359814&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=FzQwuMf3%2FvOXZ%2BwzkVRknPzFo7O0rffYlNnkKXgtTh8%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"157-OVisz4Uxl6bDhxikCE+vAQh/EoQ"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e44875e8831cfd-GRU
{"createdAt":"2023-11-30T15:56:54.371Z","data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"id":"854","support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:02:07.359 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:02:08.074 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:02:08.360 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:02:09.247 [main] DEBUG com.intuit.karate - response time in milliseconds: 884
1 < 200
1 < Date: Thu, 30 Nov 2023 16:02:09 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360129&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=haS7%2BEIcX0rgTLqOwAQcD3oG%2BvjqA4YDXI2dr6TgSbo%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360129&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=haS7%2BEIcX0rgTLqOwAQcD3oG%2BvjqA4YDXI2dr6TgSbo%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e450252bf2031e-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#335b565f5f5c7351565d5b5c44575f561d5a5e">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

13:02:09.278 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:02:09.298 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:02:09.389 [main] DEBUG com.intuit.karate - response time in milliseconds: 87
1 < 200
1 < Date: Thu, 30 Nov 2023 16:02:09 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701359119&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=X2DIKLRKSS4J%2BtrefzkZzpB%2FBGz8PsjE5KXmmOkQ5cE%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701359119&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=X2DIKLRKSS4J%2BtrefzkZzpB%2FBGz8PsjE5KXmmOkQ5cE%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 1010
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e45029ed9ca5ce-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:02:09.409 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:02:09.416 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:02:09.477 [main] DEBUG com.intuit.karate - response time in milliseconds: 61
1 < 200
1 < Date: Thu, 30 Nov 2023 16:02:09 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701357957&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vrjip9Ay9GPe7y4MmaZpMX3ndc8sXzH3HgvSe0cIp9k%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701357957&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vrjip9Ay9GPe7y4MmaZpMX3ndc8sXzH3HgvSe0cIp9k%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 2172
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4502a7cc7a479-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:02:09.489 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:02:09.494 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:02:09.561 [main] DEBUG com.intuit.karate - response time in milliseconds: 67
1 < 200
1 < Date: Thu, 30 Nov 2023 16:02:09 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701159145&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0WAwchXVBG%2F2mIwnqrdVjVujY2Lcsnm%2BICmwC%2BVeZTg%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701159145&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0WAwchXVBG%2F2mIwnqrdVjVujY2Lcsnm%2BICmwC%2BVeZTg%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 6551
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4502affc66050-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:02:09.569 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:02:09.574 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:02:09.644 [main] DEBUG com.intuit.karate - response time in milliseconds: 70
1 < 200
1 < Date: Thu, 30 Nov 2023 16:02:09 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701256222&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=YXEXYnHrSUW9CPtcOCeQ8Dx7PrYhDsEnKoRAAb13oBM%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701256222&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=YXEXYnHrSUW9CPtcOCeQ8Dx7PrYhDsEnKoRAAb13oBM%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 2987
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4502b8fcc1aa3-GRU
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:02:09.652 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:02:09.686 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 301
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:02:10.168 [main] DEBUG com.intuit.karate - response time in milliseconds: 481
1 < 201
1 < Date: Thu, 30 Nov 2023 16:02:10 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 343
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360130&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=5Flqncia7%2Fx1zT6NYpwxr1mNs12z5MvMITUZoU1tqyY%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360130&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=5Flqncia7%2Fx1zT6NYpwxr1mNs12z5MvMITUZoU1tqyY%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"157-ODXHFNUvRo7MlUzVAYrwkOJ8kwE"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e4502c2df21aa6-GRU
{"createdAt":"2023-11-30T16:02:10.285Z","data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"id":"655","support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:02:10.176 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:02:10.181 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 307
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:02:10.683 [main] DEBUG com.intuit.karate - response time in milliseconds: 502
1 < 201
1 < Date: Thu, 30 Nov 2023 16:02:10 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 348
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360130&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=5Flqncia7%2Fx1zT6NYpwxr1mNs12z5MvMITUZoU1tqyY%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360130&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=5Flqncia7%2Fx1zT6NYpwxr1mNs12z5MvMITUZoU1tqyY%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15c-mVQfhg0F142/Ol8Mu+hq0WSE9/E"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e4502f883964eb-GIG
{"createdAt":"2023-11-30T16:02:10.800Z","data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"id":"61","support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:02:10.690 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:02:10.694 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/1
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 301
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:02:11.162 [main] DEBUG com.intuit.karate - response time in milliseconds: 468
1 < 200
1 < Date: Thu, 30 Nov 2023 16:02:11 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360131&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bNaRordeWey4zXZXT6wiIhM375Aj3H%2FBxe7OcN3T0Ls%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360131&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bNaRordeWey4zXZXT6wiIhM375Aj3H%2FBxe7OcN3T0Ls%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"14c-acAWYbrhw84JWG2SxTNrBJOBGHs"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e450329f0b1f84-GIG
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"},"updatedAt":"2023-11-30T16:02:11.279Z"}
13:02:11.168 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:02:11.172 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/2
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 307
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:02:11.642 [main] DEBUG com.intuit.karate - response time in milliseconds: 470
1 < 200
1 < Date: Thu, 30 Nov 2023 16:02:11 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360131&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bNaRordeWey4zXZXT6wiIhM375Aj3H%2FBxe7OcN3T0Ls%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360131&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bNaRordeWey4zXZXT6wiIhM375Aj3H%2FBxe7OcN3T0Ls%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"152-KcI0C7PdzQK/g4W+q7xkX/Z0VGQ"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e450357d9fa479-GRU
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"},"updatedAt":"2023-11-30T16:02:11.759Z"}
13:04:50.500 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:04:51.187 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:04:51.496 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:04:52.344 [main] DEBUG com.intuit.karate - response time in milliseconds: 844
1 < 200
1 < Date: Thu, 30 Nov 2023 16:04:52 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360292&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=D%2BlHjOvzlX3zi0yNe9CoDgys%2BRNd%2BCj02wKFcf2YQIE%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360292&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=D%2BlHjOvzlX3zi0yNe9CoDgys%2BRNd%2BCj02wKFcf2YQIE%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e454209a02010e-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#ef878a838380af8d8a818780988b838ac18682">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

13:04:52.369 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:04:52.386 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:04:52.456 [main] DEBUG com.intuit.karate - response time in milliseconds: 66
1 < 200
1 < Date: Thu, 30 Nov 2023 16:04:52 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701357957&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vrjip9Ay9GPe7y4MmaZpMX3ndc8sXzH3HgvSe0cIp9k%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701357957&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vrjip9Ay9GPe7y4MmaZpMX3ndc8sXzH3HgvSe0cIp9k%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 2335
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e454251f766037-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:04:52.490 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:04:52.496 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:04:52.577 [main] DEBUG com.intuit.karate - response time in milliseconds: 80
1 < 200
1 < Date: Thu, 30 Nov 2023 16:04:52 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701359346&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=xIyn6gUlQxcvNSOof7dMoOX6MB8EP1tFrImSwI2aUCE%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701359346&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=xIyn6gUlQxcvNSOof7dMoOX6MB8EP1tFrImSwI2aUCE%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 946
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e45425ed7f25ba-GIG
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:04:52.586 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:04:52.590 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:04:52.655 [main] DEBUG com.intuit.karate - response time in milliseconds: 64
1 < 200
1 < Date: Thu, 30 Nov 2023 16:04:52 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701159145&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0WAwchXVBG%2F2mIwnqrdVjVujY2Lcsnm%2BICmwC%2BVeZTg%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701159145&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0WAwchXVBG%2F2mIwnqrdVjVujY2Lcsnm%2BICmwC%2BVeZTg%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 6714
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e454265c116042-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:04:52.662 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:04:52.666 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:04:52.740 [main] DEBUG com.intuit.karate - response time in milliseconds: 73
1 < 200
1 < Date: Thu, 30 Nov 2023 16:04:52 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1700163682&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=I6jVZM8wqNNMZPXC2Dk8qUHhvLTrnYT2bqhEEeTb2b8%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1700163682&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=I6jVZM8wqNNMZPXC2Dk8qUHhvLTrnYT2bqhEEeTb2b8%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 2850
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e45426fd2072d5-GIG
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:04:52.747 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:04:52.780 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 301
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:04:53.266 [main] DEBUG com.intuit.karate - response time in milliseconds: 484
1 < 201
1 < Date: Thu, 30 Nov 2023 16:04:53 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 343
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360293&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=fb4FwyenyldTU8%2B3nDy3QbT%2B7BC8Ug4ybMUUzv3vunw%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360293&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=fb4FwyenyldTU8%2B3nDy3QbT%2B7BC8Ug4ybMUUzv3vunw%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"157-5dTUwHt85hkDp86tv3PsKcB4S2w"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e45427896c0323-GRU
{"createdAt":"2023-11-30T16:04:53.383Z","data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"id":"200","support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:04:53.274 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:04:53.279 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 307
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:04:53.756 [main] DEBUG com.intuit.karate - response time in milliseconds: 477
1 < 201
1 < Date: Thu, 30 Nov 2023 16:04:53 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 349
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360293&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=fb4FwyenyldTU8%2B3nDy3QbT%2B7BC8Ug4ybMUUzv3vunw%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360293&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=fb4FwyenyldTU8%2B3nDy3QbT%2B7BC8Ug4ybMUUzv3vunw%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15d-q1PnJ1ql+9n/Zho4mbzPJxpxj+k"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e4542abe1200f6-GRU
{"createdAt":"2023-11-30T16:04:53.876Z","data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"id":"270","support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:04:53.763 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:04:53.768 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/1
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 301
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:04:54.241 [main] DEBUG com.intuit.karate - response time in milliseconds: 473
1 < 200
1 < Date: Thu, 30 Nov 2023 16:04:54 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360294&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=3nwUGVSGvsVcgUvjTUrgI%2BUgNvSn%2F9jSN%2FRFG6pxxT4%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360294&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=3nwUGVSGvsVcgUvjTUrgI%2BUgNvSn%2F9jSN%2FRFG6pxxT4%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"14c-+ZFw7imhoqY66lqzBq8f8h2GTME"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4542db876a505-GRU
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"},"updatedAt":"2023-11-30T16:04:54.358Z"}
13:04:54.247 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:04:54.252 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/2
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 307
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:04:54.717 [main] DEBUG com.intuit.karate - response time in milliseconds: 464
1 < 200
1 < Date: Thu, 30 Nov 2023 16:04:54 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360294&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=3nwUGVSGvsVcgUvjTUrgI%2BUgNvSn%2F9jSN%2FRFG6pxxT4%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360294&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=3nwUGVSGvsVcgUvjTUrgI%2BUgNvSn%2F9jSN%2FRFG6pxxT4%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"152-L/nUduRXQj575j7pSaWDBp/470o"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e45430b9ed77cf-GRU
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"},"updatedAt":"2023-11-30T16:04:54.836Z"}
13:04:54.721 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:04:54.725 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:04:55.329 [main] DEBUG com.intuit.karate - response time in milliseconds: 603
1 < 204
1 < Date: Thu, 30 Nov 2023 16:04:55 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360295&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=HO4I%2BDB1Jq52qTOu6rwcUz%2F15bFk8ZRZ5rVtYmWd3Q8%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360295&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=HO4I%2BDB1Jq52qTOu6rwcUz%2F15bFk8ZRZ5rVtYmWd3Q8%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e45433d8f42630-GIG

13:04:55.333 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:04:55.337 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:04:55.797 [main] DEBUG com.intuit.karate - response time in milliseconds: 460
1 < 204
1 < Date: Thu, 30 Nov 2023 16:04:56 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360295&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=HO4I%2BDB1Jq52qTOu6rwcUz%2F15bFk8ZRZ5rVtYmWd3Q8%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360295&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=HO4I%2BDB1Jq52qTOu6rwcUz%2F15bFk8ZRZ5rVtYmWd3Q8%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e45437897100d9-GRU

13:08:44.459 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:08:45.196 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:08:45.490 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:08:46.371 [main] DEBUG com.intuit.karate - response time in milliseconds: 879
1 < 200
1 < Date: Thu, 30 Nov 2023 16:08:46 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360526&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=qm1PKOTx1r2%2Bjo4Qf39qBs93J8NcPdwW81fReOLSdb0%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360526&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=qm1PKOTx1r2%2Bjo4Qf39qBs93J8NcPdwW81fReOLSdb0%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e459d74f11a5c5-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#a0c8c5cccccfe0c2c5cec8cfd7c4ccc58ec9cd">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

13:08:46.397 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:08:46.432 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:08:46.503 [main] DEBUG com.intuit.karate - response time in milliseconds: 66
1 < 200
1 < Date: Thu, 30 Nov 2023 16:08:46 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 2125
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e459dbec500184-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:08:46.523 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:08:46.529 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:08:46.999 [main] DEBUG com.intuit.karate - response time in milliseconds: 469
1 < 200
1 < Date: Thu, 30 Nov 2023 16:08:47 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360527&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0MbLxtcb3I7ewQxTt%2BEUrshCO4aHMiKWHNmIIp9ZiKY%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360527&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0MbLxtcb3I7ewQxTt%2BEUrshCO4aHMiKWHNmIIp9ZiKY%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e459dc8b2aa5bf-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:08:47.011 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:08:47.017 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:08:47.080 [main] DEBUG com.intuit.karate - response time in milliseconds: 63
1 < 200
1 < Date: Thu, 30 Nov 2023 16:08:47 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1699960572&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=PT67ifw2ru9d5O4U%2Bes7QFLXKOQ8auYTj4xFKooBWqI%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1699960572&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=PT67ifw2ru9d5O4U%2Bes7QFLXKOQ8auYTj4xFKooBWqI%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 2775
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e459df895377ee-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:08:47.089 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:08:47.095 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:08:47.166 [main] DEBUG com.intuit.karate - response time in milliseconds: 70
1 < 200
1 < Date: Thu, 30 Nov 2023 16:08:47 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1699789462&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bxOVqyTot36HGUYBKlkeaatFNQgh6oGfJet2Po%2FJ79A%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1699789462&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bxOVqyTot36HGUYBKlkeaatFNQgh6oGfJet2Po%2FJ79A%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 2665
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e459e00a2f0180-GRU
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:08:47.175 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:08:47.212 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 301
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:08:47.677 [main] DEBUG com.intuit.karate - response time in milliseconds: 463
1 < 201
1 < Date: Thu, 30 Nov 2023 16:08:47 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 343
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360527&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0MbLxtcb3I7ewQxTt%2BEUrshCO4aHMiKWHNmIIp9ZiKY%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360527&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0MbLxtcb3I7ewQxTt%2BEUrshCO4aHMiKWHNmIIp9ZiKY%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"157-fKHPh71H9eiYCwPYSse8D1eAHNE"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e459e0cac21a93-GRU
{"createdAt":"2023-11-30T16:08:47.798Z","data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"id":"988","support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:08:47.685 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:08:47.689 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 307
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:08:48.135 [main] DEBUG com.intuit.karate - response time in milliseconds: 446
1 < 201
1 < Date: Thu, 30 Nov 2023 16:08:48 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 349
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360528&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=XlX24LbN7K0EJCwt%2FAnT1QUFLI8sccUJQBp7uZT%2FCoE%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360528&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=XlX24LbN7K0EJCwt%2FAnT1QUFLI8sccUJQBp7uZT%2FCoE%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15d-Bp03hrOLfwuUenGpTYJ3eaRutno"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e459e3badda6bb-GRU
{"createdAt":"2023-11-30T16:08:48.262Z","data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"id":"474","support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:08:48.143 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:08:48.147 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/1
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 301
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:08:48.642 [main] DEBUG com.intuit.karate - response time in milliseconds: 494
1 < 200
1 < Date: Thu, 30 Nov 2023 16:08:48 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360528&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=XlX24LbN7K0EJCwt%2FAnT1QUFLI8sccUJQBp7uZT%2FCoE%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360528&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=XlX24LbN7K0EJCwt%2FAnT1QUFLI8sccUJQBp7uZT%2FCoE%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"14c-h5LpbjDcAMbyfsBjthj4uMQZjwg"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e459e6cade6d42-GIG
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"},"updatedAt":"2023-11-30T16:08:48.767Z"}
13:08:48.647 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:08:48.651 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/2
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 307
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:08:49.120 [main] DEBUG com.intuit.karate - response time in milliseconds: 467
1 < 200
1 < Date: Thu, 30 Nov 2023 16:08:49 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360529&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=67C6ekWgN73S6tju29C3TNVlAkFcFCK231eBuQ47N78%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360529&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=67C6ekWgN73S6tju29C3TNVlAkFcFCK231eBuQ47N78%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"152-GAkp+Zqibsr7NZSCjBeKzbmYpvE"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e459e9cf90a58c-GRU
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"},"updatedAt":"2023-11-30T16:08:49.247Z"}
13:08:49.125 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:08:49.128 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:08:49.604 [main] DEBUG com.intuit.karate - response time in milliseconds: 475
1 < 204
1 < Date: Thu, 30 Nov 2023 16:08:49 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360529&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=67C6ekWgN73S6tju29C3TNVlAkFcFCK231eBuQ47N78%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360529&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=67C6ekWgN73S6tju29C3TNVlAkFcFCK231eBuQ47N78%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e459ecdf626d6a-GIG

13:08:49.609 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:08:49.612 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:08:50.061 [main] DEBUG com.intuit.karate - response time in milliseconds: 449
1 < 204
1 < Date: Thu, 30 Nov 2023 16:08:50 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360530&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=HX%2FKMTe9IogHqqPeg%2BA1F6ttNkWZ9zj8V8ZNZSPFpD8%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360530&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=HX%2FKMTe9IogHqqPeg%2BA1F6ttNkWZ9zj8V8ZNZSPFpD8%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e459efbf88a538-GRU

13:08:50.069 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:08:50.089 [main] ERROR com.intuit.karate - classpath:Trabalho_Inatel/Trabalho/reqres.feature:85
Given url url_base
>>>> js failed:
01: url_base
<<<<
org.graalvm.polyglot.PolyglotException: ReferenceError: "url_base" is not defined
- <js>.:program(Unnamed:1)

classpath:Trabalho_Inatel/Trabalho/reqres.feature:85
13:08:50.101 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:08:50.105 [main] ERROR com.intuit.karate - classpath:Trabalho_Inatel/Trabalho/reqres.feature:85
Given url url_base
>>>> js failed:
01: url_base
<<<<
org.graalvm.polyglot.PolyglotException: ReferenceError: "url_base" is not defined
- <js>.:program(Unnamed:1)

classpath:Trabalho_Inatel/Trabalho/reqres.feature:85
13:09:05.210 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:09:05.985 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:09:06.293 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:09:07.135 [main] DEBUG com.intuit.karate - response time in milliseconds: 839
1 < 200
1 < Date: Thu, 30 Nov 2023 16:09:07 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360547&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=GkbtJ0FKnUN3cbGCznWKusSN8FBxBrfh%2BlMkoMk5fK0%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360547&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=GkbtJ0FKnUN3cbGCznWKusSN8FBxBrfh%2BlMkoMk5fK0%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e45a594ffaa626-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#91f9f4fdfdfed1f3f4fff9fee6f5fdf4bff8fc">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

13:09:07.166 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:09:07.196 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:09:07.670 [main] DEBUG com.intuit.karate - response time in milliseconds: 470
1 < 200
1 < Date: Thu, 30 Nov 2023 16:09:07 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360547&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=GkbtJ0FKnUN3cbGCznWKusSN8FBxBrfh%2BlMkoMk5fK0%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360547&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=GkbtJ0FKnUN3cbGCznWKusSN8FBxBrfh%2BlMkoMk5fK0%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e45a5db9ea1cf5-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:09:07.700 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:09:07.707 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:09:07.772 [main] DEBUG com.intuit.karate - response time in milliseconds: 64
1 < 200
1 < Date: Thu, 30 Nov 2023 16:09:07 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358754&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=jGlv8Bi9hYMJGFJVGFc%2BYZkvGw3znsnU3civpmiXK80%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358754&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=jGlv8Bi9hYMJGFJVGFc%2BYZkvGw3znsnU3civpmiXK80%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 1793
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e45a60d81400f7-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:09:07.786 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:09:07.791 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:09:07.867 [main] DEBUG com.intuit.karate - response time in milliseconds: 75
1 < 200
1 < Date: Thu, 30 Nov 2023 16:09:08 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1700814146&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=KG7tN8hTTN7T8pTwpkEGm%2BeKuK%2B7WHSdCyAhxR55BWA%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1700814146&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=KG7tN8hTTN7T8pTwpkEGm%2BeKuK%2B7WHSdCyAhxR55BWA%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 6162
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e45a616e4da595-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:09:07.877 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:09:07.882 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:09:07.952 [main] DEBUG com.intuit.karate - response time in milliseconds: 70
1 < 200
1 < Date: Thu, 30 Nov 2023 16:09:08 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1700163682&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=I6jVZM8wqNNMZPXC2Dk8qUHhvLTrnYT2bqhEEeTb2b8%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1700163682&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=I6jVZM8wqNNMZPXC2Dk8qUHhvLTrnYT2bqhEEeTb2b8%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 3106
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e45a621a35649f-GIG
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:09:07.959 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:09:07.995 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 301
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:09:08.465 [main] DEBUG com.intuit.karate - response time in milliseconds: 469
1 < 201
1 < Date: Thu, 30 Nov 2023 16:09:08 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 343
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360548&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=t8QViKOQj0fUcYV%2B4BuPpL2bxhk1G7cf3Yfzxa8089g%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360548&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=t8QViKOQj0fUcYV%2B4BuPpL2bxhk1G7cf3Yfzxa8089g%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"157-v4lvvsYujX/1HN93CCqj3q3DuKg"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e45a62cbc21d53-GIG
{"createdAt":"2023-11-30T16:09:08.588Z","data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"id":"576","support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:09:08.471 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:09:08.476 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 307
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:09:08.952 [main] DEBUG com.intuit.karate - response time in milliseconds: 476
1 < 201
1 < Date: Thu, 30 Nov 2023 16:09:09 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 349
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360549&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=nt%2F0PAe92gxNe%2BHsu7iirJG%2Fzm%2FtztKTuQcijLhOBwo%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360549&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=nt%2F0PAe92gxNe%2BHsu7iirJG%2Fzm%2FtztKTuQcijLhOBwo%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15d-+ie9GOpTTiAAHXHsgfNeSyvtOK8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e45a65bdbe00f7-GRU
{"createdAt":"2023-11-30T16:09:09.073Z","data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"id":"240","support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:09:08.961 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:09:08.966 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/1
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 301
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:09:09.434 [main] DEBUG com.intuit.karate - response time in milliseconds: 468
1 < 200
1 < Date: Thu, 30 Nov 2023 16:09:09 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360549&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=nt%2F0PAe92gxNe%2BHsu7iirJG%2Fzm%2FtztKTuQcijLhOBwo%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360549&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=nt%2F0PAe92gxNe%2BHsu7iirJG%2Fzm%2FtztKTuQcijLhOBwo%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"14c-Qb9s4aWP7jqPdH3MKGbgrXlrqiI"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e45a68b8c91b26-GRU
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"},"updatedAt":"2023-11-30T16:09:09.559Z"}
13:09:09.441 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:09:09.446 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/2
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 307
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:09:09.920 [main] DEBUG com.intuit.karate - response time in milliseconds: 474
1 < 200
1 < Date: Thu, 30 Nov 2023 16:09:10 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360550&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=oGiqjnByK6AvL4AdEHnEhUGQUS9oFEkabRz%2FsHQBmwk%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360550&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=oGiqjnByK6AvL4AdEHnEhUGQUS9oFEkabRz%2FsHQBmwk%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"152-4fiXA3i21eneb3RmL+T70Gpwv+s"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e45a6bcfcfa477-GRU
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"},"updatedAt":"2023-11-30T16:09:10.039Z"}
13:09:09.927 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:09:09.931 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:09:10.402 [main] DEBUG com.intuit.karate - response time in milliseconds: 471
1 < 204
1 < Date: Thu, 30 Nov 2023 16:09:10 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360550&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=oGiqjnByK6AvL4AdEHnEhUGQUS9oFEkabRz%2FsHQBmwk%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360550&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=oGiqjnByK6AvL4AdEHnEhUGQUS9oFEkabRz%2FsHQBmwk%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e45a6ecd144b29-GRU

13:09:10.407 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:09:10.412 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:09:10.866 [main] DEBUG com.intuit.karate - response time in milliseconds: 454
1 < 204
1 < Date: Thu, 30 Nov 2023 16:09:11 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360550&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=oGiqjnByK6AvL4AdEHnEhUGQUS9oFEkabRz%2FsHQBmwk%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360550&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=oGiqjnByK6AvL4AdEHnEhUGQUS9oFEkabRz%2FsHQBmwk%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e45a71cec1a6ca-GRU

13:09:10.872 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:09:10.877 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/200
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:09:11.335 [main] DEBUG com.intuit.karate - response time in milliseconds: 458
1 < 404
1 < Date: Thu, 30 Nov 2023 16:09:11 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 2
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360551&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=DkFwJqfIUN9lBd%2BAD7zNCPWkuJnqixr1UImgLWXQlRM%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360551&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=DkFwJqfIUN9lBd%2BAD7zNCPWkuJnqixr1UImgLWXQlRM%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e45a74bfcda62c-GRU
{}
13:09:11.340 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:09:11.344 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/500
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:09:11.805 [main] DEBUG com.intuit.karate - response time in milliseconds: 460
1 < 404
1 < Date: Thu, 30 Nov 2023 16:09:12 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 2
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360551&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=DkFwJqfIUN9lBd%2BAD7zNCPWkuJnqixr1UImgLWXQlRM%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360551&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=DkFwJqfIUN9lBd%2BAD7zNCPWkuJnqixr1UImgLWXQlRM%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e45a779cc5a4c2-GRU
{}
13:13:34.027 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:13:34.734 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:13:35.016 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:13:35.837 [main] DEBUG com.intuit.karate - response time in milliseconds: 818
1 < 200
1 < Date: Thu, 30 Nov 2023 16:13:35 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360815&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=d4MEqequAND%2BwtRgN%2F48MALaHbuGhU%2BIR37ijDERgyU%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360815&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=d4MEqequAND%2BwtRgN%2F48MALaHbuGhU%2BIR37ijDERgyU%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e460e8aa57a5d1-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#6c04090000032c0e090204031b080009420501">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

13:13:35.864 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:13:35.882 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:13:35.956 [main] DEBUG com.intuit.karate - response time in milliseconds: 72
1 < 200
1 < Date: Thu, 30 Nov 2023 16:13:36 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358754&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=jGlv8Bi9hYMJGFJVGFc%2BYZkvGw3znsnU3civpmiXK80%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358754&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=jGlv8Bi9hYMJGFJVGFc%2BYZkvGw3znsnU3civpmiXK80%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 2062
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e460ed1dc11f7b-GIG
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:13:35.974 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:13:35.981 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:13:36.049 [main] DEBUG com.intuit.karate - response time in milliseconds: 67
1 < 200
1 < Date: Thu, 30 Nov 2023 16:13:36 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701357957&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vrjip9Ay9GPe7y4MmaZpMX3ndc8sXzH3HgvSe0cIp9k%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701357957&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vrjip9Ay9GPe7y4MmaZpMX3ndc8sXzH3HgvSe0cIp9k%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 2859
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e460edac820303-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:13:36.070 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:13:36.078 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:13:36.143 [main] DEBUG com.intuit.karate - response time in milliseconds: 65
1 < 200
1 < Date: Thu, 30 Nov 2023 16:13:36 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701237016&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=IjVHIdsDvuLmm06JyWoRcFaBHkF6wyng%2FDMsjdfGF%2Bw%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701237016&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=IjVHIdsDvuLmm06JyWoRcFaBHkF6wyng%2FDMsjdfGF%2Bw%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 1374
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e460ee39d41b27-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:13:36.152 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:13:36.158 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:13:36.226 [main] DEBUG com.intuit.karate - response time in milliseconds: 68
1 < 200
1 < Date: Thu, 30 Nov 2023 16:13:36 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701254002&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bTpMi70Lp01LQyyRv%2F%2FcOiZG2Pf5GZYO15jyfCmWhSM%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701254002&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bTpMi70Lp01LQyyRv%2F%2FcOiZG2Pf5GZYO15jyfCmWhSM%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 3134
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e460eeb90c02f8-GRU
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:13:36.233 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:13:36.266 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 301
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:13:36.717 [main] DEBUG com.intuit.karate - response time in milliseconds: 450
1 < 201
1 < Date: Thu, 30 Nov 2023 16:13:36 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 343
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360816&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=serNqgsWgFwyEKp1EitgWutuTentmvS9c0hXZ2lbsr0%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360816&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=serNqgsWgFwyEKp1EitgWutuTentmvS9c0hXZ2lbsr0%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"157-3VrSq7FArzd3DUN6EZp+KfjPTyQ"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e460ef5886a597-GRU
{"createdAt":"2023-11-30T16:13:36.848Z","data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"id":"728","support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:13:36.723 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:13:36.728 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 307
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:13:37.175 [main] DEBUG com.intuit.karate - response time in milliseconds: 447
1 < 201
1 < Date: Thu, 30 Nov 2023 16:13:37 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 349
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360817&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=rByqxBO7x2%2FPlUe619N%2BwE6xukjGSOxVPp0VIzckFC0%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360817&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=rByqxBO7x2%2FPlUe619N%2BwE6xukjGSOxVPp0VIzckFC0%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15d-d2NS3J4yvyX7zJRjj5CxF0OKvmg"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e460f249fda597-GRU
{"createdAt":"2023-11-30T16:13:37.308Z","data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"id":"911","support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:13:37.182 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:13:37.187 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/1
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 301
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:13:37.655 [main] DEBUG com.intuit.karate - response time in milliseconds: 468
1 < 200
1 < Date: Thu, 30 Nov 2023 16:13:37 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360817&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=rByqxBO7x2%2FPlUe619N%2BwE6xukjGSOxVPp0VIzckFC0%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360817&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=rByqxBO7x2%2FPlUe619N%2BwE6xukjGSOxVPp0VIzckFC0%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"14c-G3yRjOLPxPbLiMvZAseW3MfUGbA"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e460f52fd21a96-GRU
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"},"updatedAt":"2023-11-30T16:13:37.786Z"}
13:13:37.661 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:13:37.667 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/2
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 307
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:13:38.139 [main] DEBUG com.intuit.karate - response time in milliseconds: 472
1 < 200
1 < Date: Thu, 30 Nov 2023 16:13:38 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360818&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=05pO1S8hcJMXXk6RBPlFmjUcE84i65qPRPbh5JGWbCM%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360818&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=05pO1S8hcJMXXk6RBPlFmjUcE84i65qPRPbh5JGWbCM%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"152-4mh7Ok0KpCzFsor2H3ycJTgo9PA"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e460f8298a1b16-GRU
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"},"updatedAt":"2023-11-30T16:13:38.269Z"}
13:13:38.145 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:13:38.149 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:13:38.626 [main] DEBUG com.intuit.karate - response time in milliseconds: 476
1 < 204
1 < Date: Thu, 30 Nov 2023 16:13:38 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360818&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=05pO1S8hcJMXXk6RBPlFmjUcE84i65qPRPbh5JGWbCM%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360818&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=05pO1S8hcJMXXk6RBPlFmjUcE84i65qPRPbh5JGWbCM%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e460fb4f7b6d6c-GIG

13:13:38.630 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:13:38.634 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:13:39.082 [main] DEBUG com.intuit.karate - response time in milliseconds: 448
1 < 204
1 < Date: Thu, 30 Nov 2023 16:13:39 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360819&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=aQMD8Y4aGPAJkdQ7n0kzLB18UynJJ9vVDZNIQaq3TW0%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360819&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=aQMD8Y4aGPAJkdQ7n0kzLB18UynJJ9vVDZNIQaq3TW0%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e460fe2a764d15-GRU

13:13:39.087 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:13:39.092 [main] ERROR com.intuit.karate - classpath:Trabalho_Inatel/Trabalho/reqres.feature:90
Then status 200
Cannot invoke "com.intuit.karate.http.Response.getStatus()" because "this.response" is null
classpath:Trabalho_Inatel/Trabalho/reqres.feature:90
13:13:39.103 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:13:39.108 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/200
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:13:39.578 [main] DEBUG com.intuit.karate - response time in milliseconds: 470
1 < 404
1 < Date: Thu, 30 Nov 2023 16:13:39 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 2
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360819&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=aQMD8Y4aGPAJkdQ7n0kzLB18UynJJ9vVDZNIQaq3TW0%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360819&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=aQMD8Y4aGPAJkdQ7n0kzLB18UynJJ9vVDZNIQaq3TW0%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e461012ef11a89-GRU
{}
13:13:39.582 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:13:39.587 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/500
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:13:40.039 [main] DEBUG com.intuit.karate - response time in milliseconds: 452
1 < 404
1 < Date: Thu, 30 Nov 2023 16:13:40 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 2
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360820&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=my9YSwuYavoU1sNtc2nUe3LGcJHwSpaFGs9jBJowx0M%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360820&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=my9YSwuYavoU1sNtc2nUe3LGcJHwSpaFGs9jBJowx0M%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e461042a64a5f5-GRU
{}
13:15:19.546 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:15:20.228 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:15:20.533 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:15:21.394 [main] DEBUG com.intuit.karate - response time in milliseconds: 859
1 < 200
1 < Date: Thu, 30 Nov 2023 16:15:21 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360921&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=trDDJoaiBSvTLmRLJyhLHl68OMEEBTcrytSH4yXkq8s%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360921&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=trDDJoaiBSvTLmRLJyhLHl68OMEEBTcrytSH4yXkq8s%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e4637c5bcca52b-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#3f575a5353507f5d5a515750485b535a115652">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

13:15:21.422 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:15:21.442 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:15:21.506 [main] DEBUG com.intuit.karate - response time in milliseconds: 61
1 < 200
1 < Date: Thu, 30 Nov 2023 16:15:21 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 2520
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e46380b94d01b2-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:15:21.537 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:15:21.546 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:15:22.014 [main] DEBUG com.intuit.karate - response time in milliseconds: 467
1 < 200
1 < Date: Thu, 30 Nov 2023 16:15:22 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360922&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=aS0GROzO7z6CBMWGJQzPfQwaiarTrw1IMSwNff%2BeNOI%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360922&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=aS0GROzO7z6CBMWGJQzPfQwaiarTrw1IMSwNff%2BeNOI%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e463816efe1b16-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:15:22.025 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:15:22.033 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:15:22.097 [main] DEBUG com.intuit.karate - response time in milliseconds: 64
1 < 200
1 < Date: Thu, 30 Nov 2023 16:15:22 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1700814146&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=KG7tN8hTTN7T8pTwpkEGm%2BeKuK%2B7WHSdCyAhxR55BWA%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1700814146&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=KG7tN8hTTN7T8pTwpkEGm%2BeKuK%2B7WHSdCyAhxR55BWA%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 6536
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e463847bbca58b-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:15:22.107 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:15:22.114 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:15:22.200 [main] DEBUG com.intuit.karate - response time in milliseconds: 86
1 < 200
1 < Date: Thu, 30 Nov 2023 16:15:22 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1700163682&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=I6jVZM8wqNNMZPXC2Dk8qUHhvLTrnYT2bqhEEeTb2b8%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1700163682&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=I6jVZM8wqNNMZPXC2Dk8qUHhvLTrnYT2bqhEEeTb2b8%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 3480
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e463852c791178-GIG
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:15:22.209 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:15:22.245 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 301
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:15:22.718 [main] DEBUG com.intuit.karate - response time in milliseconds: 472
1 < 201
1 < Date: Thu, 30 Nov 2023 16:15:22 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 343
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360922&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=aS0GROzO7z6CBMWGJQzPfQwaiarTrw1IMSwNff%2BeNOI%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360922&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=aS0GROzO7z6CBMWGJQzPfQwaiarTrw1IMSwNff%2BeNOI%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"157-+4yhIXE91GQz970Gu1RmWGejddo"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e46385c9cea4ef-GRU
{"createdAt":"2023-11-30T16:15:22.847Z","data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"id":"725","support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:15:22.724 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:15:22.729 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 307
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:15:23.191 [main] DEBUG com.intuit.karate - response time in milliseconds: 462
1 < 201
1 < Date: Thu, 30 Nov 2023 16:15:23 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 349
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360923&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=NjQjQ%2BbSKyrjApwUr6KOXU6LQXdIlv2Fb%2F4h4XClTbk%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360923&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=NjQjQ%2BbSKyrjApwUr6KOXU6LQXdIlv2Fb%2F4h4XClTbk%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15d-pseD5Mw03e95NZ65LBiBui8dog0"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e46388ce06520b-GRU
{"createdAt":"2023-11-30T16:15:23.319Z","data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"id":"759","support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:15:23.198 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:15:23.203 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/1
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 301
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:15:23.687 [main] DEBUG com.intuit.karate - response time in milliseconds: 483
1 < 200
1 < Date: Thu, 30 Nov 2023 16:15:23 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360923&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=NjQjQ%2BbSKyrjApwUr6KOXU6LQXdIlv2Fb%2F4h4XClTbk%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360923&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=NjQjQ%2BbSKyrjApwUr6KOXU6LQXdIlv2Fb%2F4h4XClTbk%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"14c-tZcmUBoro+1EORP0hFPAs9IMKAg"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4638bc9ac6048-GRU
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"},"updatedAt":"2023-11-30T16:15:23.811Z"}
13:15:23.693 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:15:23.698 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/2
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 307
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:15:24.160 [main] DEBUG com.intuit.karate - response time in milliseconds: 460
1 < 200
1 < Date: Thu, 30 Nov 2023 16:15:24 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360924&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=hcZpF5a5rXtLGMe6d52CyDJQC8y9kcrIhklkZ0ZutBU%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360924&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=hcZpF5a5rXtLGMe6d52CyDJQC8y9kcrIhklkZ0ZutBU%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"152-gzpOW79ZKboH2Cqix4tqRCvBy98"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4638edf401aa8-GRU
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"},"updatedAt":"2023-11-30T16:15:24.286Z"}
13:15:24.167 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:15:24.172 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:15:24.653 [main] DEBUG com.intuit.karate - response time in milliseconds: 481
1 < 204
1 < Date: Thu, 30 Nov 2023 16:15:24 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360924&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=hcZpF5a5rXtLGMe6d52CyDJQC8y9kcrIhklkZ0ZutBU%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360924&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=hcZpF5a5rXtLGMe6d52CyDJQC8y9kcrIhklkZ0ZutBU%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e46391dbdaa580-GRU

13:15:24.658 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:15:24.661 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:15:25.128 [main] DEBUG com.intuit.karate - response time in milliseconds: 467
1 < 204
1 < Date: Thu, 30 Nov 2023 16:15:25 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360925&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=Jgz%2BI%2BNcJKSSyMGPH0UIIr04qck82yLXo3N3eaB2kDY%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360925&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=Jgz%2BI%2BNcJKSSyMGPH0UIIr04qck82yLXo3N3eaB2kDY%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e46394e9a800e9-GRU

13:15:25.142 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:15:25.148 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/register
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 89
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"password":"trabalho_muito_facil","email":"email_de_um_novo_usuario@trabalho.inatel.br"}

13:15:25.632 [main] DEBUG com.intuit.karate - response time in milliseconds: 484
1 < 400
1 < Date: Thu, 30 Nov 2023 16:15:25 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 57
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360925&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=Jgz%2BI%2BNcJKSSyMGPH0UIIr04qck82yLXo3N3eaB2kDY%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360925&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=Jgz%2BI%2BNcJKSSyMGPH0UIIr04qck82yLXo3N3eaB2kDY%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"39-6jrJxn+7f+pQUhbPgNMst7tagpA"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e463980f6764ed-GIG
{"error":"Note: Only defined users succeed registration"}
13:15:25.633 [main] ERROR com.intuit.karate - classpath:Trabalho_Inatel/Trabalho/reqres.feature:91
Then status 200
status code was: 400, expected: 200, response time in milliseconds: 484, url: https://reqres.in/api/register, response: 
{"error":"Note: Only defined users succeed registration"}
classpath:Trabalho_Inatel/Trabalho/reqres.feature:91
13:15:25.645 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:15:25.650 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/200
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:15:26.115 [main] DEBUG com.intuit.karate - response time in milliseconds: 464
1 < 404
1 < Date: Thu, 30 Nov 2023 16:15:26 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 2
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360926&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=dcrbW6bHi85uwcbiJiHJxSkjRWmnhWEL0REAdvWJxYo%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360926&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=dcrbW6bHi85uwcbiJiHJxSkjRWmnhWEL0REAdvWJxYo%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4639b1ca301ac-GRU
{}
13:15:26.120 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:15:26.125 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/500
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:15:26.620 [main] DEBUG com.intuit.karate - response time in milliseconds: 494
1 < 404
1 < Date: Thu, 30 Nov 2023 16:15:26 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 2
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360926&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=dcrbW6bHi85uwcbiJiHJxSkjRWmnhWEL0REAdvWJxYo%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360926&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=dcrbW6bHi85uwcbiJiHJxSkjRWmnhWEL0REAdvWJxYo%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4639e0dd74b3a-GRU
{}
13:16:41.220 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:16:41.928 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:16:42.226 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:16:43.055 [main] DEBUG com.intuit.karate - response time in milliseconds: 827
1 < 200
1 < Date: Thu, 30 Nov 2023 16:16:43 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361002&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=S6UVDqthW1MIFNXTpjQ%2BqOSoQunj5lhi92D8LjsSXMg%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361002&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=S6UVDqthW1MIFNXTpjQ%2BqOSoQunj5lhi92D8LjsSXMg%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e4657acbc01d53-GIG
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#96fef3fafaf9d6f4f3f8fef9e1f2faf3b8fffb">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

13:16:43.083 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:16:43.119 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:16:43.198 [main] DEBUG com.intuit.karate - response time in milliseconds: 75
1 < 200
1 < Date: Thu, 30 Nov 2023 16:16:43 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 2602
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4657f5dc9a4ea-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:16:43.222 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:16:43.229 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:16:43.311 [main] DEBUG com.intuit.karate - response time in milliseconds: 81
1 < 200
1 < Date: Thu, 30 Nov 2023 16:16:43 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358754&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=jGlv8Bi9hYMJGFJVGFc%2BYZkvGw3znsnU3civpmiXK80%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358754&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=jGlv8Bi9hYMJGFJVGFc%2BYZkvGw3znsnU3civpmiXK80%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 2249
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4657ff8c677be-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:16:43.323 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:16:43.330 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:16:43.390 [main] DEBUG com.intuit.karate - response time in milliseconds: 59
1 < 200
1 < Date: Thu, 30 Nov 2023 16:16:43 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701237016&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=IjVHIdsDvuLmm06JyWoRcFaBHkF6wyng%2FDMsjdfGF%2Bw%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701237016&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=IjVHIdsDvuLmm06JyWoRcFaBHkF6wyng%2FDMsjdfGF%2Bw%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 1561
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e465808a061b21-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:16:43.399 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:16:43.405 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:16:43.471 [main] DEBUG com.intuit.karate - response time in milliseconds: 66
1 < 200
1 < Date: Thu, 30 Nov 2023 16:16:43 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1700163682&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=I6jVZM8wqNNMZPXC2Dk8qUHhvLTrnYT2bqhEEeTb2b8%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1700163682&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=I6jVZM8wqNNMZPXC2Dk8qUHhvLTrnYT2bqhEEeTb2b8%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 3561
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e465812d7864d9-GIG
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:16:43.478 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:16:43.514 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 301
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:16:44.008 [main] DEBUG com.intuit.karate - response time in milliseconds: 493
1 < 201
1 < Date: Thu, 30 Nov 2023 16:16:44 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 343
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361004&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=Q84yn7M0k%2FoIE6235sSUTqfD7THagwe%2B2XCJCzKTMo8%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361004&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=Q84yn7M0k%2FoIE6235sSUTqfD7THagwe%2B2XCJCzKTMo8%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"157-+/aNSW6SEV72HxhIpvYE1cQsIwM"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e46581cb58a526-GRU
{"createdAt":"2023-11-30T16:16:44.135Z","data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"id":"491","support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:16:44.015 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:16:44.021 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 307
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:16:44.623 [main] DEBUG com.intuit.karate - response time in milliseconds: 602
1 < 201
1 < Date: Thu, 30 Nov 2023 16:16:44 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 349
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361004&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=Q84yn7M0k%2FoIE6235sSUTqfD7THagwe%2B2XCJCzKTMo8%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361004&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=Q84yn7M0k%2FoIE6235sSUTqfD7THagwe%2B2XCJCzKTMo8%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15d-YVrknkWG1cK+jcZPv/AOt0bGB58"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e46584d8f84b41-GRU
{"createdAt":"2023-11-30T16:16:44.757Z","data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"id":"418","support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:16:44.629 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:16:44.634 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/1
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 301
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:16:45.091 [main] DEBUG com.intuit.karate - response time in milliseconds: 455
1 < 200
1 < Date: Thu, 30 Nov 2023 16:16:45 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361005&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=XwHx%2BaduCpzlcoKdEYsSaHDWgUep72UGmugz4l9ZcfE%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361005&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=XwHx%2BaduCpzlcoKdEYsSaHDWgUep72UGmugz4l9ZcfE%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"14c-y9E3I2v9aEIaABOfbO7naBk+wqM"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e46588bd6ea597-GRU
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"},"updatedAt":"2023-11-30T16:16:45.229Z"}
13:16:45.097 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:16:45.103 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/2
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 307
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:16:45.563 [main] DEBUG com.intuit.karate - response time in milliseconds: 460
1 < 200
1 < Date: Thu, 30 Nov 2023 16:16:45 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361005&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=XwHx%2BaduCpzlcoKdEYsSaHDWgUep72UGmugz4l9ZcfE%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361005&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=XwHx%2BaduCpzlcoKdEYsSaHDWgUep72UGmugz4l9ZcfE%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"152-7CWDCH23x0+UaMMjyWSOTk6jwLo"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4658bae72a580-GRU
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"},"updatedAt":"2023-11-30T16:16:45.696Z"}
13:16:45.569 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:16:45.574 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:16:46.042 [main] DEBUG com.intuit.karate - response time in milliseconds: 467
1 < 204
1 < Date: Thu, 30 Nov 2023 16:16:46 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361006&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=srLiMpHUNHJgjpZlLeAfP%2FNZ4kuWtjyQUNaC8RlzORQ%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361006&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=srLiMpHUNHJgjpZlLeAfP%2FNZ4kuWtjyQUNaC8RlzORQ%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e4658e9c834cf7-GRU

13:16:46.047 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:16:46.051 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:16:46.514 [main] DEBUG com.intuit.karate - response time in milliseconds: 462
1 < 204
1 < Date: Thu, 30 Nov 2023 16:16:46 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361006&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=srLiMpHUNHJgjpZlLeAfP%2FNZ4kuWtjyQUNaC8RlzORQ%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361006&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=srLiMpHUNHJgjpZlLeAfP%2FNZ4kuWtjyQUNaC8RlzORQ%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e465918ddfa614-GRU

13:16:46.529 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:16:46.535 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/register
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 79
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"password":"trabalho_muito_facil","email":"email_de_teste@trabalho.inatel.br"}

13:16:47.005 [main] DEBUG com.intuit.karate - response time in milliseconds: 469
1 < 400
1 < Date: Thu, 30 Nov 2023 16:16:47 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 57
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361007&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vmviNCqLFHwwmLibz5Fa6KG%2BkE2dKr7sEw3Vv3oG6eg%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361007&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vmviNCqLFHwwmLibz5Fa6KG%2BkE2dKr7sEw3Vv3oG6eg%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"39-6jrJxn+7f+pQUhbPgNMst7tagpA"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e465949c83a4d2-GRU
{"error":"Note: Only defined users succeed registration"}
13:16:47.006 [main] ERROR com.intuit.karate - classpath:Trabalho_Inatel/Trabalho/reqres.feature:91
Then status 200
status code was: 400, expected: 200, response time in milliseconds: 469, url: https://reqres.in/api/register, response: 
{"error":"Note: Only defined users succeed registration"}
classpath:Trabalho_Inatel/Trabalho/reqres.feature:91
13:16:47.017 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:16:47.022 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/200
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:16:47.491 [main] DEBUG com.intuit.karate - response time in milliseconds: 468
1 < 404
1 < Date: Thu, 30 Nov 2023 16:16:47 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 2
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361007&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vmviNCqLFHwwmLibz5Fa6KG%2BkE2dKr7sEw3Vv3oG6eg%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361007&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vmviNCqLFHwwmLibz5Fa6KG%2BkE2dKr7sEw3Vv3oG6eg%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e465979d936043-GRU
{}
13:16:47.495 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:16:47.500 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/500
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:16:47.979 [main] DEBUG com.intuit.karate - response time in milliseconds: 479
1 < 404
1 < Date: Thu, 30 Nov 2023 16:16:48 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 2
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361008&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=9MKT48Y4LXvHwacuQxsgVr%2B0x0jRC1rgMOKdwcgNd5E%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361008&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=9MKT48Y4LXvHwacuQxsgVr%2B0x0jRC1rgMOKdwcgNd5E%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4659abd58117a-GIG
{}
13:17:18.899 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:17:19.580 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:17:19.854 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:17:20.715 [main] DEBUG com.intuit.karate - response time in milliseconds: 859
1 < 200
1 < Date: Thu, 30 Nov 2023 16:17:20 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361040&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=irPwCCO7eAic4TZadltnrLYsaOKJlXHrDGo8hMUv%2FRc%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361040&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=irPwCCO7eAic4TZadltnrLYsaOKJlXHrDGo8hMUv%2FRc%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e46665fb0f01d7-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#bdd5d8d1d1d2fddfd8d3d5d2cad9d1d893d4d0">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

13:17:20.742 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:17:20.772 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:17:20.843 [main] DEBUG com.intuit.karate - response time in milliseconds: 68
1 < 200
1 < Date: Thu, 30 Nov 2023 16:17:21 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701359119&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=X2DIKLRKSS4J%2BtrefzkZzpB%2FBGz8PsjE5KXmmOkQ5cE%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701359119&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=X2DIKLRKSS4J%2BtrefzkZzpB%2FBGz8PsjE5KXmmOkQ5cE%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 1922
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4666a9856a628-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:17:20.862 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:17:20.871 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:17:20.944 [main] DEBUG com.intuit.karate - response time in milliseconds: 72
1 < 200
1 < Date: Thu, 30 Nov 2023 16:17:21 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 2640
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4666b389b1aa7-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:17:20.954 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:17:20.960 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:17:21.027 [main] DEBUG com.intuit.karate - response time in milliseconds: 66
1 < 200
1 < Date: Thu, 30 Nov 2023 16:17:21 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1700814146&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=KG7tN8hTTN7T8pTwpkEGm%2BeKuK%2B7WHSdCyAhxR55BWA%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1700814146&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=KG7tN8hTTN7T8pTwpkEGm%2BeKuK%2B7WHSdCyAhxR55BWA%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 6655
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4666bcfe4a5c2-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:17:21.033 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:17:21.039 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:17:21.112 [main] DEBUG com.intuit.karate - response time in milliseconds: 72
1 < 200
1 < Date: Thu, 30 Nov 2023 16:17:21 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1699789462&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bxOVqyTot36HGUYBKlkeaatFNQgh6oGfJet2Po%2FJ79A%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1699789462&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bxOVqyTot36HGUYBKlkeaatFNQgh6oGfJet2Po%2FJ79A%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 3179
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4666c4be76049-GRU
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:17:21.119 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:17:21.153 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 301
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:17:21.617 [main] DEBUG com.intuit.karate - response time in milliseconds: 464
1 < 201
1 < Date: Thu, 30 Nov 2023 16:17:21 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 343
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361041&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0krdltSPIU0YVZALUddYyhADAkj3js%2FYbmwovLgGWSg%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361041&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0krdltSPIU0YVZALUddYyhADAkj3js%2FYbmwovLgGWSg%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"157-ZvIfhMMPDDs+UtHG5FMSh1fgkB0"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e4666cf935a634-GRU
{"createdAt":"2023-11-30T16:17:21.755Z","data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"id":"315","support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:17:21.626 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:17:21.632 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 307
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:17:22.119 [main] DEBUG com.intuit.karate - response time in milliseconds: 486
1 < 201
1 < Date: Thu, 30 Nov 2023 16:17:22 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 349
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361042&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=nww0%2BlKzoECP56lLkKGMU%2Fzprn%2Bi%2B%2FcbPxupa%2BkshuE%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361042&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=nww0%2BlKzoECP56lLkKGMU%2Fzprn%2Bi%2B%2FcbPxupa%2BkshuE%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15d-owd/B/o8kgkNIxqsIXZ4zEc7Uo8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e4666ffdb8a62f-GRU
{"createdAt":"2023-11-30T16:17:22.252Z","data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"id":"757","support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:17:22.125 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:17:22.132 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/1
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 301
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:17:22.591 [main] DEBUG com.intuit.karate - response time in milliseconds: 459
1 < 200
1 < Date: Thu, 30 Nov 2023 16:17:22 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361042&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=nww0%2BlKzoECP56lLkKGMU%2Fzprn%2Bi%2B%2FcbPxupa%2BkshuE%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361042&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=nww0%2BlKzoECP56lLkKGMU%2Fzprn%2Bi%2B%2FcbPxupa%2BkshuE%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"14c-btDmaq34RX89A5QyFU34cAgVx2U"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e466731d65a47d-GRU
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"},"updatedAt":"2023-11-30T16:17:22.723Z"}
13:17:22.598 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:17:22.603 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/2
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 307
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:17:23.076 [main] DEBUG com.intuit.karate - response time in milliseconds: 472
1 < 200
1 < Date: Thu, 30 Nov 2023 16:17:23 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361043&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0XByhCy%2BpFkDG5awS0p20klU07sACHI%2BKkQ5VMy%2BJOw%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361043&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0XByhCy%2BpFkDG5awS0p20klU07sACHI%2BKkQ5VMy%2BJOw%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"152-YaS2QjUShqhnolc9v/74zpb6iOo"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e466762cf264b1-GIG
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"},"updatedAt":"2023-11-30T16:17:23.213Z"}
13:17:23.083 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:17:23.090 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:17:23.577 [main] DEBUG com.intuit.karate - response time in milliseconds: 487
1 < 204
1 < Date: Thu, 30 Nov 2023 16:17:23 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361043&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0XByhCy%2BpFkDG5awS0p20klU07sACHI%2BKkQ5VMy%2BJOw%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361043&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0XByhCy%2BpFkDG5awS0p20klU07sACHI%2BKkQ5VMy%2BJOw%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e466791e9901d8-GRU

13:17:23.582 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:17:23.587 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:17:24.044 [main] DEBUG com.intuit.karate - response time in milliseconds: 456
1 < 204
1 < Date: Thu, 30 Nov 2023 16:17:24 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361044&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=wdrdu0L0JXbDJFMGV60AH9GJOAD0SkcRG9YIqS0Jx1o%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361044&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=wdrdu0L0JXbDJFMGV60AH9GJOAD0SkcRG9YIqS0Jx1o%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e4667c2c3ca6b4-GRU

13:17:24.056 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:17:24.062 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/register
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 68
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"password":"trabalho_muito_facil","email":"george.bluth@reqres.in"}

13:17:24.539 [main] DEBUG com.intuit.karate - response time in milliseconds: 477
1 < 200
1 < Date: Thu, 30 Nov 2023 16:17:24 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 36
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361044&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=wdrdu0L0JXbDJFMGV60AH9GJOAD0SkcRG9YIqS0Jx1o%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361044&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=wdrdu0L0JXbDJFMGV60AH9GJOAD0SkcRG9YIqS0Jx1o%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"24-JcRj48oECRihPfR4LQyKB23PLEU"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e4667f2c531cf9-GRU
{"id":1,"token":"QpwL5tke4Pnpja7X1"}
13:17:24.545 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:17:24.550 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/200
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:17:24.620 [main] DEBUG com.intuit.karate - response time in milliseconds: 70
1 < 404
1 < Date: Thu, 30 Nov 2023 16:17:24 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 2
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360926&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=dcrbW6bHi85uwcbiJiHJxSkjRWmnhWEL0REAdvWJxYo%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360926&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=dcrbW6bHi85uwcbiJiHJxSkjRWmnhWEL0REAdvWJxYo%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 118
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e466822b31a529-GRU
{}
13:17:24.624 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:17:24.629 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/500
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:17:25.111 [main] DEBUG com.intuit.karate - response time in milliseconds: 482
1 < 404
1 < Date: Thu, 30 Nov 2023 16:17:25 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 2
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361045&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=HmMZZmH4cN8VbZSxASz7UIYwbGloeyqSwAvwmIm7dNA%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361045&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=HmMZZmH4cN8VbZSxASz7UIYwbGloeyqSwAvwmIm7dNA%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: EXPIRED
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e46682ac52a5bc-GRU
{}
13:18:35.727 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:18:36.450 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:18:36.742 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:18:37.582 [main] DEBUG com.intuit.karate - response time in milliseconds: 838
1 < 200
1 < Date: Thu, 30 Nov 2023 16:18:37 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361117&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=iNvflSdJhh%2FbEdg4TW%2F8UGIsL%2Bi5iFZdwt5JHwOby2o%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361117&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=iNvflSdJhh%2FbEdg4TW%2F8UGIsL%2Bi5iFZdwt5JHwOby2o%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e468468db2a538-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#3b535e5757547b595e5553544c5f575e155256">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

13:18:37.609 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:18:37.627 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:18:37.689 [main] DEBUG com.intuit.karate - response time in milliseconds: 60
1 < 200
1 < Date: Thu, 30 Nov 2023 16:18:37 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 2716
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4684aeae6a538-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:18:37.720 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:18:37.728 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:18:37.806 [main] DEBUG com.intuit.karate - response time in milliseconds: 78
1 < 200
1 < Date: Thu, 30 Nov 2023 16:18:38 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 2717
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4684b9efe1aa2-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:18:37.819 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:18:37.826 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:18:37.887 [main] DEBUG com.intuit.karate - response time in milliseconds: 61
1 < 200
1 < Date: Thu, 30 Nov 2023 16:18:38 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1700814146&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=KG7tN8hTTN7T8pTwpkEGm%2BeKuK%2B7WHSdCyAhxR55BWA%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1700814146&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=KG7tN8hTTN7T8pTwpkEGm%2BeKuK%2B7WHSdCyAhxR55BWA%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 6732
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4684c2f5ba5af-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:18:37.895 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:18:37.900 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:18:37.967 [main] DEBUG com.intuit.karate - response time in milliseconds: 66
1 < 200
1 < Date: Thu, 30 Nov 2023 16:18:38 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1699789462&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bxOVqyTot36HGUYBKlkeaatFNQgh6oGfJet2Po%2FJ79A%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1699789462&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bxOVqyTot36HGUYBKlkeaatFNQgh6oGfJet2Po%2FJ79A%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 3256
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e4684caa6003cf-GRU
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:18:37.974 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:18:38.009 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 301
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:18:38.476 [main] DEBUG com.intuit.karate - response time in milliseconds: 467
1 < 201
1 < Date: Thu, 30 Nov 2023 16:18:38 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 343
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361118&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=VX2NDTqUDgGPSRkJ9iHE%2FqM6JvZ6S%2F20nvGJa5z9UpM%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361118&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=VX2NDTqUDgGPSRkJ9iHE%2FqM6JvZ6S%2F20nvGJa5z9UpM%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"157-pqSD+uvHlCuAkkfNZrn6BpOXRik"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e4684d58e96037-GRU
{"createdAt":"2023-11-30T16:18:38.612Z","data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"id":"606","support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:18:38.483 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:18:38.489 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 307
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:18:38.972 [main] DEBUG com.intuit.karate - response time in milliseconds: 483
1 < 201
1 < Date: Thu, 30 Nov 2023 16:18:39 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 349
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361119&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=n4hIL9DnKTIgJ2wNwjcRq%2BbwUA9DDdrwR6qrz83QXEk%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361119&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=n4hIL9DnKTIgJ2wNwjcRq%2BbwUA9DDdrwR6qrz83QXEk%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15d-yY+5ApfsgivbkgDUvBjaUyymlUw"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e4685089ee64fc-GIG
{"createdAt":"2023-11-30T16:18:39.107Z","data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"id":"739","support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:18:38.980 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:18:38.986 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/1
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 301
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:18:39.449 [main] DEBUG com.intuit.karate - response time in milliseconds: 463
1 < 200
1 < Date: Thu, 30 Nov 2023 16:18:39 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361119&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=n4hIL9DnKTIgJ2wNwjcRq%2BbwUA9DDdrwR6qrz83QXEk%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361119&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=n4hIL9DnKTIgJ2wNwjcRq%2BbwUA9DDdrwR6qrz83QXEk%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"14c-j/KFW2ZW0lSTyJXNsasRmaXV7ZM"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e468538cd31d54-GIG
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"},"updatedAt":"2023-11-30T16:18:39.588Z"}
13:18:39.454 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:18:39.459 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/2
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 307
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:18:39.916 [main] DEBUG com.intuit.karate - response time in milliseconds: 455
1 < 200
1 < Date: Thu, 30 Nov 2023 16:18:40 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361120&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=gtrv8FDKiE6gTac3y11s8ArmAcYMgWh1pTvZNmJE0yc%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361120&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=gtrv8FDKiE6gTac3y11s8ArmAcYMgWh1pTvZNmJE0yc%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"152-tgWUHOnlklks5bs129PP6C+mevg"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e468566ae500e2-GRU
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"},"updatedAt":"2023-11-30T16:18:40.052Z"}
13:18:39.921 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:18:39.925 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:18:40.402 [main] DEBUG com.intuit.karate - response time in milliseconds: 477
1 < 204
1 < Date: Thu, 30 Nov 2023 16:18:40 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361120&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=gtrv8FDKiE6gTac3y11s8ArmAcYMgWh1pTvZNmJE0yc%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361120&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=gtrv8FDKiE6gTac3y11s8ArmAcYMgWh1pTvZNmJE0yc%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e468596cfa2553-GIG

13:18:40.407 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:18:40.411 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:18:40.865 [main] DEBUG com.intuit.karate - response time in milliseconds: 453
1 < 204
1 < Date: Thu, 30 Nov 2023 16:18:41 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361120&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=gtrv8FDKiE6gTac3y11s8ArmAcYMgWh1pTvZNmJE0yc%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361120&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=gtrv8FDKiE6gTac3y11s8ArmAcYMgWh1pTvZNmJE0yc%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e4685c5b431acf-GRU

13:18:40.878 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:18:40.885 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/register
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 68
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"password":"trabalho_muito_facil","email":"george.bluth@reqres.in"}

13:18:41.360 [main] DEBUG com.intuit.karate - response time in milliseconds: 474
1 < 200
1 < Date: Thu, 30 Nov 2023 16:18:41 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 36
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361121&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0GlxTPUgRNwlb9x%2F6hkpc4vpxFPdGpexwMY1qWbVtF8%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361121&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0GlxTPUgRNwlb9x%2F6hkpc4vpxFPdGpexwMY1qWbVtF8%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"24-JcRj48oECRihPfR4LQyKB23PLEU"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e4685f4c3a02ff-GRU
{"id":1,"token":"QpwL5tke4Pnpja7X1"}
13:18:41.364 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:18:41.369 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/200
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:18:41.437 [main] DEBUG com.intuit.karate - response time in milliseconds: 67
1 < 404
1 < Date: Thu, 30 Nov 2023 16:18:41 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 2
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361007&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vmviNCqLFHwwmLibz5Fa6KG%2BkE2dKr7sEw3Vv3oG6eg%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361007&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=vmviNCqLFHwwmLibz5Fa6KG%2BkE2dKr7sEw3Vv3oG6eg%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 114
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e468625c9d00f1-GRU
{}
13:18:41.443 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:18:41.448 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/500
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:18:41.920 [main] DEBUG com.intuit.karate - response time in milliseconds: 472
1 < 404
1 < Date: Thu, 30 Nov 2023 16:18:42 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 2
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361122&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=l%2B9HmI0gbQlczOD8E8U%2FyVh7oFCb5rVOby4dNtFX4d8%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361122&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=l%2B9HmI0gbQlczOD8E8U%2FyVh7oFCb5rVOby4dNtFX4d8%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: EXPIRED
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e46862d83801c1-GRU
{}
13:18:41.925 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:18:41.929 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/register
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"email":"email_de_um_novo_usuario_sem_senha@trabalho.inatel.br"}

13:18:42.382 [main] DEBUG com.intuit.karate - response time in milliseconds: 451
1 < 400
1 < Date: Thu, 30 Nov 2023 16:18:42 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 28
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361122&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=l%2B9HmI0gbQlczOD8E8U%2FyVh7oFCb5rVOby4dNtFX4d8%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361122&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=l%2B9HmI0gbQlczOD8E8U%2FyVh7oFCb5rVOby4dNtFX4d8%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"1c-NmpazMScs9tOqR7eDEesn+pqC9Q"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e46865d8810137-GRU
{"error":"Missing password"}
13:19:32.463 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
13:19:33.162 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:19:33.447 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:19:34.290 [main] DEBUG com.intuit.karate - response time in milliseconds: 841
1 < 200
1 < Date: Thu, 30 Nov 2023 16:19:34 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361174&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=YVndVNhKMOtGvr6ZGeLaUlUv%2BitwYbXZHDAKYdk0fLg%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361174&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=YVndVNhKMOtGvr6ZGeLaUlUv%2BitwYbXZHDAKYdk0fLg%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e469a8f8c3a4c2-GRU
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#acc4c9c0c0c3eccec9c2c4c3dbc8c0c982c5c1">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

13:19:34.316 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:19:34.334 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:19:34.394 [main] DEBUG com.intuit.karate - response time in milliseconds: 58
1 < 200
1 < Date: Thu, 30 Nov 2023 16:19:34 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701358401&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=uDUriWEjth5fi5zwPaS1OR65%2BMVFrhl%2Bq%2BvTOuU0r7I%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 2773
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e469ad5aafa537-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:19:34.424 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:19:34.432 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:19:34.500 [main] DEBUG com.intuit.karate - response time in milliseconds: 67
1 < 200
1 < Date: Thu, 30 Nov 2023 16:19:34 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701360527&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0MbLxtcb3I7ewQxTt%2BEUrshCO4aHMiKWHNmIIp9ZiKY%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701360527&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=0MbLxtcb3I7ewQxTt%2BEUrshCO4aHMiKWHNmIIp9ZiKY%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 647
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e469adfaeda5e6-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:19:34.510 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:19:34.517 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:19:34.589 [main] DEBUG com.intuit.karate - response time in milliseconds: 72
1 < 200
1 < Date: Thu, 30 Nov 2023 16:19:34 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701237016&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=IjVHIdsDvuLmm06JyWoRcFaBHkF6wyng%2FDMsjdfGF%2Bw%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701237016&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=IjVHIdsDvuLmm06JyWoRcFaBHkF6wyng%2FDMsjdfGF%2Bw%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 1732
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e469ae7d411b1f-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:19:34.596 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:19:34.602 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:19:34.665 [main] DEBUG com.intuit.karate - response time in milliseconds: 63
1 < 200
1 < Date: Thu, 30 Nov 2023 16:19:34 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1699789462&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bxOVqyTot36HGUYBKlkeaatFNQgh6oGfJet2Po%2FJ79A%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1699789462&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bxOVqyTot36HGUYBKlkeaatFNQgh6oGfJet2Po%2FJ79A%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 3312
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e469af0b310156-GRU
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:19:34.674 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:19:34.708 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 301
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:19:35.183 [main] DEBUG com.intuit.karate - response time in milliseconds: 474
1 < 201
1 < Date: Thu, 30 Nov 2023 16:19:35 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 343
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361175&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=47Z7a%2BJgdtwUqvv%2Fwm955b4eOBgR6PinB1XgABfVj%2F8%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361175&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=47Z7a%2BJgdtwUqvv%2Fwm955b4eOBgR6PinB1XgABfVj%2F8%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"157-j+L6u3EkK3USiUcAq4Z38z8R9fM"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e469afbb3177c4-GRU
{"createdAt":"2023-11-30T16:19:35.314Z","data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"id":"434","support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:19:35.191 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:19:35.197 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 307
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:19:35.665 [main] DEBUG com.intuit.karate - response time in milliseconds: 467
1 < 201
1 < Date: Thu, 30 Nov 2023 16:19:35 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 349
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361175&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=47Z7a%2BJgdtwUqvv%2Fwm955b4eOBgR6PinB1XgABfVj%2F8%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361175&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=47Z7a%2BJgdtwUqvv%2Fwm955b4eOBgR6PinB1XgABfVj%2F8%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15d-Bo2XD+DPTOMItUwGaWjXzLKuz9E"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e469b2d9211178-GIG
{"createdAt":"2023-11-30T16:19:35.803Z","data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"id":"412","support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
13:19:35.671 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:19:35.677 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/1
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 301
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:19:36.155 [main] DEBUG com.intuit.karate - response time in milliseconds: 477
1 < 200
1 < Date: Thu, 30 Nov 2023 16:19:36 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361176&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=sgxen8oE6guPbMRSDk9ZYWXEuTFOWwmeR0KdEqyZZ60%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361176&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=sgxen8oE6guPbMRSDk9ZYWXEuTFOWwmeR0KdEqyZZ60%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"14c-JFxKbIA1RqUp3tLyDYZFHQRlPM4"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e469b5cfc551f8-GRU
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"},"updatedAt":"2023-11-30T16:19:36.290Z"}
13:19:36.161 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:19:36.166 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/2
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 307
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

13:19:36.615 [main] DEBUG com.intuit.karate - response time in milliseconds: 449
1 < 200
1 < Date: Thu, 30 Nov 2023 16:19:36 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361176&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=sgxen8oE6guPbMRSDk9ZYWXEuTFOWwmeR0KdEqyZZ60%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361176&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=sgxen8oE6guPbMRSDk9ZYWXEuTFOWwmeR0KdEqyZZ60%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"152-9bFLi6PVTEgyiA+qSx8AYQVjtvY"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e469b8cca94d3c-GRU
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"},"updatedAt":"2023-11-30T16:19:36.751Z"}
13:19:36.621 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:19:36.627 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:19:37.074 [main] DEBUG com.intuit.karate - response time in milliseconds: 447
1 < 204
1 < Date: Thu, 30 Nov 2023 16:19:37 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361177&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=ONJYQrsB%2FjcXsoGZ7QEJB68EwDQ3sKok5Yktmp9XG7Q%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361177&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=ONJYQrsB%2FjcXsoGZ7QEJB68EwDQ3sKok5Yktmp9XG7Q%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e469bba8c31b33-GRU

13:19:37.079 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:19:37.085 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:19:37.547 [main] DEBUG com.intuit.karate - response time in milliseconds: 462
1 < 204
1 < Date: Thu, 30 Nov 2023 16:19:37 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361177&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=ONJYQrsB%2FjcXsoGZ7QEJB68EwDQ3sKok5Yktmp9XG7Q%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361177&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=ONJYQrsB%2FjcXsoGZ7QEJB68EwDQ3sKok5Yktmp9XG7Q%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e469be9abb030c-GRU

13:19:37.559 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:19:37.565 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/register
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 68
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"password":"trabalho_muito_facil","email":"george.bluth@reqres.in"}

13:19:38.041 [main] DEBUG com.intuit.karate - response time in milliseconds: 476
1 < 200
1 < Date: Thu, 30 Nov 2023 16:19:38 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 36
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361178&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=%2F610JDE8w3ACn9C4Vu%2BoZpxSJARsd5rtYokfuc4FK6Y%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361178&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=%2F610JDE8w3ACn9C4Vu%2BoZpxSJARsd5rtYokfuc4FK6Y%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"24-JcRj48oECRihPfR4LQyKB23PLEU"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e469c19e560136-GRU
{"id":1,"token":"QpwL5tke4Pnpja7X1"}
13:19:38.046 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:19:38.050 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/200
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:19:38.673 [main] DEBUG com.intuit.karate - response time in milliseconds: 623
1 < 404
1 < Date: Thu, 30 Nov 2023 16:19:38 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 2
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361178&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=%2F610JDE8w3ACn9C4Vu%2BoZpxSJARsd5rtYokfuc4FK6Y%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361178&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=%2F610JDE8w3ACn9C4Vu%2BoZpxSJARsd5rtYokfuc4FK6Y%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e469c4ba656d42-GIG
{}
13:19:38.678 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:19:38.684 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/500
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


13:19:38.744 [main] DEBUG com.intuit.karate - response time in milliseconds: 60
1 < 404
1 < Date: Thu, 30 Nov 2023 16:19:38 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 2
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361122&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=l%2B9HmI0gbQlczOD8E8U%2FyVh7oFCb5rVOby4dNtFX4d8%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361122&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=l%2B9HmI0gbQlczOD8E8U%2FyVh7oFCb5rVOby4dNtFX4d8%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 56
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82e469c88c56a507-GRU
{}
13:19:38.748 [main] INFO  com.intuit.karate - karate.env system property was: null 
13:19:38.751 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/register
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"email":"email_de_um_novo_usuario_sem_senha@trabalho.inatel.br"}

13:19:39.205 [main] DEBUG com.intuit.karate - response time in milliseconds: 454
1 < 400
1 < Date: Thu, 30 Nov 2023 16:19:39 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 28
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701361179&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=IWJdWsYN0sUdAfkfeHmwGsZkFEg2WQ4yB6oO6293Dok%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701361179&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=IWJdWsYN0sUdAfkfeHmwGsZkFEg2WQ4yB6oO6293Dok%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"1c-NmpazMScs9tOqR7eDEesn+pqC9Q"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82e469c8eb6e77c3-GRU
{"error":"Missing password"}
18:39:58.499 [main] DEBUG com.intuit.karate.Suite - [config] classpath:karate-config.js
18:39:59.529 [main] INFO  com.intuit.karate - karate.env system property was: null 
18:39:59.883 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


18:40:00.885 [main] DEBUG com.intuit.karate - response time in milliseconds: 1000
1 < 200
1 < Date: Sun, 03 Dec 2023 21:40:00 GMT
1 < Content-Type: text/html; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701639600&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=IaCX19Iy51CQCGhNewcy%2FPmEbfdezY9V2foSvhyf0P0%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701639600&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=IaCX19Iy51CQCGhNewcy%2FPmEbfdezY9V2foSvhyf0P0%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82fef72eb8676509-GIG
<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Google Tag Manager -->
        <script>
            ;(function (w, d, s, l, i) {
                w[l] = w[l] || []
                w[l].push({
                    'gtm.start': new Date().getTime(),
                    event: 'gtm.js',
                })
                var f = d.getElementsByTagName(s)[0],
                    j = d.createElement(s),
                    dl = l != 'dataLayer' ? '&l=' + l : ''
                j.async = true
                j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
                f.parentNode.insertBefore(j, f)
            })(window, document, 'script', 'dataLayer', 'GTM-KB622KF')
        </script>
        <!-- End Google Tag Manager -->
        <script src="https://js.stripe.com/v3/"></script>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0"
        />
        <meta
            name="description"
            content="A hosted REST-API ready to respond to your AJAX requests"
        />
        <title>
            Reqres - A hosted REST-API ready to respond to your AJAX requests
        </title>
        <link
            href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css"
            rel="stylesheet"
        />

        <link rel="stylesheet" href="/css/app.css" />
        <script
            type="text/javascript"
            src="//m.servedby-buysellads.com/monetization.custom.js"
        ></script>
    </head>
    <body>
        <div class="header-content">
            <header class="main-header">
                <section class="wrap">
                    <h1 class="logo">
                        <a href="/"><img src="/img/logo.png" alt="" /></a>
                    </h1>
                </section>
            </header>
            <main class="the-sell">
                <div class="wrap">
                    <h2 class="tagline">
                        Test your front-end against a real API
                    </h2>
                    <section class="key-sells">
                        <div class="sell">
                            <div class="v-center">
                                <h3>Fake data</h3>
                                <p>
                                    No more tedious sample data creation, we've
                                    got it covered.
                                </p>
                            </div>
                            <i class="fa fa-cloud-download"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Real responses</h3>
                                <p>
                                    Develop with real response codes. GET, POST,
                                    PUT &amp; DELETE supported.
                                </p>
                            </div>
                            <i class="fa fa-code"></i>
                        </div>
                        <div class="sell">
                            <div class="v-center">
                                <h3>Always-on</h3>
                                <p>
                                    24/7 <strong><em>free</em></strong> access
                                    in your development phases. Go nuts.
                                </p>
                            </div>
                            <i class="fa fa-toggle-on"></i>
                        </div>
                    </section>
                    <h2 class="tagline">
                        A hosted REST-API ready to respond to your AJAX
                        requests.
                    </h2>
                    <div class="t-center main-arrow">
                        <i class="fa fa-arrow-circle-down"></i>
                    </div>
                    <script
                        async
                        type="text/javascript"
                        src="//cdn.carbonads.com/carbon.js?serve=CE7D6K3E&placement=reqresin"
                        id="_carbonads_js"
                    ></script>
                </div>
            </main>
        </div>
        <div class="container"><div class="home-content">
    <div class="wrap">
        <h2 class="t-center heading">Give it a try</h2>
        <div class="t-center">
            <button style="float: none">
                <a style="text-decoration: none" href="#support-heading"
                    >Support ReqRes</a
                >
            </button>
        </div>
        <hr class="dark" />
        <section class="console try-api-links" id="console">
            <div class="endpoints" data-key="endpoints">
                <ul>
                    <li
                        data-id="users"
                        data-key="endpoint"
                        data-http="get"
                        class="active"
                    >
                        <a data-key="try-link"> List users </a>
                    </li>
                    <li
                        data-id="users-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user </a>
                    </li>
                    <li
                        data-id="users-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single user not found </a>
                    </li>
                    <li data-id="unknown" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> List &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link"> Single &lt;resource&gt; </a>
                    </li>
                    <li
                        data-id="unknown-single-not-found"
                        data-key="endpoint"
                        data-http="get"
                    >
                        <a data-key="try-link">
                            Single &lt;resource&gt; not found
                        </a>
                    </li>
                    <li data-id="post" data-key="endpoint" data-http="post">
                        <a data-key="try-link"> Create </a>
                    </li>
                    <li data-id="put" data-key="endpoint" data-http="put">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="patch" data-key="endpoint" data-http="patch">
                        <a data-key="try-link"> Update </a>
                    </li>
                    <li data-id="delete" data-key="endpoint" data-http="delete">
                        <a data-key="try-link"> Delete </a>
                    </li>
                    <li
                        data-id="register-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - successful </a>
                    </li>
                    <li
                        data-id="register-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Register - unsuccessful </a>
                    </li>
                    <li
                        data-id="login-successful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - successful </a>
                    </li>
                    <li
                        data-id="login-unsuccessful"
                        data-key="endpoint"
                        data-http="post"
                    >
                        <a data-key="try-link"> Login - unsuccessful </a>
                    </li>
                    <li data-id="delay" data-key="endpoint" data-http="get">
                        <a data-key="try-link"> Delayed response </a>
                    </li>
                </ul>
            </div>
            <!--
			-->
            <div class="output">
                <div class="request">
                    <p class="request-title">
                        <strong
                            >Request <i class="fa fa-arrow-circle-up"></i>
                            <a
                                class="link try-link"
                                data-key="request-output-link"
                            >
                                <span class="url" data-key="url"></span>
                            </a>
                        </strong>
                    </p>
                    <pre data-key="output-request"></pre>
                </div>
                <!--
				-->
                <div class="response">
                    <p class="response-title">
                        <strong
                            >Response <i class="fa fa-arrow-circle-down"></i>
                            <span
                                class="response-code"
                                data-key="response-code"
                            ></span
                        ></strong>
                    </p>
                    <div data-key="spinner" class="spinner" hidden>
                        <div class="cube1"></div>
                        <div class="cube2"></div>
                    </div>
                    <pre data-key="output-response"></pre>
                </div>
            </div>
        </section>

        <hr class="dark" />

        <style>
            #impeccable-js {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                    Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',
                    Helvetica, Arial, sans-serif;
                margin-bottom: 2rem;
            }
            #impeccable-js * {
                margin: initial;
                padding: initial;
            }
            #impeccable-js a {
                display: flex;
                justify-content: space-between;
                align-items: center;
                z-index: 100;
                overflow: hidden;
                max-width: 1200px;
                border-radius: 3px;
                background-color: #161616;
                box-shadow: 0 1px 4px 1px hsla(0, 0%, 0%, 0.1);
            }
            #impeccable-js :any-link {
                text-decoration: none;
            }
            #impeccable-js img {
                padding: 10px;
                box-sizing: content-box;
                width: 125px;
                height: 50px;
            }
            #impeccable-js .sponsor-description {
                margin: 0 1em;
                font-size: 14px;
                line-height: 1.4;
                color: #fff;
                text-align: left;
                flex: 1;
            }
            #impeccable-js .sponsor-cta {
                margin-right: 14px;
                padding: 1em;
                font-size: 11px;
                font-weight: 500;
                line-height: 1;
                white-space: nowrap;
                border-radius: 4px;
            }
        </style>
        <div id="impeccable-js"></div>

        <div>
            <iframe
                src="https://codesandbox.io/embed/polished-butterfly-j17lt?autoresize=1&fontsize=14&theme=dark&view=preview"
                style="
                    width: 100%;
                    height: 700px;
                    border: 0;
                    border-radius: 4px;
                    overflow: hidden;
                "
                title="polished-butterfly-j17lt"
                allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
                sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"
            ></iframe>
        </div>

        <h2 class="t-center heading">It&rsquo;s all in the details</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-cloud"></i>
                    <p>
                        <strong
                            >Hosted on
                            <a href="https://www.heroku.com/">Heroku</a></strong
                        >
                    </p>
                    <p>
                        Which means 99.99% Uptime SLA.<br />All you need is the
                        base URL, and you're away: <br /><br /><span
                            class="code"
                            >https://reqres.in/api/</span
                        ><br /><br />The API is CORS enabled, so you can make
                        requests right from the browser, no matter what domain,
                        or even from somewhere like JSFiddle or JSBin.
                    </p>
                </li>
                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Language agnostic</strong></p>
                    <p>
                        A generic API that conforms to REST principles and
                        accepts a content type of <br /><br /><span class="code"
                            >application/json</span
                        ><br /><br />Any endpoint that contains
                        "&lt;resource&gt;" can be substituted with anything you
                        supply, ie. "products", "accounts", etc..the API will
                        just respond with various Pantone colours.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Getting started</h2>
        <hr class="dark" />
        <section class="getting-started t-center" id="getting-started">
            <i class="fa fa-html5"></i>
            <div class="swagger-link">
                <p>Check out the Swagger doc:</p>
                <a href="/api-docs">
                    <img
                        src="/img/swagger-logo-horizontal.jpeg"
                        alt="Swagger logo"
                    />
                </a>
            </div>
            <div class="tab">
                <p class="tab-title">jQuery</p>
                <p>If you, for example, want to create a fake user:</p>
                <pre>
$.ajax({
    url: "https://reqres.in/api/users",
    type: "POST",
    data: {
        name: "paul rudd",
        movies: ["I Love You Man", "Role Models"]
    },
    success: function(response){
        console.log(response);
    }
});
				</pre
                >
                <p>For which the response to this request will be...</p>
                <pre>
{
    "name":"paul rudd",
    "movies[]":[
        "I Love You Man",
        "Role Models"
    ],
    "id":"243",
    "createdAt":"2014-10-18T12:09:05.255Z"
}
				</pre
                >
                <p>
                    You can see that the API has sent us back whatever user
                    details we sent it, plus an
                    <span class="code">id</span> &amp;
                    <span class="code">createdAt</span> key for our use.
                </p>
            </div>
            <!--
			-->
            <div class="tab">
                <p class="tab-title">Native JavaScript</p>
                <p>
                    If you've already got your own application entities, ie.
                    "products", you can send them in the endpoint URL, like so:
                </p>
                <pre>
var xhr = new XMLHttpRequest();
xhr.open("GET", "https://reqres.in/api/products/3", true);
xhr.onload = function(){
    console.log(xhr.responseText);
};
xhr.send();
				</pre
                >
                <p>
                    It would be impossible for Reqres to know your application
                    data, so the API will respond from a sample set of Pantone
                    colour data
                </p>
                <pre>
{
    "data":{
        "id":3,
        "name":"true red",
        "year":2002,
        "pantone_value":"19-1664"
    }
}
				</pre
                >
                <p>
                    It's entirely possible to get sample data into your
                    interface in seconds!
                </p>
            </div>
        </section>

        <h2 class="t-center heading">Still don't really get it...</h2>
        <hr class="dark" />
        <section class="technical-bits" id="technical-bits">
            <ul class="iconed">
                <li>
                    <i class="fa fa-rocket"></i>
                    <p>
                        <strong>Reqres is a <em>real</em> API</strong>
                    </p>
                    <p>
                        Reqres simulates real application scenarios. If you want
                        to test a user authentication system, Reqres will
                        respond to a successful login/register request with a
                        token for you to identify a sample user, or with a 403
                        forbidden response to an unsuccessful login/registration
                        attempt. <br /><br />A common front-end scenario that's
                        easily forgotten is loading states, which can be easily
                        simulated through Reqres by appending <br /><span
                            class="code"
                            >?delay=&lt;a number of seconds&gt;</span
                        >
                        to any endpoint URL, which will delay the API response
                        time. Animated loading GIFs &amp; SVGs at the ready!
                    </p>
                </li>
                <li>
                    <i class="fa fa-bolt"></i>
                    <p><strong>Technical demos and tutorials</strong></p>
                    <p>
                        If you're trying to demonstrate a front-end
                        (JavaScript-based) concept, you don't really want the
                        hassle of setting up an API, or even a server
                        (especially during a live workshop or demo).<br /><br />
                        You can just write your HTML, CSS &amp; JavaScript as
                        usual and send Reqres AJAX requests, which will respond
                        with the expected response codes and output.
                    </p>
                </li>

                <li>
                    <i class="fa fa-file-code-o"></i>
                    <p><strong>Rapid prototyping of interfaces</strong></p>
                    <p>
                        When prototyping a new interface, you just want an API
                        <em>there</em>, with minimal setup effort involved.
                        Normally, I'd point people, who aren't too familiar with
                        backend programming, to
                        <a href="http://sailsjs.org">Sailsjs</a> which can
                        auto-generate a REST-API for you from the command
                        line.<br /><br />
                        However, you will need Node.js installed and some
                        familiarity of how Node.js works. If that sounds like
                        too much hassle and way too daunting, Reqres is just a
                        URL. Sending it an AJAX request is step 1...there is no
                        step 2.
                    </p>
                </li>
            </ul>
        </section>

        <h2 class="t-center heading">Peace of mind</h2>
        <hr class="dark" />
        <section class="peace-of-mind" id="peace-of-mind">
            <i class="fa fa-lock"></i>
            <p>
                It might seem <strong>pretty weird</strong> to be sending your
                data to a 3rd party API, but I can assure you, Reqres
                <strong>does not store any of your data</strong> at all. Once
                you send it to us, we just send it straight back...and then it's
                gone!
            </p>
        </section>

        <h2 id="support-heading" class="t-center heading">Support</h2>
        <hr class="dark" />
        <section class="pro support" id="support">
            <p class="breathe">
                ReqRes serves nearly
                <strong>half a billion requests each month</strong>, and is
                provided free-of-charge.
            </p>
            <p class="breathe">
                To keep ReqRes free, contributions towards running costs are
                appreciated!
            </p>

            <form class="breathe" action="#" id="supportForm">
                <div>
                    <input
                        type="radio"
                        id="supportOneTime"
                        name="support"
                        value="supportOneTime"
                        checked
                    />
                    <input
                        type="number"
                        placeholder="$10"
                        name="oneTimeAmount"
                    />
                    <label for="supportOneTime">One-time payment ($)</label>
                </div>
                <div>
                    <input
                        type="radio"
                        id="supportRecurring"
                        name="support"
                        value="supportRecurring"
                    />
                    <label for="supportRecurring"
                        >Monthly support ($5/month)</label
                    >
                </div>
                <button>Support ReqRes</button>
            </form>

            <p class="tiny">
                Selecting either option will redirect you to a hosted Stripe
                Checkout page to complete payment.
            </p>
        </section>

        <h2 class="t-center heading">Advertising</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <p>
                Do you want to advertise your jobs/tools/software/cats through
                Reqres to millions of developers every week? Click for more
                <a
                    href="https://www.dropbox.com/s/2w7gaeydx02qs40/Reqres_Advertising_Proposal.pdf?dl=0"
                    >info [pdf]</a
                >
                on the ads. <a href="/cdn-cgi/l/email-protection#d3bbb6bfbfbc93b1b6bdbbbca4b7bfb6fdbabe">Contact</a> for
                pricing and questions.
            </p>
        </section>

        <h2 class="t-center heading">Looking for pro features?</h2>
        <hr class="dark" />
        <section class="pro" id="pro">
            <button id="trigger-pro" class="large">Upgrade</button>

            <div id="pro-form" class="pro-form">
                <h3>
                    <strong>Ace.</strong> Pro features coming real soon. Stick
                    your email in here to be notified and help build our pro
                    tier.
                </h3>
                <!-- Begin Mailchimp Signup Form -->
                <link
                    href="//cdn-images.mailchimp.com/embedcode/classic-10_7.css"
                    rel="stylesheet"
                    type="text/css"
                />
                <div id="mc_embed_signup">
                    <form
                        action="https://benhowdle.us20.list-manage.com/subscribe/post?u=8c58165749318545a89cd1b21&amp;id=544f278469"
                        method="post"
                        id="mc-embedded-subscribe-form"
                        name="mc-embedded-subscribe-form"
                        class="validate"
                        target="_blank"
                        novalidate
                    >
                        <div id="mc_embed_signup_scroll">
                            <div class="mc-field-group">
                                <label for="mce-EMAIL">Email Address </label>
                                <input
                                    type="email"
                                    value=""
                                    name="EMAIL"
                                    class="required email"
                                    id="mce-EMAIL"
                                />
                            </div>
                            <div id="mce-responses" class="clear">
                                <div
                                    class="response"
                                    id="mce-error-response"
                                    style="display: none"
                                ></div>
                                <div
                                    class="response"
                                    id="mce-success-response"
                                    style="display: none"
                                ></div>
                            </div>
                            <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->
                            <div
                                style="position: absolute; left: -5000px"
                                aria-hidden="true"
                            >
                                <input
                                    type="text"
                                    name="b_8c58165749318545a89cd1b21_544f278469"
                                    tabindex="-1"
                                    value=""
                                />
                            </div>
                            <div class="clear">
                                <input
                                    type="submit"
                                    value="Subscribe"
                                    name="subscribe"
                                    id="mc-embedded-subscribe"
                                    class="button"
                                />
                            </div>
                        </div>
                    </form>
                </div>

                <!--End mc_embed_signup-->
            </div>
        </section>
    </div>
</div>
</div>
        <footer>
            <div class="wrap">
                <hr class="dark" />
                <p class="t-center">
                    Made for developers and designers by
                    <a href="https://benhowdle.im">Ben Howdle</a>
                </p>
            </div>
        </footer>
        <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/fastclick/1.0.3/fastclick.min.js"></script>
        <script src="/js/app.js"></script>
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script
            async
            src="https://www.googletagmanager.com/gtag/js?id=UA-174008107-1"
        ></script>
        <script>
            window.dataLayer = window.dataLayer || []
            function gtag() {
                dataLayer.push(arguments)
            }
            gtag('js', new Date())

            gtag('config', 'UA-174008107-1')
        </script>
        <script>
            ;(function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r
                ;(i[r] =
                    i[r] ||
                    function () {
                        ;(i[r].q = i[r].q || []).push(arguments)
                    }),
                    (i[r].l = 1 * new Date())
                ;(a = s.createElement(o)), (m = s.getElementsByTagName(o)[0])
                a.async = 1
                a.src = g
                m.parentNode.insertBefore(a, m)
            })(
                window,
                document,
                'script',
                '//www.google-analytics.com/analytics.js',
                'ga'
            )

            ga('create', 'UA-55888877-1', 'auto')
            ga('send', 'pageview')
        </script>
        <script>
            ;(function () {
                if (typeof _bsa !== 'undefined' && _bsa) {
                    _bsa.init(
                        'custom',
                        'CEBIP53J',
                        'placement:reqresin-sponsor',
                        {
                            target: '#impeccable-js',
                            template: `
        <a href="##link##" rel="sponsored noopener" target="_blank" title="##company## — ##tagline##">
        <img src="##logo##" style="background-color: ##backgroundColor##">
        <div class="sponsor-description">##description##</div>
        <div class="sponsor-cta" style="background-color: ##backgroundColor##; color: ##textColor##">##callToAction##</div>
        </a>
        `,
                        }
                    )
                }
            })()
        </script>
    </body>
</html>

18:40:00.912 [main] INFO  com.intuit.karate - karate.env system property was: null 
18:40:00.944 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


18:40:01.390 [main] DEBUG com.intuit.karate - response time in milliseconds: 444
1 < 200
1 < Date: Sun, 03 Dec 2023 21:40:01 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701639601&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=ekiHDjTWSkD5i0p%2FKcpu8yhp8WyF%2BhVzcM5ExN5crPg%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701639601&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=ekiHDjTWSkD5i0p%2FKcpu8yhp8WyF%2BhVzcM5ExN5crPg%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82fef7331fc41aca-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
18:40:01.411 [main] INFO  com.intuit.karate - karate.env system property was: null 
18:40:01.420 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users?page=/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


18:40:01.865 [main] DEBUG com.intuit.karate - response time in milliseconds: 445
1 < 200
1 < Date: Sun, 03 Dec 2023 21:40:02 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701639601&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=ekiHDjTWSkD5i0p%2FKcpu8yhp8WyF%2BhVzcM5ExN5crPg%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701639601&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=ekiHDjTWSkD5i0p%2FKcpu8yhp8WyF%2BhVzcM5ExN5crPg%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"3e4-2RLXvr5wTg9YQ6aH95CkYoFNuO8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82fef7361b421d15-GRU
{"per_page":6,"total":12,"data":[{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},{"last_name":"Wong","id":3,"avatar":"https:\/\/reqres.in\/img\/faces\/3-image.jpg","first_name":"Emma","email":"emma.wong@reqres.in"},{"last_name":"Holt","id":4,"avatar":"https:\/\/reqres.in\/img\/faces\/4-image.jpg","first_name":"Eve","email":"eve.holt@reqres.in"},{"last_name":"Morris","id":5,"avatar":"https:\/\/reqres.in\/img\/faces\/5-image.jpg","first_name":"Charles","email":"charles.morris@reqres.in"},{"last_name":"Ramos","id":6,"avatar":"https:\/\/reqres.in\/img\/faces\/6-image.jpg","first_name":"Tracey","email":"tracey.ramos@reqres.in"}],"page":1,"total_pages":2,"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
18:40:01.875 [main] INFO  com.intuit.karate - karate.env system property was: null 
18:40:01.882 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


18:40:01.927 [main] DEBUG com.intuit.karate - response time in milliseconds: 43
1 < 200
1 < Date: Sun, 03 Dec 2023 21:40:02 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1700814146&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=KG7tN8hTTN7T8pTwpkEGm%2BeKuK%2B7WHSdCyAhxR55BWA%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1700814146&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=KG7tN8hTTN7T8pTwpkEGm%2BeKuK%2B7WHSdCyAhxR55BWA%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-P3iKcVpIgCj9HqYeOOrGLX8qJVc"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 4273
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82fef738ecd0a589-GRU
{"data":{"last_name":"Bluth","id":1,"avatar":"https:\/\/reqres.in\/img\/faces\/1-image.jpg","first_name":"George","email":"george.bluth@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
18:40:01.935 [main] INFO  com.intuit.karate - karate.env system property was: null 
18:40:01.941 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


18:40:01.986 [main] DEBUG com.intuit.karate - response time in milliseconds: 44
1 < 200
1 < Date: Sun, 03 Dec 2023 21:40:02 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1699789462&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bxOVqyTot36HGUYBKlkeaatFNQgh6oGfJet2Po%2FJ79A%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1699789462&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=bxOVqyTot36HGUYBKlkeaatFNQgh6oGfJet2Po%2FJ79A%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"118-pbdwwFo9SKNhD3Lx5iHJyngpq00"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: HIT
1 < Age: 6580
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82fef7394ec000fa-GRU
{"data":{"last_name":"Weaver","id":2,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Janet","email":"janet.weaver@reqres.in"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
18:40:01.995 [main] INFO  com.intuit.karate - karate.env system property was: null 
18:40:02.047 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 301
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

18:40:02.512 [main] DEBUG com.intuit.karate - response time in milliseconds: 465
1 < 201
1 < Date: Sun, 03 Dec 2023 21:40:02 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 343
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701639602&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=PamXcNviaAwtg%2B5%2F49TfRkKwm%2FFXVUg4ZNjSpYhsIqE%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701639602&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=PamXcNviaAwtg%2B5%2F49TfRkKwm%2FFXVUg4ZNjSpYhsIqE%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"157-GcUL9fnT3X+vD21tzoMQx57/IpM"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82fef73a286c645a-GIG
{"createdAt":"2023-12-03T21:40:02.565Z","data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"id":"423","support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
18:40:02.520 [main] INFO  com.intuit.karate - karate.env system property was: null 
18:40:02.525 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/users
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 307
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

18:40:02.968 [main] DEBUG com.intuit.karate - response time in milliseconds: 442
1 < 201
1 < Date: Sun, 03 Dec 2023 21:40:03 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 349
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701639603&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=1CSIrSQAdPDFIwkJiTZsFbn27SoNmI9qp4Fsv440DFk%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701639603&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=1CSIrSQAdPDFIwkJiTZsFbn27SoNmI9qp4Fsv440DFk%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"15d-nFibZPGkWh9pAvHEC8kDjuYHO9A"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82fef73cffda1d34-GRU
{"createdAt":"2023-12-03T21:40:03.022Z","data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"id":"614","support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}
18:40:02.975 [main] INFO  com.intuit.karate - karate.env system property was: null 
18:40:02.981 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/1
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 301
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

18:40:03.426 [main] DEBUG com.intuit.karate - response time in milliseconds: 443
1 < 200
1 < Date: Sun, 03 Dec 2023 21:40:03 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701639603&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=1CSIrSQAdPDFIwkJiTZsFbn27SoNmI9qp4Fsv440DFk%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701639603&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=1CSIrSQAdPDFIwkJiTZsFbn27SoNmI9qp4Fsv440DFk%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"14c-le1QjzwOOv4FBxqkUu2UBQrJ6Ws"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82fef73fce23a4ea-GRU
{"data":{"last_name":"Costa","id":13,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Rodrigo","email":"email_de_teste@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"},"updatedAt":"2023-12-03T21:40:03.483Z"}
18:40:03.432 [main] INFO  com.intuit.karate - karate.env system property was: null 
18:40:03.438 [main] DEBUG com.intuit.karate - request:
1 > PUT https://reqres.in/api/users/2
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 307
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"}}

18:40:03.898 [main] DEBUG com.intuit.karate - response time in milliseconds: 460
1 < 200
1 < Date: Sun, 03 Dec 2023 21:40:04 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Transfer-Encoding: chunked
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701639603&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=1CSIrSQAdPDFIwkJiTZsFbn27SoNmI9qp4Fsv440DFk%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701639603&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=1CSIrSQAdPDFIwkJiTZsFbn27SoNmI9qp4Fsv440DFk%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"152-Tb8ZQ6SLBeuJKQYUPTmJ53Cx40I"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82fef742ad980183-GRU
{"data":{"last_name":"Flauzino","id":14,"avatar":"https:\/\/reqres.in\/img\/faces\/2-image.jpg","first_name":"Frederico","email":"email_de_teste2@trabalho.inatel.br"},"support":{"text":"To keep ReqRes free, contributions towards server costs are appreciated!","url":"https:\/\/reqres.in\/#support-heading"},"updatedAt":"2023-12-03T21:40:03.952Z"}
18:40:03.903 [main] INFO  com.intuit.karate - karate.env system property was: null 
18:40:03.907 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/1
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


18:40:04.372 [main] DEBUG com.intuit.karate - response time in milliseconds: 465
1 < 204
1 < Date: Sun, 03 Dec 2023 21:40:04 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701639604&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=AHvLlzuDMIRwmRuoPHsSKrDL0CwpfSyOeQfKVbCdyGA%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701639604&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=AHvLlzuDMIRwmRuoPHsSKrDL0CwpfSyOeQfKVbCdyGA%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82fef745cce864ab-GIG

18:40:04.377 [main] INFO  com.intuit.karate - karate.env system property was: null 
18:40:04.382 [main] DEBUG com.intuit.karate - request:
1 > DELETE https://reqres.in/api/users/2
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


18:40:04.825 [main] DEBUG com.intuit.karate - response time in milliseconds: 443
1 < 204
1 < Date: Sun, 03 Dec 2023 21:40:04 GMT
1 < Content-Length: 0
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701639604&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=AHvLlzuDMIRwmRuoPHsSKrDL0CwpfSyOeQfKVbCdyGA%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701639604&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=AHvLlzuDMIRwmRuoPHsSKrDL0CwpfSyOeQfKVbCdyGA%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82fef74889c84d2f-GRU

18:40:04.837 [main] INFO  com.intuit.karate - karate.env system property was: null 
18:40:04.845 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/register
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 68
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"password":"trabalho_muito_facil","email":"george.bluth@reqres.in"}

18:40:05.291 [main] DEBUG com.intuit.karate - response time in milliseconds: 445
1 < 200
1 < Date: Sun, 03 Dec 2023 21:40:05 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 36
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701639605&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=2GzTkWezyAATfWnQcRCr5bpZJDnmoz%2B7JsRskCxRgL4%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701639605&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=2GzTkWezyAATfWnQcRCr5bpZJDnmoz%2B7JsRskCxRgL4%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"24-JcRj48oECRihPfR4LQyKB23PLEU"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82fef74b6d4701b2-GRU
{"id":1,"token":"QpwL5tke4Pnpja7X1"}
18:40:05.296 [main] INFO  com.intuit.karate - karate.env system property was: null 
18:40:05.300 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/200
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


18:40:05.738 [main] DEBUG com.intuit.karate - response time in milliseconds: 438
1 < 404
1 < Date: Sun, 03 Dec 2023 21:40:05 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 2
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701639605&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=2GzTkWezyAATfWnQcRCr5bpZJDnmoz%2B7JsRskCxRgL4%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701639605&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=2GzTkWezyAATfWnQcRCr5bpZJDnmoz%2B7JsRskCxRgL4%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82fef74e4bf41b34-GRU
{}
18:40:05.744 [main] INFO  com.intuit.karate - karate.env system property was: null 
18:40:05.749 [main] DEBUG com.intuit.karate - request:
1 > GET https://reqres.in/api/users/500
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate


18:40:06.181 [main] DEBUG com.intuit.karate - response time in milliseconds: 432
1 < 404
1 < Date: Sun, 03 Dec 2023 21:40:06 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 2
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701639606&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=tVJXpeQd5YZcISjwpYs3PC993iRh7thDqw93TZI61%2BE%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701639606&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=tVJXpeQd5YZcISjwpYs3PC993iRh7thDqw93TZI61%2BE%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"2-vyGp6PvFo4RvsFtPoIWeCReyIC8"
1 < Via: 1.1 vegur
1 < Cache-Control: max-age=14400
1 < CF-Cache-Status: MISS
1 < Vary: Accept-Encoding
1 < Server: cloudflare
1 < CF-RAY: 82fef7511abfa5e9-GRU
{}
18:40:06.186 [main] INFO  com.intuit.karate - karate.env system property was: null 
18:40:06.190 [main] DEBUG com.intuit.karate - request:
1 > POST https://reqres.in/api/register
1 > Content-Type: application/json; charset=UTF-8
1 > Content-Length: 65
1 > Host: reqres.in
1 > Connection: Keep-Alive
1 > User-Agent: Apache-HttpClient/4.5.13 (Java/20.0.2)
1 > Accept-Encoding: gzip,deflate
{"email":"email_de_um_novo_usuario_sem_senha@trabalho.inatel.br"}

18:40:06.654 [main] DEBUG com.intuit.karate - response time in milliseconds: 463
1 < 400
1 < Date: Sun, 03 Dec 2023 21:40:06 GMT
1 < Content-Type: application/json; charset=utf-8
1 < Content-Length: 28
1 < Connection: keep-alive
1 < Report-To: {"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1701639606&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=tVJXpeQd5YZcISjwpYs3PC993iRh7thDqw93TZI61%2BE%3D"}]}
1 < Reporting-Endpoints: heroku-nel=https://nel.heroku.com/reports?ts=1701639606&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=tVJXpeQd5YZcISjwpYs3PC993iRh7thDqw93TZI61%2BE%3D
1 < Nel: {"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}
1 < X-Powered-By: Express
1 < Access-Control-Allow-Origin: *
1 < Etag: W/"1c-NmpazMScs9tOqR7eDEesn+pqC9Q"
1 < Via: 1.1 vegur
1 < CF-Cache-Status: DYNAMIC
1 < Server: cloudflare
1 < CF-RAY: 82fef7540e7864ed-GIG
{"error":"Missing password"}
